

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 12 14:55:36 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 17/06/2022 GMT
    64                           ; 
    65                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F47Q10 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    99   000000                     
   100 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   101   000000                     
   102 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   103   000000                     
   104 ;; Function _Timer0_Start is unused but had its address taken
   105   000000                     
   106 ;; Function _Timer0_Stop is unused but had its address taken
   107   000000                     
   108 ;; Function _Timer0_Reload is unused but had its address taken
   109   000000                     
   110 ;; Function _EUSART2_Deinitialize is unused but had its address taken
   111   000000                     
   112 ;; Function _EUSART2_TransmitEnable is unused but had its address taken
   113   000000                     
   114 ;; Function _EUSART2_TransmitDisable is unused but had its address taken
   115   000000                     
   116 ;; Function _EUSART2_AutoBaudSet is unused but had its address taken
   117   000000                     
   118 ;; Function _EUSART2_AutoBaudQuery is unused but had its address taken
   119   000000                     
   120 ;; Function _EUSART2_IsRxReady is unused but had its address taken
   121   000000                     
   122 ;; Function _EUSART2_IsTxDone is unused but had its address taken
   123   000000                     
   124 ;; Function _EUSART2_ErrorGet is unused but had its address taken
   125   000000                     
   126 ;; Function _EUSART2_Read is unused but had its address taken
   127   000000                     
   128 ;; Function _EUSART2_DefaultFramingErrorCallback is unused but had its address taken
   129   000000                     
   130 ;; Function _EUSART2_DefaultOverrunErrorCallback is unused but had its address taken
   131   000000                     
   132                           	psect	idataCOMRAM
   133   010D52                     __pidataCOMRAM:
   134                           	callstack 0
   135                           
   136                           ;initializer for _periodicCRCflag
   137   010D52  01                 	db	1
   138                           
   139                           	psect	mediumconst
   140   00FEBA                     __pmediumconst:
   141                           	callstack 0
   142   00FEBA  00                 	db	0
   143   00FEBB                     _UART2:
   144                           	callstack 0
   145   00FEBB  78                 	db	low _EUSART2_Initialize
   146   00FEBC  0A                 	db	high _EUSART2_Initialize
   147   00FEBD  01                 	db	low (_EUSART2_Initialize shr (0+16))
   148   00FEBE  00                 	db	0
   149   00FEBF  00                 	db	0
   150   00FEC0  00                 	db	0
   151   00FEC1  00                 	db	0
   152   00FEC2  00                 	db	0
   153   00FEC3  00                 	db	0
   154   00FEC4  2E                 	db	low _EUSART2_Write
   155   00FEC5  0D                 	db	high _EUSART2_Write
   156   00FEC6  01                 	db	low (_EUSART2_Write shr (0+16))
   157   00FEC7  00                 	db	0
   158   00FEC8  00                 	db	0
   159   00FEC9  00                 	db	0
   160   00FECA  8C                 	db	low _EUSART2_IsTxReady
   161   00FECB  0B                 	db	high _EUSART2_IsTxReady
   162   00FECC  01                 	db	low (_EUSART2_IsTxReady shr (0+16))
   163   00FECD  00                 	db	0
   164   00FECE  00                 	db	0
   165   00FECF  00                 	db	0
   166   00FED0  00                 	db	0
   167   00FED1  00                 	db	0
   168   00FED2  00                 	db	0
   169   00FED3  00                 	db	0
   170   00FED4  00                 	db	0
   171   00FED5  00                 	db	0
   172   00FED6  00                 	db	0
   173   00FED7  00                 	db	0
   174   00FED8  00                 	db	0
   175   00FED9  00                 	db	0
   176   00FEDA  00                 	db	0
   177   00FEDB  00                 	db	0
   178   00FEDC  00                 	db	0
   179   00FEDD  00                 	db	0
   180   00FEDE  00                 	db	0
   181   00FEDF  00                 	db	0
   182   00FEE0  00                 	db	0
   183   00FEE1  00                 	db	0
   184   00FEE2  00                 	db	0
   185   00FEE3  00                 	db	0
   186   00FEE4  00                 	db	0
   187   00FEE5  00                 	db	0
   188   00FEE6  00                 	db	0
   189   00FEE7  00                 	db	0
   190   00FEE8  00                 	db	0
   191   00FEE9  00                 	db	0
   192   00FEEA  00                 	db	0
   193   00FEEB  00                 	db	0
   194   00FEEC  00                 	db	0
   195   00FEED  00                 	db	0
   196   00FEEE  00                 	db	0
   197   00FEEF  00                 	db	0
   198   00FEF0  00                 	db	0
   199   00FEF1  00                 	db	0
   200   00FEF2  00                 	db	0
   201   00FEF3  00                 	db	0
   202   00FEF4  00                 	db	0
   203   00FEF5  00                 	db	0
   204   00FEF6  00                 	db	0
   205   00FEF7  4C                 	db	low _EUSART2_FramingErrorCallbackRegister
   206   00FEF8  0C                 	db	high _EUSART2_FramingErrorCallbackRegister
   207   00FEF9  01                 	db	low (_EUSART2_FramingErrorCallbackRegister shr (0+16))
   208   00FEFA  2A                 	db	low _EUSART2_OverrunErrorCallbackRegister
   209   00FEFB  0C                 	db	high _EUSART2_OverrunErrorCallbackRegister
   210   00FEFC  01                 	db	low (_EUSART2_OverrunErrorCallbackRegister shr (0+16))
   211   00FEFD  00                 	db	0
   212   00FEFE  00                 	db	0
   213   00FEFF  00                 	db	0
   214   00FF00  00                 	db	0
   215   00FF01  00                 	db	0
   216   00FF02  00                 	db	0
   217   00FF03                     __end_of_UART2:
   218                           	callstack 0
   219   00FF03                     _Timer0:
   220                           	callstack 0
   221   00FF03  B6                 	db	low _Timer0_Initialize
   222   00FF04  0B                 	db	high _Timer0_Initialize
   223   00FF05  01                 	db	low (_Timer0_Initialize shr (0+16))
   224   00FF06  00                 	db	0
   225   00FF07  00                 	db	0
   226   00FF08  00                 	db	0
   227   00FF09  00                 	db	0
   228   00FF0A  00                 	db	0
   229   00FF0B  00                 	db	0
   230   00FF0C  00                 	db	0
   231   00FF0D  00                 	db	0
   232   00FF0E  00                 	db	0
   233   00FF0F  EC                 	db	low _Timer0_OverflowCallbackRegister
   234   00FF10  0C                 	db	high _Timer0_OverflowCallbackRegister
   235   00FF11  01                 	db	low (_Timer0_OverflowCallbackRegister shr (0+16))
   236   00FF12  00                 	db	0
   237   00FF13  00                 	db	0
   238   00FF14  00                 	db	0
   239   00FF15                     __end_of_Timer0:
   240                           	callstack 0
   241   000000                     _TX2REG	set	3733
   242   000000                     _SP2BRGH	set	3735
   243   000000                     _TX2STA	set	3737
   244   000000                     _T0CON0	set	4052
   245   000000                     _T0CON1	set	4053
   246   000000                     _OSCTUNE	set	3800
   247   000000                     _OSCFRQ	set	3801
   248   000000                     _IOCEF	set	3874
   249   000000                     _IOCEN	set	3875
   250   000000                     _IOCEP	set	3876
   251   000000                     _IOCCF	set	3861
   252   000000                     _IOCCN	set	3862
   253   000000                     _IOCCP	set	3863
   254   000000                     _IOCBF	set	3853
   255   000000                     _IOCBN	set	3854
   256   000000                     _IOCBP	set	3855
   257   000000                     _INLVLE	set	3877
   258   000000                     _INLVLD	set	3869
   259   000000                     _INLVLC	set	3864
   260   000000                     _INLVLB	set	3856
   261   000000                     _SLRCONE	set	3878
   262   000000                     _SLRCOND	set	3870
   263   000000                     _SLRCONC	set	3865
   264   000000                     _SLRCONB	set	3857
   265   000000                     _ODCONE	set	3879
   266   000000                     _ODCOND	set	3871
   267   000000                     _ODCONC	set	3866
   268   000000                     _ODCONB	set	3858
   269   000000                     _WPUE	set	3880
   270   000000                     _WPUD	set	3872
   271   000000                     _WPUC	set	3867
   272   000000                     _WPUB	set	3859
   273   000000                     _ANSELE	set	3881
   274   000000                     _ANSELD	set	3873
   275   000000                     _ANSELC	set	3868
   276   000000                     _ANSELB	set	3860
   277   000000                     _NVMDATL	set	3964
   278   000000                     _NVMDATH	set	3965
   279   000000                     _NVMADRL	set	3961
   280   000000                     _NVMADRH	set	3962
   281   000000                     _NVMADRU	set	3963
   282   000000                     _NVMCON0bits	set	3967
   283   000000                     _NVMCON1bits	set	3968
   284   000000                     _SCANLADRU	set	3910
   285   000000                     _SCANHADRU	set	3913
   286   000000                     _SCANCON0	set	3914
   287   000000                     _CRCCON0	set	3959
   288   000000                     _SCANTRIG	set	3915
   289   000000                     _BAUD2CONbits	set	3738
   290   000000                     _TX2STAbits	set	3737
   291   000000                     _RC2STAbits	set	3736
   292   000000                     _SCANCON0bits	set	3914
   293   000000                     _LATEbits	set	3974
   294   000000                     _T0CON0bits	set	4052
   295   000000                     _CRCCON1bits	set	3960
   296   000000                     _CRCCON0bits	set	3959
   297   000000                     _RX2PPS	set	3720
   298   000000                     _PIE7bits	set	3780
   299   000000                     _PIR7bits	set	3788
   300   000000                     _SCANLADRL	set	3908
   301   000000                     _SCANLADRH	set	3909
   302   000000                     _SCANHADRL	set	3911
   303   000000                     _SCANHADRH	set	3912
   304   000000                     _CRCDATL	set	3951
   305   000000                     _CRCDATH	set	3952
   306   000000                     _CRCACCL	set	3953
   307   000000                     _CRCACCH	set	3954
   308   000000                     _CRCXORL	set	3957
   309   000000                     _CRCXORH	set	3958
   310   000000                     _CRCCON1	set	3960
   311   000000                     _OSCCON1	set	3795
   312   000000                     _RD0PPS	set	3834
   313   000000                     _INLVLA	set	3848
   314   000000                     _SLRCONA	set	3849
   315   000000                     _ODCONA	set	3850
   316   000000                     _WPUA	set	3851
   317   000000                     _ANSELA	set	3852
   318   000000                     _PIR3bits	set	3784
   319   000000                     _PIR0bits	set	3781
   320   000000                     _TMR0L	set	4050
   321   000000                     _TMR0H	set	4051
   322   000000                     _TRISE	set	3979
   323   000000                     _TRISD	set	3978
   324   000000                     _TRISC	set	3977
   325   000000                     _TRISB	set	3976
   326   000000                     _TRISA	set	3975
   327   000000                     _LATE	set	3974
   328   000000                     _LATD	set	3973
   329   000000                     _LATC	set	3972
   330   000000                     _LATB	set	3971
   331   000000                     _LATA	set	3970
   332   000000                     _NVMCON2	set	3969
   333   000000                     _INTCONbits	set	4082
   334   000000                     _TABLAT	set	4085
   335   000000                     _TBLPTRL	set	4086
   336   000000                     _TBLPTRH	set	4087
   337   000000                     _TBLPTRU	set	4088
   338   000000                     _RC2REG	set	3732
   339   000000                     _SP2BRGL	set	3734
   340   000000                     _RC2STA	set	3736
   341   000000                     _BAUD2CON	set	3738
   342   000000                     _PIE0bits	set	3773
   343   000000                     _IOCAF	set	3845
   344   000000                     _IOCAN	set	3846
   345   000000                     _IOCAP	set	3847
   346   000000                     _OSCCON3	set	3797
   347   000000                     _OSCEN	set	3799
   348   00FF15                     STR_5:
   349   00FF15  0A                 	db	10
   350   00FF16  0D                 	db	13
   351   00FF17  43                 	db	67	;'C'
   352   00FF18  52                 	db	82	;'R'
   353   00FF19  43                 	db	67	;'C'
   354   00FF1A  20                 	db	32
   355   00FF1B  65                 	db	101	;'e'
   356   00FF1C  72                 	db	114	;'r'
   357   00FF1D  72                 	db	114	;'r'
   358   00FF1E  6F                 	db	111	;'o'
   359   00FF1F  72                 	db	114	;'r'
   360   00FF20  21                 	db	33
   361   00FF21  20                 	db	32
   362   00FF22  43                 	db	67	;'C'
   363   00FF23  6F                 	db	111	;'o'
   364   00FF24  6D                 	db	109	;'m'
   365   00FF25  70                 	db	112	;'p'
   366   00FF26  75                 	db	117	;'u'
   367   00FF27  74                 	db	116	;'t'
   368   00FF28  65                 	db	101	;'e'
   369   00FF29  64                 	db	100	;'d'
   370   00FF2A  20                 	db	32
   371   00FF2B  43                 	db	67	;'C'
   372   00FF2C  52                 	db	82	;'R'
   373   00FF2D  43                 	db	67	;'C'
   374   00FF2E  20                 	db	32
   375   00FF2F  64                 	db	100	;'d'
   376   00FF30  6F                 	db	111	;'o'
   377   00FF31  65                 	db	101	;'e'
   378   00FF32  73                 	db	115	;'s'
   379   00FF33  6E                 	db	110	;'n'
   380   00FF34  27                 	db	39
   381   00FF35  74                 	db	116	;'t'
   382   00FF36  20                 	db	32
   383   00FF37  6D                 	db	109	;'m'
   384   00FF38  61                 	db	97	;'a'
   385   00FF39  74                 	db	116	;'t'
   386   00FF3A  63                 	db	99	;'c'
   387   00FF3B  68                 	db	104	;'h'
   388   00FF3C  20                 	db	32
   389   00FF3D  77                 	db	119	;'w'
   390   00FF3E  69                 	db	105	;'i'
   391   00FF3F  74                 	db	116	;'t'
   392   00FF40  68                 	db	104	;'h'
   393   00FF41  20                 	db	32
   394   00FF42  73                 	db	115	;'s'
   395   00FF43  74                 	db	116	;'t'
   396   00FF44  6F                 	db	111	;'o'
   397   00FF45  72                 	db	114	;'r'
   398   00FF46  65                 	db	101	;'e'
   399   00FF47  64                 	db	100	;'d'
   400   00FF48  20                 	db	32
   401   00FF49  43                 	db	67	;'C'
   402   00FF4A  52                 	db	82	;'R'
   403   00FF4B  43                 	db	67	;'C'
   404   00FF4C  2E                 	db	46
   405   00FF4D  0A                 	db	10
   406   00FF4E  00                 	db	0
   407   00FF4F                     STR_6:
   408   00FF4F  0A                 	db	10
   409   00FF50  0D                 	db	13
   410   00FF51  43                 	db	67	;'C'
   411   00FF52  52                 	db	82	;'R'
   412   00FF53  43                 	db	67	;'C'
   413   00FF54  20                 	db	32
   414   00FF55  4F                 	db	79	;'O'
   415   00FF56  4B                 	db	75	;'K'
   416   00FF57  21                 	db	33
   417   00FF58  20                 	db	32
   418   00FF59  43                 	db	67	;'C'
   419   00FF5A  6F                 	db	111	;'o'
   420   00FF5B  6D                 	db	109	;'m'
   421   00FF5C  70                 	db	112	;'p'
   422   00FF5D  75                 	db	117	;'u'
   423   00FF5E  74                 	db	116	;'t'
   424   00FF5F  65                 	db	101	;'e'
   425   00FF60  64                 	db	100	;'d'
   426   00FF61  20                 	db	32
   427   00FF62  43                 	db	67	;'C'
   428   00FF63  52                 	db	82	;'R'
   429   00FF64  43                 	db	67	;'C'
   430   00FF65  20                 	db	32
   431   00FF66  6D                 	db	109	;'m'
   432   00FF67  61                 	db	97	;'a'
   433   00FF68  74                 	db	116	;'t'
   434   00FF69  63                 	db	99	;'c'
   435   00FF6A  68                 	db	104	;'h'
   436   00FF6B  65                 	db	101	;'e'
   437   00FF6C  73                 	db	115	;'s'
   438   00FF6D  20                 	db	32
   439   00FF6E  77                 	db	119	;'w'
   440   00FF6F  69                 	db	105	;'i'
   441   00FF70  74                 	db	116	;'t'
   442   00FF71  68                 	db	104	;'h'
   443   00FF72  20                 	db	32
   444   00FF73  73                 	db	115	;'s'
   445   00FF74  74                 	db	116	;'t'
   446   00FF75  6F                 	db	111	;'o'
   447   00FF76  72                 	db	114	;'r'
   448   00FF77  65                 	db	101	;'e'
   449   00FF78  64                 	db	100	;'d'
   450   00FF79  20                 	db	32
   451   00FF7A  43                 	db	67	;'C'
   452   00FF7B  52                 	db	82	;'R'
   453   00FF7C  43                 	db	67	;'C'
   454   00FF7D  2E                 	db	46
   455   00FF7E  0A                 	db	10
   456   00FF7F  00                 	db	0
   457   00FF80                     STR_1:
   458   00FF80  0A                 	db	10
   459   00FF81  0D                 	db	13
   460   00FF82  43                 	db	67	;'C'
   461   00FF83  61                 	db	97	;'a'
   462   00FF84  6C                 	db	108	;'l'
   463   00FF85  63                 	db	99	;'c'
   464   00FF86  75                 	db	117	;'u'
   465   00FF87  6C                 	db	108	;'l'
   466   00FF88  61                 	db	97	;'a'
   467   00FF89  74                 	db	116	;'t'
   468   00FF8A  69                 	db	105	;'i'
   469   00FF8B  6E                 	db	110	;'n'
   470   00FF8C  67                 	db	103	;'g'
   471   00FF8D  20                 	db	32
   472   00FF8E  43                 	db	67	;'C'
   473   00FF8F  52                 	db	82	;'R'
   474   00FF90  43                 	db	67	;'C'
   475   00FF91  20                 	db	32
   476   00FF92  66                 	db	102	;'f'
   477   00FF93  6F                 	db	111	;'o'
   478   00FF94  72                 	db	114	;'r'
   479   00FF95  20                 	db	32
   480   00FF96  74                 	db	116	;'t'
   481   00FF97  68                 	db	104	;'h'
   482   00FF98  65                 	db	101	;'e'
   483   00FF99  20                 	db	32
   484   00FF9A  66                 	db	102	;'f'
   485   00FF9B  69                 	db	105	;'i'
   486   00FF9C  72                 	db	114	;'r'
   487   00FF9D  73                 	db	115	;'s'
   488   00FF9E  74                 	db	116	;'t'
   489   00FF9F  20                 	db	32
   490   00FFA0  74                 	db	116	;'t'
   491   00FFA1  69                 	db	105	;'i'
   492   00FFA2  6D                 	db	109	;'m'
   493   00FFA3  65                 	db	101	;'e'
   494   00FFA4  2E                 	db	46
   495   00FFA5  0A                 	db	10
   496   00FFA6  00                 	db	0
   497   00FFA7                     STR_4:
   498   00FFA7  0A                 	db	10
   499   00FFA8  0D                 	db	13
   500   00FFA9  50                 	db	80	;'P'
   501   00FFAA  65                 	db	101	;'e'
   502   00FFAB  72                 	db	114	;'r'
   503   00FFAC  69                 	db	105	;'i'
   504   00FFAD  6F                 	db	111	;'o'
   505   00FFAE  64                 	db	100	;'d'
   506   00FFAF  69                 	db	105	;'i'
   507   00FFB0  63                 	db	99	;'c'
   508   00FFB1  61                 	db	97	;'a'
   509   00FFB2  6C                 	db	108	;'l'
   510   00FFB3  6C                 	db	108	;'l'
   511   00FFB4  79                 	db	121	;'y'
   512   00FFB5  20                 	db	32
   513   00FFB6  63                 	db	99	;'c'
   514   00FFB7  6F                 	db	111	;'o'
   515   00FFB8  6D                 	db	109	;'m'
   516   00FFB9  70                 	db	112	;'p'
   517   00FFBA  75                 	db	117	;'u'
   518   00FFBB  74                 	db	116	;'t'
   519   00FFBC  65                 	db	101	;'e'
   520   00FFBD  64                 	db	100	;'d'
   521   00FFBE  20                 	db	32
   522   00FFBF  43                 	db	67	;'C'
   523   00FFC0  52                 	db	82	;'R'
   524   00FFC1  43                 	db	67	;'C'
   525   00FFC2  20                 	db	32
   526   00FFC3  69                 	db	105	;'i'
   527   00FFC4  73                 	db	115	;'s'
   528   00FFC5  20                 	db	32
   529   00FFC6  30                 	db	48	;'0'
   530   00FFC7  78                 	db	120	;'x'
   531   00FFC8  25                 	db	37
   532   00FFC9  34                 	db	52	;'4'
   533   00FFCA  78                 	db	120	;'x'
   534   00FFCB  2E                 	db	46
   535   00FFCC  00                 	db	0
   536   00FFCD                     STR_2:
   537   00FFCD  0A                 	db	10
   538   00FFCE  0D                 	db	13
   539   00FFCF  43                 	db	67	;'C'
   540   00FFD0  6F                 	db	111	;'o'
   541   00FFD1  6D                 	db	109	;'m'
   542   00FFD2  70                 	db	112	;'p'
   543   00FFD3  75                 	db	117	;'u'
   544   00FFD4  74                 	db	116	;'t'
   545   00FFD5  65                 	db	101	;'e'
   546   00FFD6  64                 	db	100	;'d'
   547   00FFD7  20                 	db	32
   548   00FFD8  43                 	db	67	;'C'
   549   00FFD9  52                 	db	82	;'R'
   550   00FFDA  43                 	db	67	;'C'
   551   00FFDB  20                 	db	32
   552   00FFDC  69                 	db	105	;'i'
   553   00FFDD  73                 	db	115	;'s'
   554   00FFDE  20                 	db	32
   555   00FFDF  30                 	db	48	;'0'
   556   00FFE0  78                 	db	120	;'x'
   557   00FFE1  25                 	db	37
   558   00FFE2  34                 	db	52	;'4'
   559   00FFE3  78                 	db	120	;'x'
   560   00FFE4  2E                 	db	46
   561   00FFE5  0A                 	db	10
   562   00FFE6  00                 	db	0
   563   00FFE7                     STR_3:
   564   00FFE7  0A                 	db	10
   565   00FFE8  0D                 	db	13
   566   00FFE9  53                 	db	83	;'S'
   567   00FFEA  74                 	db	116	;'t'
   568   00FFEB  6F                 	db	111	;'o'
   569   00FFEC  72                 	db	114	;'r'
   570   00FFED  65                 	db	101	;'e'
   571   00FFEE  64                 	db	100	;'d'
   572   00FFEF  20                 	db	32
   573   00FFF0  43                 	db	67	;'C'
   574   00FFF1  52                 	db	82	;'R'
   575   00FFF2  43                 	db	67	;'C'
   576   00FFF3  20                 	db	32
   577   00FFF4  69                 	db	105	;'i'
   578   00FFF5  73                 	db	115	;'s'
   579   00FFF6  20                 	db	32
   580   00FFF7  30                 	db	48	;'0'
   581   00FFF8  78                 	db	120	;'x'
   582   00FFF9  25                 	db	37
   583   00FFFA  34                 	db	52	;'4'
   584   00FFFB  78                 	db	120	;'x'
   585   00FFFC  2E                 	db	46
   586   00FFFD  00                 	db	0
   587   00FFFE  00                 	db	0	; dummy byte at the end
   588   000000                     
   589                           ; #config settings
   590                           
   591                           	psect	cinit
   592   010B2C                     __pcinit:
   593                           	callstack 0
   594   010B2C                     start_initialization:
   595                           	callstack 0
   596   010B2C                     __initialization:
   597                           	callstack 0
   598                           
   599                           ; Initialize objects allocated to COMRAM (1 bytes)
   600                           ; load TBLPTR registers with __pidataCOMRAM
   601   010B2C  0E52               	movlw	low __pidataCOMRAM
   602   010B2E  6EF6               	movwf	tblptrl,c
   603   010B30  0E0D               	movlw	high __pidataCOMRAM
   604   010B32  6EF7               	movwf	tblptrh,c
   605   010B34  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   606   010B36  6EF8               	movwf	tblptru,c
   607   010B38  0009               	tblrd		*+	;fetch initializer
   608   010B3A  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   609                           
   610                           ; Clear objects allocated to BANK0 (47 bytes)
   611   010B3E  EE00  F060         	lfsr	0,__pbssBANK0
   612   010B42  0E2F               	movlw	47
   613   010B44                     clear_0:
   614   010B44  6AEE               	clrf	postinc0,c
   615   010B46  06E8               	decf	wreg,f,c
   616   010B48  E1FD               	bnz	clear_0
   617                           
   618                           ; Clear objects allocated to COMRAM (12 bytes)
   619   010B4A  EE00  F052         	lfsr	0,__pbssCOMRAM
   620   010B4E  0E0C               	movlw	12
   621   010B50                     clear_1:
   622   010B50  6AEE               	clrf	postinc0,c
   623   010B52  06E8               	decf	wreg,f,c
   624   010B54  E1FD               	bnz	clear_1
   625   010B56                     end_of_initialization:
   626                           	callstack 0
   627   010B56                     __end_of__initialization:
   628                           	callstack 0
   629   010B56  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   630   010B58  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   631   010B5A  0100               	movlb	0
   632   010B5C  EF00  F080         	goto	_main	;jump to C main() function
   633                           
   634                           	psect	bssCOMRAM
   635   000052                     __pbssCOMRAM:
   636                           	callstack 0
   637   000052                     _INT0_InterruptHandler:
   638                           	callstack 0
   639   000052                     	ds	3
   640   000055                     _width:
   641                           	callstack 0
   642   000055                     	ds	2
   643   000057                     _prec:
   644                           	callstack 0
   645   000057                     	ds	2
   646   000059                     _eusart2RxLastError:
   647                           	callstack 0
   648   000059                     	ds	2
   649   00005B                     _flags:
   650                           	callstack 0
   651   00005B                     	ds	1
   652   00005C                     _unlockKeyHigh:
   653                           	callstack 0
   654   00005C                     	ds	1
   655   00005D                     _unlockKeyLow:
   656                           	callstack 0
   657   00005D                     	ds	1
   658                           
   659                           	psect	dataCOMRAM
   660   00005E                     __pdataCOMRAM:
   661                           	callstack 0
   662   00005E                     _periodicCRCflag:
   663                           	callstack 0
   664   00005E                     	ds	1
   665                           
   666                           	psect	bssBANK0
   667   000060                     __pbssBANK0:
   668                           	callstack 0
   669   000060                     _EUSART2_OverrunErrorHandler:
   670                           	callstack 0
   671   000060                     	ds	3
   672   000063                     _EUSART2_FramingErrorHandler:
   673                           	callstack 0
   674   000063                     	ds	3
   675   000066                     _Timer0_OverflowCallback:
   676                           	callstack 0
   677   000066                     	ds	3
   678   000069                     _INT2_InterruptHandler:
   679                           	callstack 0
   680   000069                     	ds	3
   681   00006C                     _INT1_InterruptHandler:
   682                           	callstack 0
   683   00006C                     	ds	3
   684   00006F                     _dbuf:
   685                           	callstack 0
   686   00006F                     	ds	32
   687                           
   688                           	psect	cstackCOMRAM
   689   000001                     __pcstackCOMRAM:
   690                           	callstack 0
   691   000001                     ??_INTERRUPT_InterruptManager:
   692   000001                     
   693                           ; 2 bytes @ 0x0
   694   000001                     	ds	2
   695   000003                     ?_CRC_ReverseValue:
   696                           	callstack 0
   697   000003                     ?___wmul:
   698                           	callstack 0
   699   000003                     _NVM_IsBusy$336:
   700                           	callstack 0
   701   000003                     _EUSART2_IsTxReady$1154:
   702                           	callstack 0
   703   000003                     EUSART2_Write@txData:
   704                           	callstack 0
   705   000003                     CRC_ReverseValue@crc:
   706                           	callstack 0
   707   000003                     NVM_UnlockKeySet@unlockKey:
   708                           	callstack 0
   709   000003                     ___wmul@multiplier:
   710                           	callstack 0
   711   000003                     CRC_SetScannerAddressLimit@startAddr:
   712                           	callstack 0
   713   000003                     EEPROM_Read@address:
   714                           	callstack 0
   715   000003                     EEPROM_Write@address:
   716                           	callstack 0
   717   000003                     INT0_SetInterruptHandler@InterruptHandler:
   718                           	callstack 0
   719   000003                     INT1_SetInterruptHandler@InterruptHandler:
   720                           	callstack 0
   721   000003                     INT2_SetInterruptHandler@InterruptHandler:
   722                           	callstack 0
   723   000003                     Timer0_OverflowCallbackRegister@CallbackHandler:
   724                           	callstack 0
   725   000003                     EUSART2_FramingErrorCallbackRegister@callbackHandler:
   726                           	callstack 0
   727   000003                     EUSART2_OverrunErrorCallbackRegister@callbackHandler:
   728                           	callstack 0
   729                           
   730                           ; 3 bytes @ 0x2
   731   000003                     	ds	1
   732   000004                     putch@txData:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x3
   736   000004                     	ds	1
   737   000005                     ??_CRC_ReverseValue:
   738   000005                     ___wmul@multiplicand:
   739                           	callstack 0
   740   000005                     fputc@c:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x4
   744   000005                     	ds	1
   745   000006                     ??_EEPROM_Read:
   746   000006                     EEPROM_Write@data:
   747                           	callstack 0
   748   000006                     CRC_ReverseValue@reverse:
   749                           	callstack 0
   750   000006                     CRC_SetScannerAddressLimit@endAddr:
   751                           	callstack 0
   752                           
   753                           ; 3 bytes @ 0x5
   754   000006                     	ds	1
   755   000007                     ??_EEPROM_Write:
   756   000007                     ___wmul@product:
   757                           	callstack 0
   758   000007                     fputc@fp:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x6
   762   000007                     	ds	1
   763   000008                     CRC_ReverseValue@mask:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x7
   767   000008                     	ds	1
   768   000009                     ??_fputc:
   769   000009                     ??_CRC_SetScannerAddressLimit:
   770   000009                     ?_read_prec_or_width:
   771                           	callstack 0
   772   000009                     read_prec_or_width@fmt:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x8
   776   000009                     	ds	1
   777   00000A                     ?_CRC_GetCalculatedResult:
   778                           	callstack 0
   779   00000A                     EEPROM_Write@globalInterruptBitValue:
   780                           	callstack 0
   781   00000A                     CRC_GetCalculatedResult@xorValue:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x9
   785   00000A                     	ds	1
   786   00000B                     read_prec_or_width@ap:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0xA
   790   00000B                     	ds	1
   791   00000C                     ??_CRC_GetCalculatedResult:
   792                           
   793                           ; 1 bytes @ 0xB
   794   00000C                     	ds	1
   795   00000D                     ??_read_prec_or_width:
   796                           
   797                           ; 1 bytes @ 0xC
   798   00000D                     	ds	1
   799   00000E                     CRC_GetCalculatedResult@reverse:
   800                           	callstack 0
   801   00000E                     fputs@s:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xD
   805   00000E                     	ds	1
   806   00000F                     read_prec_or_width@c:
   807                           	callstack 0
   808   00000F                     CRC_GetCalculatedResult@result:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0xE
   812   00000F                     	ds	1
   813   000010                     read_prec_or_width@n:
   814                           	callstack 0
   815   000010                     fputs@fp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0xF
   819   000010                     	ds	1
   820   000011                     ?_CalculateFlashCRC:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x10
   824   000011                     	ds	1
   825   000012                     fputs@c:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x11
   829   000012                     	ds	1
   830   000013                     CalculateFlashCRC@CRCVal:
   831                           	callstack 0
   832   000013                     fputs@i:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x12
   836   000013                     	ds	2
   837   000015                     CalculateFlashCRC@busyStatus:
   838                           	callstack 0
   839   000015                     pad@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x14
   843   000015                     	ds	1
   844   000016                     _CalculateFlashCRC$1266:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x15
   848   000016                     	ds	1
   849   000017                     pad@buf:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x16
   853   000017                     	ds	2
   854   000019                     pad@p:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x18
   858   000019                     	ds	2
   859   00001B                     ??_pad:
   860                           
   861                           ; 1 bytes @ 0x1A
   862   00001B                     	ds	1
   863   00001C                     pad@i:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x1B
   867   00001C                     	ds	2
   868   00001E                     pad@w:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x1D
   872   00001E                     	ds	2
   873   000020                     xtoa@fp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x1F
   877   000020                     	ds	2
   878   000022                     xtoa@d:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x21
   882   000022                     	ds	2
   883   000024                     ??_xtoa:
   884                           
   885                           ; 1 bytes @ 0x23
   886   000024                     	ds	3
   887   000027                     xtoa@w:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x26
   891   000027                     	ds	2
   892   000029                     _xtoa$1772:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x28
   896   000029                     	ds	2
   897   00002B                     xtoa@p:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x2A
   901   00002B                     	ds	2
   902   00002D                     xtoa@i:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x2C
   906   00002D                     	ds	2
   907   00002F                     xtoa@c:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x2E
   911   00002F                     	ds	1
   912   000030                     vfpfcnvrt@fp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x2F
   916   000030                     	ds	2
   917   000032                     vfpfcnvrt@fmt:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x31
   921   000032                     	ds	2
   922   000034                     vfpfcnvrt@ap:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x33
   926   000034                     	ds	2
   927   000036                     ??_vfpfcnvrt:
   928                           
   929                           ; 1 bytes @ 0x35
   930   000036                     	ds	2
   931   000038                     vfpfcnvrt@convarg:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x37
   935   000038                     	ds	4
   936   00003C                     vfpfcnvrt@cp:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x3B
   940   00003C                     	ds	2
   941   00003E                     ?_vfprintf:
   942                           	callstack 0
   943   00003E                     vfprintf@fp:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x3D
   947   00003E                     	ds	2
   948   000040                     vfprintf@fmt:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x3F
   952   000040                     	ds	2
   953   000042                     vfprintf@ap:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x41
   957   000042                     	ds	2
   958   000044                     vfprintf@cfmt:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x43
   962   000044                     	ds	2
   963   000046                     ?_printf:
   964                           	callstack 0
   965   000046                     printf@fmt:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x45
   969   000046                     	ds	4
   970   00004A                     printf@ap:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x49
   974   00004A                     	ds	2
   975   00004C                     ??_main:
   976                           
   977                           ; 1 bytes @ 0x4B
   978   00004C                     	ds	2
   979   00004E                     main@CRCComputed:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x4D
   983   00004E                     	ds	2
   984   000050                     main@CRCStored:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x4F
   988   000050                     	ds	2
   989                           
   990 ;;
   991 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   992 ;;
   993 ;; *************** function _main *****************
   994 ;; Defined at:
   995 ;;		line 56 in file "main.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  CRCStored       2   79[COMRAM] volatile unsigned short 
  1000 ;;  CRCComputed     2   77[COMRAM] volatile unsigned short 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  2  653[None  ] int 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1014 ;;Total ram usage:        6 bytes
  1015 ;; Hardware stack levels required when called: 12
  1016 ;; This function calls:
  1017 ;;		_CalculateFlashCRC
  1018 ;;		_EEPROM_Read
  1019 ;;		_EEPROM_Write
  1020 ;;		_NVM_IsBusy
  1021 ;;		_NVM_UnlockKeySet
  1022 ;;		_SYSTEM_Initialize
  1023 ;;		_Timer0_OverflowCallbackRegister
  1024 ;;		_printf
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text0
  1031   010000                     __ptext0:
  1032                           	callstack 0
  1033   010000                     _main:
  1034                           	callstack 19
  1035   010000                     
  1036                           ;main.c: 58:     volatile uint16_t CRCStored = 0x0000;
  1037   010000  0E00               	movlw	0
  1038   010002  6E51               	movwf	(main@CRCStored+1)^0,c	;volatile
  1039   010004  0E00               	movlw	0
  1040   010006  6E50               	movwf	main@CRCStored^0,c	;volatile
  1041   010008                     
  1042                           ;main.c: 59:     volatile uint16_t CRCComputed = 0xFFFF;
  1043   010008  684E               	setf	main@CRCComputed^0,c	;volatile
  1044   01000A  684F               	setf	(main@CRCComputed+1)^0,c	;volatile
  1045   01000C                     
  1046                           ;main.c: 61:     SYSTEM_Initialize();
  1047   01000C  EC46  F086         	call	_SYSTEM_Initialize	;wreg free
  1048   010010                     
  1049                           ;main.c: 68:     (INTCONbits.GIE = 1);
  1050   010010  8EF2               	bsf	242,7,c	;volatile
  1051   010012                     
  1052                           ;main.c: 74:     (INTCONbits.PEIE = 1);
  1053   010012  8CF2               	bsf	242,6,c	;volatile
  1054   010014                     
  1055                           ;main.c: 79:     Timer0_OverflowCallbackRegister(TMR0_UserInterruptHandler);
  1056   010014  0E44               	movlw	low _TMR0_UserInterruptHandler
  1057   010016  6E03               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^0,c
  1058   010018  0E0D               	movlw	high _TMR0_UserInterruptHandler
  1059   01001A  6E04               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  1060   01001C  0E01               	movlw	low (_TMR0_UserInterruptHandler shr (0+16))
  1061   01001E  6E05               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  1062   010020  EC76  F086         	call	_Timer0_OverflowCallbackRegister	;wreg free
  1063   010024                     
  1064                           ;main.c: 80:     NVM_UnlockKeySet((0xAA55U));
  1065   010024  0EAA               	movlw	170
  1066   010026  6E04               	movwf	(NVM_UnlockKeySet@unlockKey+1)^0,c
  1067   010028  0E55               	movlw	85
  1068   01002A  6E03               	movwf	NVM_UnlockKeySet@unlockKey^0,c
  1069   01002C  EC92  F086         	call	_NVM_UnlockKeySet	;wreg free
  1070   010030                     
  1071                           ;main.c: 96:     CRCStored = EEPROM_Read((0x310001));
  1072   010030  0E01               	movlw	1
  1073   010032  6E03               	movwf	EEPROM_Read@address^0,c
  1074   010034  0E00               	movlw	0
  1075   010036  6E04               	movwf	(EEPROM_Read@address+1)^0,c
  1076   010038  0E31               	movlw	49
  1077   01003A  6E05               	movwf	(EEPROM_Read@address+2)^0,c
  1078   01003C  ECB0  F085         	call	_EEPROM_Read	;wreg free
  1079   010040  6E4C               	movwf	??_main^0,c
  1080   010042  504C               	movf	??_main^0,w,c
  1081   010044  6E50               	movwf	main@CRCStored^0,c	;volatile
  1082   010046  6A51               	clrf	(main@CRCStored+1)^0,c	;volatile
  1083                           
  1084                           ;main.c: 97:     CRCStored = (CRCStored << 8) & 0xFF00;
  1085   010048  5050               	movf	main@CRCStored^0,w,c	;volatile
  1086   01004A  6E4D               	movwf	(??_main+1)^0,c
  1087   01004C  6A4C               	clrf	??_main^0,c
  1088   01004E  0E00               	movlw	0
  1089   010050  144C               	andwf	??_main^0,w,c
  1090   010052  6E50               	movwf	main@CRCStored^0,c	;volatile
  1091   010054  0EFF               	movlw	255
  1092   010056  144D               	andwf	(??_main+1)^0,w,c
  1093   010058  6E51               	movwf	(main@CRCStored+1)^0,c	;volatile
  1094   01005A                     
  1095                           ;main.c: 98:     CRCStored |= EEPROM_Read((0x310000));
  1096   01005A  0E00               	movlw	0
  1097   01005C  6E03               	movwf	EEPROM_Read@address^0,c
  1098   01005E  0E00               	movlw	0
  1099   010060  6E04               	movwf	(EEPROM_Read@address+1)^0,c
  1100   010062  0E31               	movlw	49
  1101   010064  6E05               	movwf	(EEPROM_Read@address+2)^0,c
  1102   010066  ECB0  F085         	call	_EEPROM_Read	;wreg free
  1103   01006A  6E4C               	movwf	??_main^0,c
  1104   01006C  504C               	movf	??_main^0,w,c
  1105   01006E  1250               	iorwf	main@CRCStored^0,f,c	;volatile
  1106   010070                     
  1107                           ;main.c: 101:     if(CRCStored == (0xFFFF))
  1108   010070  2850               	incf	main@CRCStored^0,w,c	;volatile
  1109   010072  E106               	bnz	u1421
  1110   010074  2851               	incf	(main@CRCStored+1)^0,w,c	;volatile
  1111   010076  A4D8               	btfss	status,2,c
  1112   010078  EF40  F080         	goto	u1421
  1113   01007C  EF42  F080         	goto	u1420
  1114   010080                     u1421:
  1115   010080  EF80  F080         	goto	l2700
  1116   010084                     u1420:
  1117   010084                     
  1118                           ;main.c: 102:     {;main.c: 103:         printf("\n\rCalculating CRC for the first time.
      +                          \n");
  1119   010084  0E80               	movlw	low STR_1
  1120   010086  6E46               	movwf	printf@fmt^0,c
  1121   010088  0EFF               	movlw	high STR_1
  1122   01008A  6E47               	movwf	(printf@fmt+1)^0,c
  1123   01008C  ECEF  F085         	call	_printf	;wreg free
  1124   010090                     
  1125                           ;main.c: 106:         CRCComputed = CalculateFlashCRC();
  1126   010090  ECAF  F083         	call	_CalculateFlashCRC	;wreg free
  1127   010094  C011  F04E         	movff	?_CalculateFlashCRC,main@CRCComputed	;volatile
  1128   010098  C012  F04F         	movff	?_CalculateFlashCRC+1,main@CRCComputed+1	;volatile
  1129   01009C                     
  1130                           ;main.c: 107:         printf("\n\rComputed CRC is 0x%4x.\n",(CRCComputed));
  1131   01009C  0ECD               	movlw	low STR_2
  1132   01009E  6E46               	movwf	printf@fmt^0,c
  1133   0100A0  0EFF               	movlw	high STR_2
  1134   0100A2  6E47               	movwf	(printf@fmt+1)^0,c
  1135   0100A4  C04E  F048         	movff	main@CRCComputed,?_printf+2	;volatile
  1136   0100A8  C04F  F049         	movff	main@CRCComputed+1,?_printf+3	;volatile
  1137   0100AC  ECEF  F085         	call	_printf	;wreg free
  1138   0100B0                     
  1139                           ;main.c: 110:         EEPROM_Write((0x310000), (uint8_t)(CRCComputed));
  1140   0100B0  0E00               	movlw	0
  1141   0100B2  6E03               	movwf	EEPROM_Write@address^0,c
  1142   0100B4  0E00               	movlw	0
  1143   0100B6  6E04               	movwf	(EEPROM_Write@address+1)^0,c
  1144   0100B8  0E31               	movlw	49
  1145   0100BA  6E05               	movwf	(EEPROM_Write@address+2)^0,c
  1146   0100BC  C04E  F006         	movff	main@CRCComputed,EEPROM_Write@data	;volatile
  1147   0100C0  ECAD  F084         	call	_EEPROM_Write	;wreg free
  1148   0100C4                     l2694:
  1149   0100C4  EC5C  F084         	call	_NVM_IsBusy	;wreg free
  1150   0100C8  0900               	iorlw	0
  1151   0100CA  A4D8               	btfss	status,2,c
  1152   0100CC  EF6A  F080         	goto	u1431
  1153   0100D0  EF6C  F080         	goto	u1430
  1154   0100D4                     u1431:
  1155   0100D4  EF62  F080         	goto	l2694
  1156   0100D8                     u1430:
  1157   0100D8                     
  1158                           ;main.c: 112:         EEPROM_Write((0x310001), (uint8_t)(CRCComputed >> 8));
  1159   0100D8  0E01               	movlw	1
  1160   0100DA  6E03               	movwf	EEPROM_Write@address^0,c
  1161   0100DC  0E00               	movlw	0
  1162   0100DE  6E04               	movwf	(EEPROM_Write@address+1)^0,c
  1163   0100E0  0E31               	movlw	49
  1164   0100E2  6E05               	movwf	(EEPROM_Write@address+2)^0,c
  1165   0100E4  504F               	movf	(main@CRCComputed+1)^0,w,c	;volatile
  1166   0100E6  6E06               	movwf	EEPROM_Write@data^0,c
  1167   0100E8  ECAD  F084         	call	_EEPROM_Write	;wreg free
  1168   0100EC                     l2698:
  1169   0100EC  EC5C  F084         	call	_NVM_IsBusy	;wreg free
  1170   0100F0  0900               	iorlw	0
  1171   0100F2  A4D8               	btfss	status,2,c
  1172   0100F4  EF7E  F080         	goto	u1441
  1173   0100F8  EF80  F080         	goto	u1440
  1174   0100FC                     u1441:
  1175   0100FC  EF76  F080         	goto	l2698
  1176   010100                     u1440:
  1177   010100                     l2700:
  1178                           
  1179                           ;main.c: 118:     {;main.c: 120:         if (periodicCRCflag)
  1180   010100  505E               	movf	_periodicCRCflag^0,w,c	;volatile
  1181   010102  B4D8               	btfsc	status,2,c
  1182   010104  EF86  F080         	goto	u1451
  1183   010108  EF88  F080         	goto	u1450
  1184   01010C                     u1451:
  1185   01010C  EF80  F080         	goto	l2700
  1186   010110                     u1450:
  1187   010110                     
  1188                           ;main.c: 121:         {;main.c: 123:             periodicCRCflag = 0;
  1189   010110  0E00               	movlw	0
  1190   010112  6E5E               	movwf	_periodicCRCflag^0,c	;volatile
  1191                           
  1192                           ;main.c: 125:             CRCStored = 0x0000;
  1193   010114  0E00               	movlw	0
  1194   010116  6E51               	movwf	(main@CRCStored+1)^0,c	;volatile
  1195   010118  0E00               	movlw	0
  1196   01011A  6E50               	movwf	main@CRCStored^0,c	;volatile
  1197   01011C                     
  1198                           ;main.c: 126:             CRCComputed = 0xFFFF;
  1199   01011C  684E               	setf	main@CRCComputed^0,c	;volatile
  1200   01011E  684F               	setf	(main@CRCComputed+1)^0,c	;volatile
  1201   010120                     
  1202                           ;main.c: 129:             CRCStored = EEPROM_Read((0x310001));
  1203   010120  0E01               	movlw	1
  1204   010122  6E03               	movwf	EEPROM_Read@address^0,c
  1205   010124  0E00               	movlw	0
  1206   010126  6E04               	movwf	(EEPROM_Read@address+1)^0,c
  1207   010128  0E31               	movlw	49
  1208   01012A  6E05               	movwf	(EEPROM_Read@address+2)^0,c
  1209   01012C  ECB0  F085         	call	_EEPROM_Read	;wreg free
  1210   010130  6E4C               	movwf	??_main^0,c
  1211   010132  504C               	movf	??_main^0,w,c
  1212   010134  6E50               	movwf	main@CRCStored^0,c	;volatile
  1213   010136  6A51               	clrf	(main@CRCStored+1)^0,c	;volatile
  1214   010138                     
  1215                           ;main.c: 130:             CRCStored = (CRCStored << 8) & 0xFF00;
  1216   010138  5050               	movf	main@CRCStored^0,w,c	;volatile
  1217   01013A  6E4D               	movwf	(??_main+1)^0,c
  1218   01013C  6A4C               	clrf	??_main^0,c
  1219   01013E  0E00               	movlw	0
  1220   010140  144C               	andwf	??_main^0,w,c
  1221   010142  6E50               	movwf	main@CRCStored^0,c	;volatile
  1222   010144  0EFF               	movlw	255
  1223   010146  144D               	andwf	(??_main+1)^0,w,c
  1224   010148  6E51               	movwf	(main@CRCStored+1)^0,c	;volatile
  1225   01014A                     
  1226                           ;main.c: 131:             CRCStored |= EEPROM_Read((0x310000));
  1227   01014A  0E00               	movlw	0
  1228   01014C  6E03               	movwf	EEPROM_Read@address^0,c
  1229   01014E  0E00               	movlw	0
  1230   010150  6E04               	movwf	(EEPROM_Read@address+1)^0,c
  1231   010152  0E31               	movlw	49
  1232   010154  6E05               	movwf	(EEPROM_Read@address+2)^0,c
  1233   010156  ECB0  F085         	call	_EEPROM_Read	;wreg free
  1234   01015A  6E4C               	movwf	??_main^0,c
  1235   01015C  504C               	movf	??_main^0,w,c
  1236   01015E  1250               	iorwf	main@CRCStored^0,f,c	;volatile
  1237   010160                     
  1238                           ;main.c: 132:             printf ("\n\rStored CRC is 0x%4x.", (CRCStored));
  1239   010160  0EE7               	movlw	low STR_3
  1240   010162  6E46               	movwf	printf@fmt^0,c
  1241   010164  0EFF               	movlw	high STR_3
  1242   010166  6E47               	movwf	(printf@fmt+1)^0,c
  1243   010168  C050  F048         	movff	main@CRCStored,?_printf+2	;volatile
  1244   01016C  C051  F049         	movff	main@CRCStored+1,?_printf+3	;volatile
  1245   010170  ECEF  F085         	call	_printf	;wreg free
  1246   010174                     
  1247                           ;main.c: 135:             CRCComputed = CalculateFlashCRC ();
  1248   010174  ECAF  F083         	call	_CalculateFlashCRC	;wreg free
  1249   010178  C011  F04E         	movff	?_CalculateFlashCRC,main@CRCComputed	;volatile
  1250   01017C  C012  F04F         	movff	?_CalculateFlashCRC+1,main@CRCComputed+1	;volatile
  1251   010180                     
  1252                           ;main.c: 136:             printf ("\n\rPeriodically computed CRC is 0x%4x.", (CRCCompute
      +                          d));
  1253   010180  0EA7               	movlw	low STR_4
  1254   010182  6E46               	movwf	printf@fmt^0,c
  1255   010184  0EFF               	movlw	high STR_4
  1256   010186  6E47               	movwf	(printf@fmt+1)^0,c
  1257   010188  C04E  F048         	movff	main@CRCComputed,?_printf+2	;volatile
  1258   01018C  C04F  F049         	movff	main@CRCComputed+1,?_printf+3	;volatile
  1259   010190  ECEF  F085         	call	_printf	;wreg free
  1260   010194                     
  1261                           ;main.c: 139:             if (CRCComputed != CRCStored)
  1262   010194  5050               	movf	main@CRCStored^0,w,c	;volatile
  1263   010196  184E               	xorwf	main@CRCComputed^0,w,c	;volatile
  1264   010198  E109               	bnz	u1460
  1265   01019A  5051               	movf	(main@CRCStored+1)^0,w,c	;volatile
  1266   01019C  184F               	xorwf	(main@CRCComputed+1)^0,w,c	;volatile
  1267   01019E  B4D8               	btfsc	status,2,c
  1268   0101A0  EFD4  F080         	goto	u1461
  1269   0101A4  EFD6  F080         	goto	u1460
  1270   0101A8                     u1461:
  1271   0101A8  EFDF  F080         	goto	l2724
  1272   0101AC                     u1460:
  1273   0101AC                     
  1274                           ;main.c: 140:             {;main.c: 142:                 printf ("\n\rCRC error! Compute
      +                          d CRC doesn't match with stored CRC.\n");
  1275   0101AC  0E15               	movlw	low STR_5
  1276   0101AE  6E46               	movwf	printf@fmt^0,c
  1277   0101B0  0EFF               	movlw	high STR_5
  1278   0101B2  6E47               	movwf	(printf@fmt+1)^0,c
  1279   0101B4  ECEF  F085         	call	_printf	;wreg free
  1280   0101B8  9086               	bcf	134,0,c	;volatile
  1281   0101BA                     l666:
  1282   0101BA  EFDD  F080         	goto	l666
  1283   0101BE                     l2724:
  1284                           
  1285                           ;main.c: 147:             {;main.c: 148:                 printf ("\n\rCRC OK! Computed C
      +                          RC matches with stored CRC.\n");
  1286   0101BE  0E4F               	movlw	low STR_6
  1287   0101C0  6E46               	movwf	printf@fmt^0,c
  1288   0101C2  0EFF               	movlw	high STR_6
  1289   0101C4  6E47               	movwf	(printf@fmt+1)^0,c
  1290   0101C6  ECEF  F085         	call	_printf	;wreg free
  1291   0101CA  8086               	bsf	134,0,c	;volatile
  1292   0101CC  EF80  F080         	goto	l2700
  1293   0101D0  EF3B  F000         	goto	start
  1294   0101D4                     __end_of_main:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _printf *****************
  1298 ;; Defined at:
  1299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  fmt             2   69[COMRAM] PTR const unsigned char 
  1302 ;;		 -> STR_6(49), STR_5(58), STR_4(38), STR_3(23), 
  1303 ;;		 -> STR_2(26), STR_1(39), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ap              2   73[COMRAM] PTR void [1]
  1306 ;;		 -> ?_printf(2), 
  1307 ;;  ret             2    0        int 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   69[COMRAM] int 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;Total ram usage:        6 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 11
  1324 ;; This function calls:
  1325 ;;		_vfprintf
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text1
  1332   010BDE                     __ptext1:
  1333                           	callstack 0
  1334   010BDE                     _printf:
  1335                           	callstack 19
  1336   010BDE  0E48               	movlw	low (?_printf+2)
  1337   010BE0  6E4A               	movwf	printf@ap^0,c
  1338   010BE2  0E00               	movlw	high (?_printf+2)
  1339   010BE4  6E4B               	movwf	(printf@ap+1)^0,c
  1340   010BE6  0E00               	movlw	0
  1341   010BE8  6E3E               	movwf	vfprintf@fp^0,c
  1342   010BEA  0E00               	movlw	0
  1343   010BEC  6E3F               	movwf	(vfprintf@fp+1)^0,c
  1344   010BEE  C046  F040         	movff	printf@fmt,vfprintf@fmt
  1345   010BF2  C047  F041         	movff	printf@fmt+1,vfprintf@fmt+1
  1346   010BF6  0E4A               	movlw	low printf@ap
  1347   010BF8  6E42               	movwf	vfprintf@ap^0,c
  1348   010BFA  0E00               	movlw	high printf@ap
  1349   010BFC  6E43               	movwf	(vfprintf@ap+1)^0,c
  1350   010BFE  EC33  F084         	call	_vfprintf	;wreg free
  1351   010C02  0012               	return		;funcret
  1352   010C04                     __end_of_printf:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _vfprintf *****************
  1356 ;; Defined at:
  1357 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1360 ;;		 -> NULL(0), 
  1361 ;;  fmt             2   63[COMRAM] PTR const unsigned char 
  1362 ;;		 -> STR_6(49), STR_5(58), STR_4(38), STR_3(23), 
  1363 ;;		 -> STR_2(26), STR_1(39), 
  1364 ;;  ap              2   65[COMRAM] PTR PTR void 
  1365 ;;		 -> printf@ap(2), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  cfmt            2   67[COMRAM] PTR unsigned char 
  1368 ;;		 -> STR_6(49), STR_5(58), STR_4(38), STR_3(23), 
  1369 ;;		 -> STR_2(26), STR_1(39), 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2   61[COMRAM] int 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;Total ram usage:        8 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 10
  1386 ;; This function calls:
  1387 ;;		_vfpfcnvrt
  1388 ;; This function is called by:
  1389 ;;		_printf
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text2
  1394   010866                     __ptext2:
  1395                           	callstack 0
  1396   010866                     _vfprintf:
  1397                           	callstack 19
  1398   010866                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1400   010866  C040  F044         	movff	vfprintf@fmt,vfprintf@cfmt
  1401   01086A  C041  F045         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1404   01086E  EF47  F084         	goto	l2504
  1405   010872                     l2502:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1408   010872  C03E  F030         	movff	vfprintf@fp,vfpfcnvrt@fp
  1409   010876  C03F  F031         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1410   01087A  0E44               	movlw	low vfprintf@cfmt
  1411   01087C  6E32               	movwf	vfpfcnvrt@fmt^0,c
  1412   01087E  0E00               	movlw	high vfprintf@cfmt
  1413   010880  6E33               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1414   010882  C042  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
  1415   010886  C043  F035         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1416   01088A  ECEA  F080         	call	_vfpfcnvrt	;wreg free
  1417   01088E                     l2504:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1420   01088E  C044  FFF6         	movff	vfprintf@cfmt,tblptrl
  1421   010892  C045  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1422   010896                     	if	0	;tblptru may be non-zero
  1423   010896                     	endif
  1424   010896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1425   010896  0E00               	movlw	low (__mediumconst shr (0+16))
  1426   010898  6EF8               	movwf	tblptru,c
  1427   01089A                     	endif
  1428   01089A  0008               	tblrd		*
  1429   01089C  50F5               	movf	tablat,w,c
  1430   01089E  0900               	iorlw	0
  1431   0108A0  A4D8               	btfss	status,2,c
  1432   0108A2  EF55  F084         	goto	u1121
  1433   0108A6  EF57  F084         	goto	u1120
  1434   0108AA                     u1121:
  1435   0108AA  EF39  F084         	goto	l2502
  1436   0108AE                     u1120:
  1437   0108AE                     
  1438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1439   0108AE  0E00               	movlw	0
  1440   0108B0  6E3F               	movwf	(?_vfprintf+1)^0,c
  1441   0108B2  0E00               	movlw	0
  1442   0108B4  6E3E               	movwf	?_vfprintf^0,c
  1443   0108B6  0012               	return		;funcret
  1444   0108B8                     __end_of_vfprintf:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _vfpfcnvrt *****************
  1448 ;; Defined at:
  1449 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  1452 ;;		 -> NULL(0), 
  1453 ;;  fmt             2   49[COMRAM] PTR PTR unsigned char 
  1454 ;;		 -> vfprintf@cfmt(2), 
  1455 ;;  ap              2   51[COMRAM] PTR PTR void 
  1456 ;;		 -> printf@ap(2), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  convarg         4   55[COMRAM] struct .
  1459 ;;  cp              2   59[COMRAM] PTR unsigned char 
  1460 ;;		 -> STR_6(49), STR_5(58), STR_4(38), STR_3(23), 
  1461 ;;		 -> STR_2(26), STR_1(39), 
  1462 ;;  i               2    0        int 
  1463 ;;  done            2    0        int 
  1464 ;;  c               1    0        unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1474 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;Total ram usage:       14 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 9
  1481 ;; This function calls:
  1482 ;;		_fputc
  1483 ;;		_read_prec_or_width
  1484 ;;		_xtoa
  1485 ;; This function is called by:
  1486 ;;		_vfprintf
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text3
  1491   0101D4                     __ptext3:
  1492                           	callstack 0
  1493   0101D4                     _vfpfcnvrt:
  1494                           	callstack 19
  1495   0101D4                     
  1496                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1497   0101D4  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1498   0101D8  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1499   0101DC  CFDE FFF6          	movff	postinc2,tblptrl
  1500   0101E0  CFDD FFF7          	movff	postdec2,tblptrh
  1501   0101E4                     	if	0	;tblptru may be non-zero
  1502   0101E4                     	endif
  1503   0101E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1504   0101E4  0E00               	movlw	low (__mediumconst shr (0+16))
  1505   0101E6  6EF8               	movwf	tblptru,c
  1506   0101E8                     	endif
  1507   0101E8  0008               	tblrd		*
  1508   0101EA  50F5               	movf	tablat,w,c
  1509   0101EC  0A25               	xorlw	37
  1510   0101EE  A4D8               	btfss	status,2,c
  1511   0101F0  EFFC  F080         	goto	u1061
  1512   0101F4  EFFE  F080         	goto	u1060
  1513   0101F8                     u1061:
  1514   0101F8  EF90  F081         	goto	l2424
  1515   0101FC                     u1060:
  1516   0101FC                     
  1517                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1518   0101FC  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1519   010200  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1520   010204  2ADE               	incf	postinc2,f,c
  1521   010206  0E00               	movlw	0
  1522   010208  22DD               	addwfc	postdec2,f,c
  1523   01020A                     
  1524                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1525   01020A  0E00               	movlw	0
  1526   01020C  6E56               	movwf	(_width+1)^0,c
  1527   01020E  0E00               	movlw	0
  1528   010210  6E55               	movwf	_width^0,c
  1529   010212  C055  F05B         	movff	_width,_flags
  1530   010216                     
  1531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1532   010216  6857               	setf	_prec^0,c
  1533   010218  6858               	setf	(_prec+1)^0,c
  1534   01021A                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1536   01021A  C032  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1537   01021E  C033  F00A         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1538   010222  C034  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1539   010226  C035  F00C         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1540   01022A  EC36  F082         	call	_read_prec_or_width	;wreg free
  1541   01022E  C009  F055         	movff	?_read_prec_or_width,_width
  1542   010232  C00A  F056         	movff	?_read_prec_or_width+1,_width+1
  1543   010236                     
  1544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1545   010236  BE56               	btfsc	(_width+1)^0,7,c
  1546   010238  EF22  F081         	goto	u1070
  1547   01023C  EF20  F081         	goto	u1071
  1548   010240                     u1071:
  1549   010240  EF27  F081         	goto	l2406
  1550   010244                     u1070:
  1551   010244                     
  1552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1553   010244  805B               	bsf	_flags^0,0,c
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1556   010246  6C55               	negf	_width^0,c
  1557   010248  1E56               	comf	(_width+1)^0,f,c
  1558   01024A  B0D8               	btfsc	status,0,c
  1559   01024C  2A56               	incf	(_width+1)^0,f,c
  1560   01024E                     l2406:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
  1563   01024E  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1564   010252  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1565   010256  CFDE F03C          	movff	postinc2,vfpfcnvrt@cp
  1566   01025A  CFDD F03D          	movff	postdec2,vfpfcnvrt@cp+1
  1567   01025E  C03C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1568   010262  C03D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1569   010266                     	if	0	;tblptru may be non-zero
  1570   010266                     	endif
  1571   010266                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1572   010266  0E00               	movlw	low (__mediumconst shr (0+16))
  1573   010268  6EF8               	movwf	tblptru,c
  1574   01026A                     	endif
  1575   01026A  0008               	tblrd		*
  1576   01026C  50F5               	movf	tablat,w,c
  1577   01026E  0A78               	xorlw	120
  1578   010270  A4D8               	btfss	status,2,c
  1579   010272  EF3D  F081         	goto	u1081
  1580   010276  EF3F  F081         	goto	u1080
  1581   01027A                     u1081:
  1582   01027A  EF87  F081         	goto	l2420
  1583   01027E                     u1080:
  1584   01027E                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1586   01027E  C034  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1587   010282  C035  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1588   010286  CFDF F036          	movff	indf2,??_vfpfcnvrt
  1589   01028A  0E02               	movlw	2
  1590   01028C  26DE               	addwf	postinc2,f,c
  1591   01028E  CFDF F037          	movff	indf2,??_vfpfcnvrt+1
  1592   010292  0E00               	movlw	0
  1593   010294  22DD               	addwfc	postdec2,f,c
  1594   010296  C036  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1595   01029A  C037  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1596   01029E  CFDE F038          	movff	postinc2,vfpfcnvrt@convarg
  1597   0102A2  CFDD F039          	movff	postdec2,vfpfcnvrt@convarg+1
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  1600   0102A6  0E01               	movlw	1
  1601   0102A8  243C               	addwf	vfpfcnvrt@cp^0,w,c
  1602   0102AA  6E36               	movwf	??_vfpfcnvrt^0,c
  1603   0102AC  0E00               	movlw	0
  1604   0102AE  203D               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1605   0102B0  6E37               	movwf	(??_vfpfcnvrt+1)^0,c
  1606   0102B2  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1607   0102B6  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1608   0102BA  C036  FFDE         	movff	??_vfpfcnvrt,postinc2
  1609   0102BE  C037  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  1612   0102C2  EF6F  F081         	goto	l2418
  1613   0102C6                     l2412:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1340:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  1616   0102C6  C030  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  1617   0102CA  C031  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1618   0102CE  C038  F022         	movff	vfpfcnvrt@convarg,xtoa@d
  1619   0102D2  C039  F023         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  1620   0102D6  ECA7  F081         	call	_xtoa	;wreg free
  1621   0102DA  EFA6  F081         	goto	l1425
  1622   0102DE                     l2418:
  1623   0102DE  C03C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1624   0102E2  C03D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1625   0102E6                     	if	0	;tblptru may be non-zero
  1626   0102E6                     	endif
  1627   0102E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1628   0102E6  0E00               	movlw	low (__mediumconst shr (0+16))
  1629   0102E8  6EF8               	movwf	tblptru,c
  1630   0102EA                     	endif
  1631   0102EA  0008               	tblrd		*
  1632   0102EC  50F5               	movf	tablat,w,c
  1633   0102EE  6E36               	movwf	??_vfpfcnvrt^0,c
  1634   0102F0  6A37               	clrf	(??_vfpfcnvrt+1)^0,c
  1635                           
  1636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 1, Range of values is 0 to 0
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte            4     3 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643   0102F2  5037               	movf	(??_vfpfcnvrt+1)^0,w,c
  1644   0102F4  0A00               	xorlw	0	; case 0
  1645   0102F6  B4D8               	btfsc	status,2,c
  1646   0102F8  EF80  F081         	goto	l2748
  1647   0102FC  EF87  F081         	goto	l2420
  1648   010300                     l2748:
  1649                           
  1650                           ; Switch size 1, requested type "simple"
  1651                           ; Number of cases is 1, Range of values is 120 to 120
  1652                           ; switch strategies available:
  1653                           ; Name         Instructions Cycles
  1654                           ; simple_byte            4     3 (average)
  1655                           ;	Chosen strategy is simple_byte
  1656   010300  5036               	movf	??_vfpfcnvrt^0,w,c
  1657   010302  0A78               	xorlw	120	; case 120
  1658   010304  B4D8               	btfsc	status,2,c
  1659   010306  EF63  F081         	goto	l2412
  1660   01030A  EF87  F081         	goto	l2420
  1661   01030E                     l2420:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1664   01030E  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1665   010312  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1666   010316  2ADE               	incf	postinc2,f,c
  1667   010318  0E00               	movlw	0
  1668   01031A  22DD               	addwfc	postdec2,f,c
  1669   01031C  EFA6  F081         	goto	l1425
  1670   010320                     l2424:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1673   010320  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1674   010324  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1675   010328  CFDE FFF6          	movff	postinc2,tblptrl
  1676   01032C  CFDD FFF7          	movff	postdec2,tblptrh
  1677   010330                     	if	0	;tblptru may be non-zero
  1678   010330                     	endif
  1679   010330                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1680   010330  0E00               	movlw	low (__mediumconst shr (0+16))
  1681   010332  6EF8               	movwf	tblptru,c
  1682   010334                     	endif
  1683   010334  0008               	tblrd		*
  1684   010336  50F5               	movf	tablat,w,c
  1685   010338  6E05               	movwf	fputc@c^0,c
  1686   01033A  6A06               	clrf	(fputc@c+1)^0,c
  1687   01033C  C030  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1688   010340  C031  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1689   010344  EC9D  F082         	call	_fputc	;wreg free
  1690   010348  EF87  F081         	goto	l2420
  1691   01034C                     l1425:
  1692   01034C  0012               	return		;funcret
  1693   01034E                     __end_of_vfpfcnvrt:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _xtoa *****************
  1697 ;; Defined at:
  1698 ;;		line 955 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1701 ;;		 -> NULL(0), 
  1702 ;;  d               2   33[COMRAM] unsigned int 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  i               2   44[COMRAM] int 
  1705 ;;  p               2   42[COMRAM] int 
  1706 ;;  w               2   38[COMRAM] int 
  1707 ;;  c               1   46[COMRAM] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1720 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;Total ram usage:       16 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 8
  1724 ;; This function calls:
  1725 ;;		_pad
  1726 ;; This function is called by:
  1727 ;;		_vfpfcnvrt
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text4
  1732   01034E                     __ptext4:
  1733                           	callstack 0
  1734   01034E                     _xtoa:
  1735                           	callstack 19
  1736   01034E                     
  1737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 955: static void 
      +                          xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 958: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           959:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 960
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           971:     p = (0 <= prec) ? prec : 1;
  1738   01034E  BE58               	btfsc	(_prec+1)^0,7,c
  1739   010350  EFAE  F081         	goto	u930
  1740   010354  EFAC  F081         	goto	u931
  1741   010358                     u931:
  1742   010358  EFB4  F081         	goto	l1395
  1743   01035C                     u930:
  1744   01035C  0E00               	movlw	0
  1745   01035E  6E2C               	movwf	(xtoa@p+1)^0,c
  1746   010360  0E01               	movlw	1
  1747   010362  6E2B               	movwf	xtoa@p^0,c
  1748   010364  EFB8  F081         	goto	l1397
  1749   010368                     l1395:
  1750   010368  C057  F02B         	movff	_prec,xtoa@p
  1751   01036C  C058  F02C         	movff	_prec+1,xtoa@p+1
  1752   010370                     l1397:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 972:     w = widt
      +                          h;
  1755   010370  C055  F027         	movff	_width,xtoa@w
  1756   010374  C056  F028         	movff	_width+1,xtoa@w+1
  1757   010378                     
  1758                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 981:     i = size
      +                          of(dbuf) - 1;
  1759   010378  0E00               	movlw	0
  1760   01037A  6E2E               	movwf	(xtoa@i+1)^0,c
  1761   01037C  0E1F               	movlw	31
  1762   01037E  6E2D               	movwf	xtoa@i^0,c
  1763   010380                     
  1764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 982:     dbuf[i] 
      +                          = '\0';
  1765   010380  0E00               	movlw	0
  1766   010382  0100               	movlb	0	; () banked
  1767   010384  6F8E               	movwf	(_dbuf+31)& (0+255),b
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  1770   010386  EF01  F082         	goto	l2342
  1771   01038A                     l2322:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 987:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 988:         --i;
  1774   01038A  062D               	decf	xtoa@i^0,f,c
  1775   01038C  A0D8               	btfss	status,0,c
  1776   01038E  062E               	decf	(xtoa@i+1)^0,f,c
  1777   010390                     
  1778                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 989:         c = 
      +                          d & 0x0f;
  1779   010390  5022               	movf	xtoa@d^0,w,c
  1780   010392  0B0F               	andlw	15
  1781   010394  6E2F               	movwf	xtoa@c^0,c
  1782   010396                     
  1783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 991:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1784   010396  0E09               	movlw	9
  1785   010398  642F               	cpfsgt	xtoa@c^0,c
  1786   01039A  EFD1  F081         	goto	u941
  1787   01039E  EFD3  F081         	goto	u940
  1788   0103A2                     u941:
  1789   0103A2  EFDB  F081         	goto	l2330
  1790   0103A6                     u940:
  1791   0103A6  0E57               	movlw	87
  1792   0103A8  242F               	addwf	xtoa@c^0,w,c
  1793   0103AA  6E29               	movwf	_xtoa$1772^0,c
  1794   0103AC  6A2A               	clrf	(_xtoa$1772+1)^0,c
  1795   0103AE  0E00               	movlw	0
  1796   0103B0  222A               	addwfc	(_xtoa$1772+1)^0,f,c
  1797   0103B2  EFE1  F081         	goto	l2332
  1798   0103B6                     l2330:
  1799   0103B6  0E30               	movlw	48
  1800   0103B8  242F               	addwf	xtoa@c^0,w,c
  1801   0103BA  6E29               	movwf	_xtoa$1772^0,c
  1802   0103BC  6A2A               	clrf	(_xtoa$1772+1)^0,c
  1803   0103BE  0E00               	movlw	0
  1804   0103C0  222A               	addwfc	(_xtoa$1772+1)^0,f,c
  1805   0103C2                     l2332:
  1806   0103C2  C029  F02F         	movff	_xtoa$1772,xtoa@c
  1807   0103C6                     
  1808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1000:         dbu
      +                          f[i] = (char)c;
  1809   0103C6  0E6F               	movlw	low _dbuf
  1810   0103C8  242D               	addwf	xtoa@i^0,w,c
  1811   0103CA  6ED9               	movwf	fsr2l,c
  1812   0103CC  0E00               	movlw	high _dbuf
  1813   0103CE  202E               	addwfc	(xtoa@i+1)^0,w,c
  1814   0103D0  6EDA               	movwf	fsr2h,c
  1815   0103D2  C02F  FFDF         	movff	xtoa@c,indf2
  1816   0103D6                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1001:         --p
      +                          ;
  1818   0103D6  062B               	decf	xtoa@p^0,f,c
  1819   0103D8  A0D8               	btfss	status,0,c
  1820   0103DA  062C               	decf	(xtoa@p+1)^0,f,c
  1821   0103DC                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1002:         --w
      +                          ;
  1823   0103DC  0627               	decf	xtoa@w^0,f,c
  1824   0103DE  A0D8               	btfss	status,0,c
  1825   0103E0  0628               	decf	(xtoa@w+1)^0,f,c
  1826   0103E2                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1003:         d =
      +                           d >> 4;
  1828   0103E2  C022  F024         	movff	xtoa@d,??_xtoa
  1829   0103E6  C023  F025         	movff	xtoa@d+1,??_xtoa+1
  1830   0103EA  0E04               	movlw	4
  1831   0103EC  6E26               	movwf	(??_xtoa+2)^0,c
  1832   0103EE                     u955:
  1833   0103EE  90D8               	bcf	status,0,c
  1834   0103F0  3225               	rrcf	(??_xtoa+1)^0,f,c
  1835   0103F2  3224               	rrcf	??_xtoa^0,f,c
  1836   0103F4  2E26               	decfsz	(??_xtoa+2)^0,f,c
  1837   0103F6  EFF7  F081         	goto	u955
  1838   0103FA  C024  F022         	movff	??_xtoa,xtoa@d
  1839   0103FE  C025  F023         	movff	??_xtoa+1,xtoa@d+1
  1840   010402                     l2342:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  1843   010402  BE2E               	btfsc	(xtoa@i+1)^0,7,c
  1844   010404  EF0D  F082         	goto	u961
  1845   010408  502E               	movf	(xtoa@i+1)^0,w,c
  1846   01040A  E109               	bnz	u960
  1847   01040C  0E02               	movlw	2
  1848   01040E  5C2D               	subwf	xtoa@i^0,w,c
  1849   010410  A0D8               	btfss	status,0,c
  1850   010412  EF0D  F082         	goto	u961
  1851   010416  EF0F  F082         	goto	u960
  1852   01041A                     u961:
  1853   01041A  EF25  F082         	goto	l2348
  1854   01041E                     u960:
  1855   01041E  5022               	movf	xtoa@d^0,w,c
  1856   010420  1023               	iorwf	(xtoa@d+1)^0,w,c
  1857   010422  A4D8               	btfss	status,2,c
  1858   010424  EF16  F082         	goto	u971
  1859   010428  EF18  F082         	goto	u970
  1860   01042C                     u971:
  1861   01042C  EFC5  F081         	goto	l2322
  1862   010430                     u970:
  1863   010430  BE2C               	btfsc	(xtoa@p+1)^0,7,c
  1864   010432  EF25  F082         	goto	u980
  1865   010436  502C               	movf	(xtoa@p+1)^0,w,c
  1866   010438  E106               	bnz	u981
  1867   01043A  042B               	decf	xtoa@p^0,w,c
  1868   01043C  B0D8               	btfsc	status,0,c
  1869   01043E  EF23  F082         	goto	u981
  1870   010442  EF25  F082         	goto	u980
  1871   010446                     u981:
  1872   010446  EFC5  F081         	goto	l2322
  1873   01044A                     u980:
  1874   01044A                     l2348:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1023:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  1877   01044A  C020  F015         	movff	xtoa@fp,pad@fp
  1878   01044E  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  1879   010452  0E6F               	movlw	low _dbuf
  1880   010454  242D               	addwf	xtoa@i^0,w,c
  1881   010456  6E17               	movwf	pad@buf^0,c
  1882   010458  0E00               	movlw	high _dbuf
  1883   01045A  202E               	addwfc	(xtoa@i+1)^0,w,c
  1884   01045C  6E18               	movwf	(pad@buf+1)^0,c
  1885   01045E  C027  F019         	movff	xtoa@w,pad@p
  1886   010462  C028  F01A         	movff	xtoa@w+1,pad@p+1
  1887   010466  EC5A  F083         	call	_pad	;wreg free
  1888   01046A  0012               	return		;funcret
  1889   01046C                     __end_of_xtoa:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _pad *****************
  1893 ;; Defined at:
  1894 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1897 ;;		 -> NULL(0), 
  1898 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1899 ;;		 -> dbuf(32), 
  1900 ;;  p               2   24[COMRAM] int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  w               2   29[COMRAM] int 
  1903 ;;  i               2   27[COMRAM] int 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1913 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;Total ram usage:       11 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 7
  1920 ;; This function calls:
  1921 ;;		_fputc
  1922 ;;		_fputs
  1923 ;; This function is called by:
  1924 ;;		_xtoa
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text5
  1929   0106B4                     __ptext5:
  1930                           	callstack 0
  1931   0106B4                     _pad:
  1932                           	callstack 19
  1933   0106B4                     
  1934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  1935   0106B4  A05B               	btfss	_flags^0,0,c
  1936   0106B6  EF5F  F083         	goto	u891
  1937   0106BA  EF61  F083         	goto	u890
  1938   0106BE                     u891:
  1939   0106BE  EF6B  F083         	goto	l2300
  1940   0106C2                     u890:
  1941   0106C2                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  1943   0106C2  C017  F00E         	movff	pad@buf,fputs@s
  1944   0106C6  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1945   0106CA  C015  F010         	movff	pad@fp,fputs@fp
  1946   0106CE  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1947   0106D2  EC1A  F085         	call	_fputs	;wreg free
  1948   0106D6                     l2300:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  1951   0106D6  BE1A               	btfsc	(pad@p+1)^0,7,c
  1952   0106D8  EF70  F083         	goto	u901
  1953   0106DC  EF72  F083         	goto	u900
  1954   0106E0                     u901:
  1955   0106E0  EF78  F083         	goto	l2304
  1956   0106E4                     u900:
  1957   0106E4  C019  F01E         	movff	pad@p,pad@w
  1958   0106E8  C01A  F01F         	movff	pad@p+1,pad@w+1
  1959   0106EC  EF7C  F083         	goto	l1386
  1960   0106F0                     l2304:
  1961   0106F0  0E00               	movlw	0
  1962   0106F2  6E1F               	movwf	(pad@w+1)^0,c
  1963   0106F4  0E00               	movlw	0
  1964   0106F6  6E1E               	movwf	pad@w^0,c
  1965   0106F8                     l1386:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  1968   0106F8  0E00               	movlw	0
  1969   0106FA  6E1D               	movwf	(pad@i+1)^0,c
  1970   0106FC  0E00               	movlw	0
  1971   0106FE  6E1C               	movwf	pad@i^0,c
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1974   010700  EF8E  F083         	goto	l2310
  1975   010704                     l2306:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  1978   010704  0E00               	movlw	0
  1979   010706  6E06               	movwf	(fputc@c+1)^0,c
  1980   010708  0E20               	movlw	32
  1981   01070A  6E05               	movwf	fputc@c^0,c
  1982   01070C  C015  F007         	movff	pad@fp,fputc@fp
  1983   010710  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1984   010714  EC9D  F082         	call	_fputc	;wreg free
  1985   010718                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  1987   010718  4A1C               	infsnz	pad@i^0,f,c
  1988   01071A  2A1D               	incf	(pad@i+1)^0,f,c
  1989   01071C                     l2310:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1992   01071C  501E               	movf	pad@w^0,w,c
  1993   01071E  5C1C               	subwf	pad@i^0,w,c
  1994   010720  501D               	movf	(pad@i+1)^0,w,c
  1995   010722  0A80               	xorlw	128
  1996   010724  6E1B               	movwf	??_pad^0,c
  1997   010726  501F               	movf	(pad@w+1)^0,w,c
  1998   010728  0A80               	xorlw	128
  1999   01072A  581B               	subwfb	??_pad^0,w,c
  2000   01072C  A0D8               	btfss	status,0,c
  2001   01072E  EF9B  F083         	goto	u911
  2002   010732  EF9D  F083         	goto	u910
  2003   010736                     u911:
  2004   010736  EF82  F083         	goto	l2306
  2005   01073A                     u910:
  2006   01073A                     
  2007                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2008   01073A  B05B               	btfsc	_flags^0,0,c
  2009   01073C  EFA2  F083         	goto	u921
  2010   010740  EFA4  F083         	goto	u920
  2011   010744                     u921:
  2012   010744  EFAE  F083         	goto	l1391
  2013   010748                     u920:
  2014   010748                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2016   010748  C017  F00E         	movff	pad@buf,fputs@s
  2017   01074C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  2018   010750  C015  F010         	movff	pad@fp,fputs@fp
  2019   010754  C016  F011         	movff	pad@fp+1,fputs@fp+1
  2020   010758  EC1A  F085         	call	_fputs	;wreg free
  2021   01075C                     l1391:
  2022   01075C  0012               	return		;funcret
  2023   01075E                     __end_of_pad:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _fputs *****************
  2027 ;; Defined at:
  2028 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2031 ;;		 -> dbuf(32), 
  2032 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2033 ;;		 -> NULL(0), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  i               2   18[COMRAM] int 
  2036 ;;  c               1   17[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2   13[COMRAM] int 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;Total ram usage:        7 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 6
  2053 ;; This function calls:
  2054 ;;		_fputc
  2055 ;; This function is called by:
  2056 ;;		_pad
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text6
  2061   010A34                     __ptext6:
  2062                           	callstack 0
  2063   010A34                     _fputs:
  2064                           	callstack 19
  2065   010A34  0E00               	movlw	0
  2066   010A36  6E14               	movwf	(fputs@i+1)^0,c
  2067   010A38  0E00               	movlw	0
  2068   010A3A  6E13               	movwf	fputs@i^0,c
  2069   010A3C  EF2B  F085         	goto	l2288
  2070   010A40                     l2284:
  2071   010A40  C012  F005         	movff	fputs@c,fputc@c
  2072   010A44  6A06               	clrf	(fputc@c+1)^0,c
  2073   010A46  C010  F007         	movff	fputs@fp,fputc@fp
  2074   010A4A  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  2075   010A4E  EC9D  F082         	call	_fputc	;wreg free
  2076   010A52  4A13               	infsnz	fputs@i^0,f,c
  2077   010A54  2A14               	incf	(fputs@i+1)^0,f,c
  2078   010A56                     l2288:
  2079   010A56  5013               	movf	fputs@i^0,w,c
  2080   010A58  240E               	addwf	fputs@s^0,w,c
  2081   010A5A  6ED9               	movwf	fsr2l,c
  2082   010A5C  5014               	movf	(fputs@i+1)^0,w,c
  2083   010A5E  200F               	addwfc	(fputs@s+1)^0,w,c
  2084   010A60  6EDA               	movwf	fsr2h,c
  2085   010A62  50DF               	movf	indf2,w,c
  2086   010A64  6E12               	movwf	fputs@c^0,c
  2087   010A66  5012               	movf	fputs@c^0,w,c
  2088   010A68  A4D8               	btfss	status,2,c
  2089   010A6A  EF39  F085         	goto	u881
  2090   010A6E  EF3B  F085         	goto	u880
  2091   010A72                     u881:
  2092   010A72  EF20  F085         	goto	l2284
  2093   010A76                     u880:
  2094   010A76  0012               	return		;funcret
  2095   010A78                     __end_of_fputs:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _fputc *****************
  2099 ;; Defined at:
  2100 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  c               2    4[COMRAM] int 
  2103 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  2104 ;;		 -> NULL(0), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  2    4[COMRAM] int 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;Total ram usage:        9 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 5
  2123 ;; This function calls:
  2124 ;;		_putch
  2125 ;; This function is called by:
  2126 ;;		_pad
  2127 ;;		_vfpfcnvrt
  2128 ;;		_fputs
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text7
  2133   01053A                     __ptext7:
  2134                           	callstack 0
  2135   01053A                     _fputc:
  2136                           	callstack 19
  2137   01053A  5007               	movf	fputc@fp^0,w,c
  2138   01053C  1008               	iorwf	(fputc@fp+1)^0,w,c
  2139   01053E  B4D8               	btfsc	status,2,c
  2140   010540  EFA4  F082         	goto	u841
  2141   010544  EFA6  F082         	goto	u840
  2142   010548                     u841:
  2143   010548  EFAF  F082         	goto	l2272
  2144   01054C                     u840:
  2145   01054C  5007               	movf	fputc@fp^0,w,c
  2146   01054E  1008               	iorwf	(fputc@fp+1)^0,w,c
  2147   010550  A4D8               	btfss	status,2,c
  2148   010552  EFAD  F082         	goto	u851
  2149   010556  EFAF  F082         	goto	u850
  2150   01055A                     u851:
  2151   01055A  EFB4  F082         	goto	l2274
  2152   01055E                     u850:
  2153   01055E                     l2272:
  2154   01055E  5005               	movf	fputc@c^0,w,c
  2155   010560  EC37  F086         	call	_putch
  2156   010564  EF01  F083         	goto	l1444
  2157   010568                     l2274:
  2158   010568  EE20 F00A          	lfsr	2,10
  2159   01056C  5007               	movf	fputc@fp^0,w,c
  2160   01056E  26D9               	addwf	fsr2l,f,c
  2161   010570  5008               	movf	(fputc@fp+1)^0,w,c
  2162   010572  22DA               	addwfc	fsr2h,f,c
  2163   010574  50DE               	movf	postinc2,w,c
  2164   010576  10DE               	iorwf	postinc2,w,c
  2165   010578  B4D8               	btfsc	status,2,c
  2166   01057A  EFC1  F082         	goto	u861
  2167   01057E  EFC3  F082         	goto	u860
  2168   010582                     u861:
  2169   010582  EFDE  F082         	goto	l2278
  2170   010586                     u860:
  2171   010586  EE20 F00A          	lfsr	2,10
  2172   01058A  5007               	movf	fputc@fp^0,w,c
  2173   01058C  26D9               	addwf	fsr2l,f,c
  2174   01058E  5008               	movf	(fputc@fp+1)^0,w,c
  2175   010590  22DA               	addwfc	fsr2h,f,c
  2176   010592  EE10 F003          	lfsr	1,3
  2177   010596  5007               	movf	fputc@fp^0,w,c
  2178   010598  26E1               	addwf	fsr1l,f,c
  2179   01059A  5008               	movf	(fputc@fp+1)^0,w,c
  2180   01059C  22E2               	addwfc	fsr1h,f,c
  2181   01059E  50DE               	movf	postinc2,w,c
  2182   0105A0  5CE6               	subwf	postinc1,w,c
  2183   0105A2  50E6               	movf	postinc1,w,c
  2184   0105A4  0A80               	xorlw	128
  2185   0105A6  6E0D               	movwf	(??_fputc+4)^0,c
  2186   0105A8  50DE               	movf	postinc2,w,c
  2187   0105AA  0A80               	xorlw	128
  2188   0105AC  580D               	subwfb	(??_fputc+4)^0,w,c
  2189   0105AE  B0D8               	btfsc	status,0,c
  2190   0105B0  EFDC  F082         	goto	u871
  2191   0105B4  EFDE  F082         	goto	u870
  2192   0105B8                     u871:
  2193   0105B8  EF01  F083         	goto	l1444
  2194   0105BC                     u870:
  2195   0105BC                     l2278:
  2196   0105BC  EE20 F003          	lfsr	2,3
  2197   0105C0  5007               	movf	fputc@fp^0,w,c
  2198   0105C2  26D9               	addwf	fsr2l,f,c
  2199   0105C4  5008               	movf	(fputc@fp+1)^0,w,c
  2200   0105C6  22DA               	addwfc	fsr2h,f,c
  2201   0105C8  CFDE F009          	movff	postinc2,??_fputc
  2202   0105CC  CFDD F00A          	movff	postdec2,??_fputc+1
  2203   0105D0  C007  FFD9         	movff	fputc@fp,fsr2l
  2204   0105D4  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2205   0105D8  CFDE F00B          	movff	postinc2,??_fputc+2
  2206   0105DC  CFDD F00C          	movff	postdec2,??_fputc+3
  2207   0105E0  5009               	movf	??_fputc^0,w,c
  2208   0105E2  240B               	addwf	(??_fputc+2)^0,w,c
  2209   0105E4  6ED9               	movwf	fsr2l,c
  2210   0105E6  500A               	movf	(??_fputc+1)^0,w,c
  2211   0105E8  200C               	addwfc	(??_fputc+3)^0,w,c
  2212   0105EA  6EDA               	movwf	fsr2h,c
  2213   0105EC  C005  FFDF         	movff	fputc@c,indf2
  2214   0105F0  EE20 F003          	lfsr	2,3
  2215   0105F4  5007               	movf	fputc@fp^0,w,c
  2216   0105F6  26D9               	addwf	fsr2l,f,c
  2217   0105F8  5008               	movf	(fputc@fp+1)^0,w,c
  2218   0105FA  22DA               	addwfc	fsr2h,f,c
  2219   0105FC  2ADE               	incf	postinc2,f,c
  2220   0105FE  0E00               	movlw	0
  2221   010600  22DD               	addwfc	postdec2,f,c
  2222   010602                     l1444:
  2223   010602  0012               	return		;funcret
  2224   010604                     __end_of_fputc:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function _putch *****************
  2228 ;; Defined at:
  2229 ;;		line 246 in file "mcc_generated_files/uart/src/eusart2.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  txData          1    wreg     unsigned char 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  txData          1    3[COMRAM] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;Total ram usage:        1 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 4
  2250 ;; This function calls:
  2251 ;;		_EUSART2_IsTxReady
  2252 ;;		_EUSART2_Write
  2253 ;; This function is called by:
  2254 ;;		_fputc
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text8
  2259   010C6E                     __ptext8:
  2260                           	callstack 0
  2261   010C6E                     _putch:
  2262                           	callstack 19
  2263                           
  2264                           ;incstack = 0
  2265                           ;putch@txData stored from wreg
  2266   010C6E  6E04               	movwf	putch@txData^0,c
  2267   010C70                     l2262:
  2268   010C70  ECC6  F085         	call	_EUSART2_IsTxReady	;wreg free
  2269   010C74  0900               	iorlw	0
  2270   010C76  B4D8               	btfsc	status,2,c
  2271   010C78  EF40  F086         	goto	u831
  2272   010C7C  EF42  F086         	goto	u830
  2273   010C80                     u831:
  2274   010C80  EF38  F086         	goto	l2262
  2275   010C84                     u830:
  2276   010C84                     
  2277                           ;mcc_generated_files/uart/src/eusart2.c: 249:     return EUSART2_Write(txData);;	Return 
      +                          value of _putch is never used
  2278   010C84  5004               	movf	putch@txData^0,w,c
  2279   010C86  EC97  F086         	call	_EUSART2_Write
  2280   010C8A  0012               	return		;funcret
  2281   010C8C                     __end_of_putch:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _EUSART2_Write *****************
  2285 ;; Defined at:
  2286 ;;		line 235 in file "mcc_generated_files/uart/src/eusart2.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  txData          1    wreg     unsigned char 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  txData          1    2[COMRAM] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;Total ram usage:        1 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 3
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_putch
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text9
  2315   010D2E                     __ptext9:
  2316                           	callstack 0
  2317   010D2E                     _EUSART2_Write:
  2318                           	callstack 19
  2319                           
  2320                           ;incstack = 0
  2321                           ;EUSART2_Write@txData stored from wreg
  2322   010D2E  6E03               	movwf	EUSART2_Write@txData^0,c
  2323   010D30                     
  2324                           ;mcc_generated_files/uart/src/eusart2.c: 235: void EUSART2_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart2.c: 236: {;mcc_generated_files/uart/src/eusart2.c: 237:    
      +                           TX2REG = txData;
  2325   010D30  C003  FE95         	movff	EUSART2_Write@txData,3733	;volatile
  2326   010D34  0012               	return		;funcret
  2327   010D36                     __end_of_EUSART2_Write:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function _EUSART2_IsTxReady *****************
  2331 ;; Defined at:
  2332 ;;		line 198 in file "mcc_generated_files/uart/src/eusart2.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      _Bool 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;Total ram usage:        1 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 3
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_putch
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text10
  2361   010B8C                     __ptext10:
  2362                           	callstack 0
  2363   010B8C                     _EUSART2_IsTxReady:
  2364                           	callstack 19
  2365   010B8C                     
  2366                           ;mcc_generated_files/uart/src/eusart2.c: 200:     return (_Bool)(PIR3bits.TX2IF && TX2ST
      +                          Abits.TXEN);
  2367   010B8C  0E00               	movlw	0
  2368   010B8E  6E03               	movwf	_EUSART2_IsTxReady$1154^0,c
  2369   010B90  010E               	movlb	14	; () banked
  2370   010B92  ADC8               	btfss	200,6,b	;volatile
  2371   010B94  EFCE  F085         	goto	u811
  2372   010B98  EFD0  F085         	goto	u810
  2373   010B9C                     u811:
  2374   010B9C  EFD9  F085         	goto	l568
  2375   010BA0                     u810:
  2376   010BA0                     
  2377                           ; BSR set to: 14
  2378   010BA0  AB99               	btfss	153,5,b	;volatile
  2379   010BA2  EFD5  F085         	goto	u821
  2380   010BA6  EFD7  F085         	goto	u820
  2381   010BAA                     u821:
  2382   010BAA  EFD9  F085         	goto	l568
  2383   010BAE                     u820:
  2384   010BAE                     
  2385                           ; BSR set to: 14
  2386   010BAE  0E01               	movlw	1
  2387   010BB0  6E03               	movwf	_EUSART2_IsTxReady$1154^0,c
  2388   010BB2                     l568:
  2389                           
  2390                           ; BSR set to: 14
  2391   010BB2  5003               	movf	_EUSART2_IsTxReady$1154^0,w,c
  2392   010BB4                     
  2393                           ; BSR set to: 14
  2394   010BB4  0012               	return		;funcret
  2395   010BB6                     __end_of_EUSART2_IsTxReady:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _read_prec_or_width *****************
  2399 ;; Defined at:
  2400 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  fmt             2    8[COMRAM] PTR PTR const unsigned c
  2403 ;;		 -> vfprintf@cfmt(2), 
  2404 ;;  ap              2   10[COMRAM] PTR PTR void [1]
  2405 ;;		 -> printf@ap(2), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  c               1   14[COMRAM] unsigned char 
  2408 ;;  n               2   15[COMRAM] int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    8[COMRAM] int 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        9 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 4
  2425 ;; This function calls:
  2426 ;;		___wmul
  2427 ;; This function is called by:
  2428 ;;		_vfpfcnvrt
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text11
  2433   01046C                     __ptext11:
  2434                           	callstack 0
  2435   01046C                     _read_prec_or_width:
  2436                           	callstack 23
  2437   01046C                     
  2438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2439   01046C  0E00               	movlw	0
  2440   01046E  6E11               	movwf	(read_prec_or_width@n+1)^0,c
  2441   010470  0E00               	movlw	0
  2442   010472  6E10               	movwf	read_prec_or_width@n^0,c
  2443   010474                     
  2444                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2445   010474  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2446   010478  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2447   01047C  CFDE FFF6          	movff	postinc2,tblptrl
  2448   010480  CFDD FFF7          	movff	postdec2,tblptrh
  2449   010484                     	if	0	;tblptru may be non-zero
  2450   010484                     	endif
  2451   010484                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2452   010484  0E00               	movlw	low (__mediumconst shr (0+16))
  2453   010486  6EF8               	movwf	tblptru,c
  2454   010488                     	endif
  2455   010488  0008               	tblrd		*
  2456   01048A  50F5               	movf	tablat,w,c
  2457   01048C  0A2A               	xorlw	42
  2458   01048E  A4D8               	btfss	status,2,c
  2459   010490  EF4C  F082         	goto	u991
  2460   010494  EF4E  F082         	goto	u990
  2461   010498                     u991:
  2462   010498  EF82  F082         	goto	l2362
  2463   01049C                     u990:
  2464   01049C                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2466   01049C  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2467   0104A0  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2468   0104A4  2ADE               	incf	postinc2,f,c
  2469   0104A6  0E00               	movlw	0
  2470   0104A8  22DD               	addwfc	postdec2,f,c
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2473   0104AA  C00B  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2474   0104AE  C00C  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2475   0104B2  CFDF F00D          	movff	indf2,??_read_prec_or_width
  2476   0104B6  0E02               	movlw	2
  2477   0104B8  26DE               	addwf	postinc2,f,c
  2478   0104BA  CFDF F00E          	movff	indf2,??_read_prec_or_width+1
  2479   0104BE  0E00               	movlw	0
  2480   0104C0  22DD               	addwfc	postdec2,f,c
  2481   0104C2  C00D  FFD9         	movff	??_read_prec_or_width,fsr2l
  2482   0104C6  C00E  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2483   0104CA  CFDE F010          	movff	postinc2,read_prec_or_width@n
  2484   0104CE  CFDD F011          	movff	postdec2,read_prec_or_width@n+1
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2487   0104D2  EF98  F082         	goto	l1411
  2488   0104D6                     l2358:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2491   0104D6  C010  F003         	movff	read_prec_or_width@n,___wmul@multiplier
  2492   0104DA  C011  F004         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2493   0104DE  0E00               	movlw	0
  2494   0104E0  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2495   0104E2  0E0A               	movlw	10
  2496   0104E4  6E05               	movwf	___wmul@multiplicand^0,c
  2497   0104E6  EC02  F086         	call	___wmul	;wreg free
  2498   0104EA  500F               	movf	read_prec_or_width@c^0,w,c
  2499   0104EC  2403               	addwf	?___wmul^0,w,c
  2500   0104EE  6E10               	movwf	read_prec_or_width@n^0,c
  2501   0104F0  0E00               	movlw	0
  2502   0104F2  2004               	addwfc	(?___wmul+1)^0,w,c
  2503   0104F4  6E11               	movwf	(read_prec_or_width@n+1)^0,c
  2504   0104F6                     
  2505                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2506   0104F6  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2507   0104FA  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2508   0104FE  2ADE               	incf	postinc2,f,c
  2509   010500  0E00               	movlw	0
  2510   010502  22DD               	addwfc	postdec2,f,c
  2511   010504                     l2362:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2514   010504  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2515   010508  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2516   01050C  CFDE FFF6          	movff	postinc2,tblptrl
  2517   010510  CFDD FFF7          	movff	postdec2,tblptrh
  2518   010514                     	if	0	;tblptru may be non-zero
  2519   010514                     	endif
  2520   010514                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2521   010514  0E00               	movlw	low (__mediumconst shr (0+16))
  2522   010516  6EF8               	movwf	tblptru,c
  2523   010518                     	endif
  2524   010518  0008               	tblrd		*
  2525   01051A  50F5               	movf	tablat,w,c
  2526   01051C  0FD0               	addlw	208
  2527   01051E  6E0F               	movwf	read_prec_or_width@c^0,c
  2528   010520  0E09               	movlw	9
  2529   010522  640F               	cpfsgt	read_prec_or_width@c^0,c
  2530   010524  EF96  F082         	goto	u1001
  2531   010528  EF98  F082         	goto	u1000
  2532   01052C                     u1001:
  2533   01052C  EF6B  F082         	goto	l2358
  2534   010530                     u1000:
  2535   010530                     l1411:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2538   010530  C010  F009         	movff	read_prec_or_width@n,?_read_prec_or_width
  2539   010534  C011  F00A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2540   010538  0012               	return		;funcret
  2541   01053A                     __end_of_read_prec_or_width:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function ___wmul *****************
  2545 ;; Defined at:
  2546 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  multiplier      2    2[COMRAM] unsigned int 
  2549 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  product         2    6[COMRAM] unsigned int 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2    2[COMRAM] unsigned int 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, prodl, prodh
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 3
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_read_prec_or_width
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text12
  2576   010C04                     __ptext12:
  2577                           	callstack 0
  2578   010C04                     ___wmul:
  2579                           	callstack 23
  2580   010C04  5003               	movf	___wmul@multiplier^0,w,c
  2581   010C06  0205               	mulwf	___wmul@multiplicand^0,c
  2582   010C08  CFF3 F007          	movff	prodl,___wmul@product
  2583   010C0C  CFF4 F008          	movff	prodh,___wmul@product+1
  2584   010C10  5003               	movf	___wmul@multiplier^0,w,c
  2585   010C12  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  2586   010C14  50F3               	movf	243,w,c
  2587   010C16  2608               	addwf	(___wmul@product+1)^0,f,c
  2588   010C18  5004               	movf	(___wmul@multiplier+1)^0,w,c
  2589   010C1A  0205               	mulwf	___wmul@multiplicand^0,c
  2590   010C1C  50F3               	movf	243,w,c
  2591   010C1E  2608               	addwf	(___wmul@product+1)^0,f,c
  2592   010C20  C007  F003         	movff	___wmul@product,?___wmul
  2593   010C24  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2594   010C28  0012               	return		;funcret
  2595   010C2A                     __end_of___wmul:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _SYSTEM_Initialize *****************
  2599 ;; Defined at:
  2600 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 5
  2621 ;; This function calls:
  2622 ;;		_CLOCK_Initialize
  2623 ;;		_CRC_Initialize
  2624 ;;		_EUSART2_Initialize
  2625 ;;		_INTERRUPT_Initialize
  2626 ;;		_NVM_Initialize
  2627 ;;		_PIN_MANAGER_Initialize
  2628 ;;		_Timer0_Initialize
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text13
  2635   010C8C                     __ptext13:
  2636                           	callstack 0
  2637   010C8C                     _SYSTEM_Initialize:
  2638                           	callstack 25
  2639   010C8C                     
  2640                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
  2641   010C8C  EC55  F086         	call	_CLOCK_Initialize	;wreg free
  2642                           
  2643                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
  2644   010C90  EC02  F083         	call	_PIN_MANAGER_Initialize	;wreg free
  2645                           
  2646                           ;mcc_generated_files/system/src/system.c: 40:     CRC_Initialize();
  2647   010C94  EC5C  F085         	call	_CRC_Initialize	;wreg free
  2648   010C98                     
  2649                           ;mcc_generated_files/system/src/system.c: 41:     EUSART2_Initialize();
  2650   010C98  EC3C  F085         	call	_EUSART2_Initialize	;wreg free
  2651   010C9C                     
  2652                           ;mcc_generated_files/system/src/system.c: 42:     NVM_Initialize();
  2653   010C9C  EC9F  F086         	call	_NVM_Initialize	;wreg free
  2654   010CA0                     
  2655                           ;mcc_generated_files/system/src/system.c: 43:     Timer0_Initialize();
  2656   010CA0  ECDB  F085         	call	_Timer0_Initialize	;wreg free
  2657   010CA4                     
  2658                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  2659   010CA4  ECF7  F084         	call	_INTERRUPT_Initialize	;wreg free
  2660   010CA8  0012               	return		;funcret
  2661   010CAA                     __end_of_SYSTEM_Initialize:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _Timer0_Initialize *****************
  2665 ;; Defined at:
  2666 ;;		line 49 in file "mcc_generated_files/timer/src/tmr0.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 4
  2687 ;; This function calls:
  2688 ;;		_Timer0_OverflowCallbackRegister
  2689 ;; This function is called by:
  2690 ;;		_SYSTEM_Initialize
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text14
  2695   010BB6                     __ptext14:
  2696                           	callstack 0
  2697   010BB6                     _Timer0_Initialize:
  2698                           	callstack 25
  2699   010BB6                     
  2700                           ;mcc_generated_files/timer/src/tmr0.c: 52:     TMR0H = 0x11;
  2701   010BB6  0E11               	movlw	17
  2702   010BB8  6ED3               	movwf	211,c	;volatile
  2703                           
  2704                           ;mcc_generated_files/timer/src/tmr0.c: 55:     TMR0L = 0x0;
  2705   010BBA  0E00               	movlw	0
  2706   010BBC  6ED2               	movwf	210,c	;volatile
  2707                           
  2708                           ;mcc_generated_files/timer/src/tmr0.c: 58:     T0CON1 = 0x8F;
  2709   010BBE  0E8F               	movlw	143
  2710   010BC0  6ED5               	movwf	213,c	;volatile
  2711   010BC2                     
  2712                           ;mcc_generated_files/timer/src/tmr0.c: 62:     Timer0_OverflowCallbackRegister(Timer0_De
      +                          faultOverflowCallback);
  2713   010BC2  0E4E               	movlw	low _Timer0_DefaultOverflowCallback
  2714   010BC4  6E03               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^0,c
  2715   010BC6  0E0D               	movlw	high _Timer0_DefaultOverflowCallback
  2716   010BC8  6E04               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  2717   010BCA  0E01               	movlw	low (_Timer0_DefaultOverflowCallback shr (0+16))
  2718   010BCC  6E05               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  2719   010BCE  EC76  F086         	call	_Timer0_OverflowCallbackRegister	;wreg free
  2720   010BD2                     
  2721                           ;mcc_generated_files/timer/src/tmr0.c: 65:     PIR0bits.TMR0IF = 0;
  2722   010BD2  010E               	movlb	14	; () banked
  2723   010BD4  9BC5               	bcf	197,5,b	;volatile
  2724   010BD6                     
  2725                           ; BSR set to: 14
  2726                           ;mcc_generated_files/timer/src/tmr0.c: 68:     PIE0bits.TMR0IE = 1;
  2727   010BD6  8BBD               	bsf	189,5,b	;volatile
  2728   010BD8                     
  2729                           ; BSR set to: 14
  2730                           ;mcc_generated_files/timer/src/tmr0.c: 71:     T0CON0 = 0x80;
  2731   010BD8  0E80               	movlw	128
  2732   010BDA  6ED4               	movwf	212,c	;volatile
  2733   010BDC                     
  2734                           ; BSR set to: 14
  2735   010BDC  0012               	return		;funcret
  2736   010BDE                     __end_of_Timer0_Initialize:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  2740 ;; Defined at:
  2741 ;;		line 116 in file "mcc_generated_files/timer/src/tmr0.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  CallbackHand    3    2[COMRAM] PTR FTN()void 
  2744 ;;		 -> TMR0_UserInterruptHandler(1), Timer0_DefaultOverflowCallback(1), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2756 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2760 ;;Total ram usage:        3 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 3
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_Timer0_Initialize
  2767 ;;		_main
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text15
  2772   010CEC                     __ptext15:
  2773                           	callstack 0
  2774   010CEC                     _Timer0_OverflowCallbackRegister:
  2775                           	callstack 27
  2776   010CEC                     
  2777                           ;mcc_generated_files/timer/src/tmr0.c: 116: void Timer0_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 117: {;mcc_generated_file
      +                          s/timer/src/tmr0.c: 118:     Timer0_OverflowCallback = CallbackHandler;
  2778   010CEC  C003  F066         	movff	Timer0_OverflowCallbackRegister@CallbackHandler,_Timer0_OverflowCallback
  2779   010CF0  C004  F067         	movff	Timer0_OverflowCallbackRegister@CallbackHandler+1,_Timer0_OverflowCallback+1
  2780   010CF4  C005  F068         	movff	Timer0_OverflowCallbackRegister@CallbackHandler+2,_Timer0_OverflowCallback+2
  2781   010CF8  0012               	return		;funcret
  2782   010CFA                     __end_of_Timer0_OverflowCallbackRegister:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _PIN_MANAGER_Initialize *****************
  2786 ;; Defined at:
  2787 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 3
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_SYSTEM_Initialize
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text16
  2816   010604                     __ptext16:
  2817                           	callstack 0
  2818   010604                     _PIN_MANAGER_Initialize:
  2819                           	callstack 26
  2820   010604                     
  2821                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2822   010604  0E00               	movlw	0
  2823   010606  6E82               	movwf	130,c	;volatile
  2824                           
  2825                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2826   010608  0E00               	movlw	0
  2827   01060A  6E83               	movwf	131,c	;volatile
  2828                           
  2829                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2830   01060C  0E00               	movlw	0
  2831   01060E  6E84               	movwf	132,c	;volatile
  2832                           
  2833                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  2834   010610  0E00               	movlw	0
  2835   010612  6E85               	movwf	133,c	;volatile
  2836                           
  2837                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x1;
  2838   010614  0E01               	movlw	1
  2839   010616  6E86               	movwf	134,c	;volatile
  2840   010618                     
  2841                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xFF;
  2842   010618  6887               	setf	135,c	;volatile
  2843   01061A                     
  2844                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  2845   01061A  6888               	setf	136,c	;volatile
  2846   01061C                     
  2847                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xFF;
  2848   01061C  6889               	setf	137,c	;volatile
  2849                           
  2850                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFE;
  2851   01061E  0EFE               	movlw	254
  2852   010620  6E8A               	movwf	138,c	;volatile
  2853                           
  2854                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x6;
  2855   010622  0E06               	movlw	6
  2856   010624  6E8B               	movwf	139,c	;volatile
  2857   010626                     
  2858                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xFF;
  2859   010626  010F               	movlb	15	; () banked
  2860   010628  690C               	setf	12,b	;volatile
  2861                           
  2862                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0x7F;
  2863   01062A  0E7F               	movlw	127
  2864   01062C  6F14               	movwf	20,b	;volatile
  2865   01062E                     
  2866                           ; BSR set to: 15
  2867                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0xFF;
  2868   01062E  691C               	setf	28,b	;volatile
  2869   010630                     
  2870                           ; BSR set to: 15
  2871                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
  2872   010630  6921               	setf	33,b	;volatile
  2873                           
  2874                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x6;
  2875   010632  0E06               	movlw	6
  2876   010634  6F29               	movwf	41,b	;volatile
  2877                           
  2878                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  2879   010636  0E00               	movlw	0
  2880   010638  6F0B               	movwf	11,b	;volatile
  2881                           
  2882                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  2883   01063A  0E00               	movlw	0
  2884   01063C  6F13               	movwf	19,b	;volatile
  2885                           
  2886                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  2887   01063E  0E00               	movlw	0
  2888   010640  6F1B               	movwf	27,b	;volatile
  2889                           
  2890                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  2891   010642  0E00               	movlw	0
  2892   010644  6F20               	movwf	32,b	;volatile
  2893                           
  2894                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  2895   010646  0E00               	movlw	0
  2896   010648  6F28               	movwf	40,b	;volatile
  2897                           
  2898                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONA = 0x0;
  2899   01064A  0E00               	movlw	0
  2900   01064C  6F0A               	movwf	10,b	;volatile
  2901                           
  2902                           ;mcc_generated_files/system/src/pins.c: 84:     ODCONB = 0x0;
  2903   01064E  0E00               	movlw	0
  2904   010650  6F12               	movwf	18,b	;volatile
  2905                           
  2906                           ;mcc_generated_files/system/src/pins.c: 85:     ODCONC = 0x0;
  2907   010652  0E00               	movlw	0
  2908   010654  6F1A               	movwf	26,b	;volatile
  2909                           
  2910                           ;mcc_generated_files/system/src/pins.c: 86:     ODCOND = 0x0;
  2911   010656  0E00               	movlw	0
  2912   010658  6F1F               	movwf	31,b	;volatile
  2913                           
  2914                           ;mcc_generated_files/system/src/pins.c: 87:     ODCONE = 0x0;
  2915   01065A  0E00               	movlw	0
  2916   01065C  6F27               	movwf	39,b	;volatile
  2917   01065E                     
  2918                           ; BSR set to: 15
  2919                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONA = 0xFF;
  2920   01065E  6909               	setf	9,b	;volatile
  2921   010660                     
  2922                           ; BSR set to: 15
  2923                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONB = 0xFF;
  2924   010660  6911               	setf	17,b	;volatile
  2925   010662                     
  2926                           ; BSR set to: 15
  2927                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONC = 0xFF;
  2928   010662  6919               	setf	25,b	;volatile
  2929   010664                     
  2930                           ; BSR set to: 15
  2931                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCOND = 0xFF;
  2932   010664  691E               	setf	30,b	;volatile
  2933                           
  2934                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCONE = 0x7;
  2935   010666  0E07               	movlw	7
  2936   010668  6F26               	movwf	38,b	;volatile
  2937   01066A                     
  2938                           ; BSR set to: 15
  2939                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLA = 0xFF;
  2940   01066A  6908               	setf	8,b	;volatile
  2941   01066C                     
  2942                           ; BSR set to: 15
  2943                           ;mcc_generated_files/system/src/pins.c: 102:     INLVLB = 0xFF;
  2944   01066C  6910               	setf	16,b	;volatile
  2945   01066E                     
  2946                           ; BSR set to: 15
  2947                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLC = 0xFF;
  2948   01066E  6918               	setf	24,b	;volatile
  2949   010670                     
  2950                           ; BSR set to: 15
  2951                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLD = 0xFF;
  2952   010670  691D               	setf	29,b	;volatile
  2953                           
  2954                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLE = 0xF;
  2955   010672  0E0F               	movlw	15
  2956   010674  6F25               	movwf	37,b	;volatile
  2957                           
  2958                           ;mcc_generated_files/system/src/pins.c: 109:     RX2PPS = 0xF;
  2959   010676  0E0F               	movlw	15
  2960   010678  010E               	movlb	14	; () banked
  2961   01067A  6F88               	movwf	136,b	;volatile
  2962                           
  2963                           ;mcc_generated_files/system/src/pins.c: 110:     RD0PPS = 0x0B;
  2964   01067C  0E0B               	movlw	11
  2965   01067E  6FFA               	movwf	250,b	;volatile
  2966                           
  2967                           ;mcc_generated_files/system/src/pins.c: 115:     IOCAP = 0x0;
  2968   010680  0E00               	movlw	0
  2969   010682  010F               	movlb	15	; () banked
  2970   010684  6F07               	movwf	7,b	;volatile
  2971                           
  2972                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAN = 0x0;
  2973   010686  0E00               	movlw	0
  2974   010688  6F06               	movwf	6,b	;volatile
  2975                           
  2976                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAF = 0x0;
  2977   01068A  0E00               	movlw	0
  2978   01068C  6F05               	movwf	5,b	;volatile
  2979                           
  2980                           ;mcc_generated_files/system/src/pins.c: 118:     IOCBP = 0x0;
  2981   01068E  0E00               	movlw	0
  2982   010690  6F0F               	movwf	15,b	;volatile
  2983                           
  2984                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBN = 0x0;
  2985   010692  0E00               	movlw	0
  2986   010694  6F0E               	movwf	14,b	;volatile
  2987                           
  2988                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBF = 0x0;
  2989   010696  0E00               	movlw	0
  2990   010698  6F0D               	movwf	13,b	;volatile
  2991                           
  2992                           ;mcc_generated_files/system/src/pins.c: 121:     IOCCP = 0x0;
  2993   01069A  0E00               	movlw	0
  2994   01069C  6F17               	movwf	23,b	;volatile
  2995                           
  2996                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCN = 0x0;
  2997   01069E  0E00               	movlw	0
  2998   0106A0  6F16               	movwf	22,b	;volatile
  2999                           
  3000                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCF = 0x0;
  3001   0106A2  0E00               	movlw	0
  3002   0106A4  6F15               	movwf	21,b	;volatile
  3003                           
  3004                           ;mcc_generated_files/system/src/pins.c: 124:     IOCEP = 0x0;
  3005   0106A6  0E00               	movlw	0
  3006   0106A8  6F24               	movwf	36,b	;volatile
  3007                           
  3008                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEN = 0x0;
  3009   0106AA  0E00               	movlw	0
  3010   0106AC  6F23               	movwf	35,b	;volatile
  3011                           
  3012                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEF = 0x0;
  3013   0106AE  0E00               	movlw	0
  3014   0106B0  6F22               	movwf	34,b	;volatile
  3015   0106B2                     
  3016                           ; BSR set to: 15
  3017   0106B2  0012               	return		;funcret
  3018   0106B4                     __end_of_PIN_MANAGER_Initialize:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _NVM_Initialize *****************
  3022 ;; Defined at:
  3023 ;;		line 43 in file "mcc_generated_files/nvm/src/nvm.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 4
  3044 ;; This function calls:
  3045 ;;		_NVM_StatusClear
  3046 ;; This function is called by:
  3047 ;;		_SYSTEM_Initialize
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text17
  3052   010D3E                     __ptext17:
  3053                           	callstack 0
  3054   010D3E                     _NVM_Initialize:
  3055                           	callstack 25
  3056   010D3E                     
  3057                           ;mcc_generated_files/nvm/src/nvm.c: 45:     NVM_StatusClear();
  3058   010D3E  ECA5  F086         	call	_NVM_StatusClear	;wreg free
  3059   010D42  0012               	return		;funcret
  3060   010D44                     __end_of_NVM_Initialize:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _NVM_StatusClear *****************
  3064 ;; Defined at:
  3065 ;;		line 65 in file "mcc_generated_files/nvm/src/nvm.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		None
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 3
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_NVM_Initialize
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text18
  3094   010D4A                     __ptext18:
  3095                           	callstack 0
  3096   010D4A                     _NVM_StatusClear:
  3097                           	callstack 25
  3098   010D4A                     
  3099                           ;mcc_generated_files/nvm/src/nvm.c: 67:     NVMCON0bits.NVMERR = 0;
  3100   010D4A  987F               	bcf	127,4,c	;volatile
  3101   010D4C  0012               	return		;funcret
  3102   010D4E                     __end_of_NVM_StatusClear:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _INTERRUPT_Initialize *****************
  3106 ;; Defined at:
  3107 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 4
  3128 ;; This function calls:
  3129 ;;		_INT0_SetInterruptHandler
  3130 ;;		_INT1_SetInterruptHandler
  3131 ;;		_INT2_SetInterruptHandler
  3132 ;; This function is called by:
  3133 ;;		_SYSTEM_Initialize
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text19
  3138   0109EE                     __ptext19:
  3139                           	callstack 0
  3140   0109EE                     _INTERRUPT_Initialize:
  3141                           	callstack 25
  3142   0109EE                     
  3143                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  3144   0109EE  9AF2               	bcf	242,5,c	;volatile
  3145                           
  3146                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  3147   0109F0  010E               	movlb	14	; () banked
  3148   0109F2  91C5               	bcf	197,0,b	;volatile
  3149                           
  3150                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  3151   0109F4  80F2               	bsf	242,0,c	;volatile
  3152   0109F6                     
  3153                           ; BSR set to: 14
  3154                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  3155   0109F6  0E00               	movlw	0
  3156   0109F8  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3157   0109FA  0E00               	movlw	0
  3158   0109FC  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3159   0109FE  0E00               	movlw	0
  3160   010A00  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  3161   010A02  EC8B  F086         	call	_INT0_SetInterruptHandler	;wreg free
  3162   010A06                     
  3163                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  3164   010A06  010E               	movlb	14	; () banked
  3165   010A08  93C5               	bcf	197,1,b	;volatile
  3166   010A0A                     
  3167                           ; BSR set to: 14
  3168                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  3169   010A0A  82F2               	bsf	242,1,c	;volatile
  3170                           
  3171                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  3172   010A0C  0E00               	movlw	0
  3173   010A0E  6E03               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3174   010A10  0E00               	movlw	0
  3175   010A12  6E04               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3176   010A14  0E00               	movlw	0
  3177   010A16  6E05               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  3178   010A18  EC84  F086         	call	_INT1_SetInterruptHandler	;wreg free
  3179   010A1C                     
  3180                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  3181   010A1C  010E               	movlb	14	; () banked
  3182   010A1E  95C5               	bcf	197,2,b	;volatile
  3183   010A20                     
  3184                           ; BSR set to: 14
  3185                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  3186   010A20  84F2               	bsf	242,2,c	;volatile
  3187                           
  3188                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  3189   010A22  0E00               	movlw	0
  3190   010A24  6E03               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  3191   010A26  0E00               	movlw	0
  3192   010A28  6E04               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  3193   010A2A  0E00               	movlw	0
  3194   010A2C  6E05               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  3195   010A2E  EC7D  F086         	call	_INT2_SetInterruptHandler	;wreg free
  3196   010A32  0012               	return		;funcret
  3197   010A34                     __end_of_INTERRUPT_Initialize:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _INT2_SetInterruptHandler *****************
  3201 ;; Defined at:
  3202 ;;		line 174 in file "mcc_generated_files/system/src/interrupt.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  3205 ;;		 -> INT2_DefaultInterruptHandler(1), 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;Total ram usage:        3 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 3
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_INTERRUPT_Initialize
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text20
  3232   010CFA                     __ptext20:
  3233                           	callstack 0
  3234   010CFA                     _INT2_SetInterruptHandler:
  3235                           	callstack 25
  3236   010CFA                     
  3237                           ;mcc_generated_files/system/src/interrupt.c: 175:     INT2_InterruptHandler = InterruptH
      +                          andler;
  3238   010CFA  C003  F069         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3239   010CFE  C004  F06A         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3240   010D02  C005  F06B         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  3241   010D06  0012               	return		;funcret
  3242   010D08                     __end_of_INT2_SetInterruptHandler:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _INT1_SetInterruptHandler *****************
  3246 ;; Defined at:
  3247 ;;		line 148 in file "mcc_generated_files/system/src/interrupt.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  3250 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3262 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;Total ram usage:        3 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 3
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_INTERRUPT_Initialize
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text21
  3277   010D08                     __ptext21:
  3278                           	callstack 0
  3279   010D08                     _INT1_SetInterruptHandler:
  3280                           	callstack 25
  3281   010D08                     
  3282                           ;mcc_generated_files/system/src/interrupt.c: 149:     INT1_InterruptHandler = InterruptH
      +                          andler;
  3283   010D08  C003  F06C         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3284   010D0C  C004  F06D         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3285   010D10  C005  F06E         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  3286   010D14  0012               	return		;funcret
  3287   010D16                     __end_of_INT1_SetInterruptHandler:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _INT0_SetInterruptHandler *****************
  3291 ;; Defined at:
  3292 ;;		line 122 in file "mcc_generated_files/system/src/interrupt.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  3295 ;;		 -> INT0_DefaultInterruptHandler(1), 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;Total ram usage:        3 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 3
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_INTERRUPT_Initialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text22
  3322   010D16                     __ptext22:
  3323                           	callstack 0
  3324   010D16                     _INT0_SetInterruptHandler:
  3325                           	callstack 25
  3326   010D16                     
  3327                           ;mcc_generated_files/system/src/interrupt.c: 123:     INT0_InterruptHandler = InterruptH
      +                          andler;
  3328   010D16  C003  F052         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3329   010D1A  C004  F053         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3330   010D1E  C005  F054         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  3331   010D22  0012               	return		;funcret
  3332   010D24                     __end_of_INT0_SetInterruptHandler:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _EUSART2_Initialize *****************
  3336 ;; Defined at:
  3337 ;;		line 94 in file "mcc_generated_files/uart/src/eusart2.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 4
  3358 ;; This function calls:
  3359 ;;		_EUSART2_FramingErrorCallbackRegister
  3360 ;;		_EUSART2_OverrunErrorCallbackRegister
  3361 ;; This function is called by:
  3362 ;;		_SYSTEM_Initialize
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text23
  3367   010A78                     __ptext23:
  3368                           	callstack 0
  3369   010A78                     _EUSART2_Initialize:
  3370                           	callstack 25
  3371   010A78                     
  3372                           ;mcc_generated_files/uart/src/eusart2.c: 99:     BAUD2CON = 0x48;
  3373   010A78  0E48               	movlw	72
  3374   010A7A  010E               	movlb	14	; () banked
  3375   010A7C  6F9A               	movwf	154,b	;volatile
  3376                           
  3377                           ;mcc_generated_files/uart/src/eusart2.c: 101:     RC2STA = 0x90;
  3378   010A7E  0E90               	movlw	144
  3379   010A80  6F98               	movwf	152,b	;volatile
  3380                           
  3381                           ;mcc_generated_files/uart/src/eusart2.c: 103:     TX2STA = 0x26;
  3382   010A82  0E26               	movlw	38
  3383   010A84  6F99               	movwf	153,b	;volatile
  3384                           
  3385                           ;mcc_generated_files/uart/src/eusart2.c: 105:     SP2BRGL = 0x19;
  3386   010A86  0E19               	movlw	25
  3387   010A88  6F96               	movwf	150,b	;volatile
  3388                           
  3389                           ;mcc_generated_files/uart/src/eusart2.c: 107:     SP2BRGH = 0x0;
  3390   010A8A  0E00               	movlw	0
  3391   010A8C  6F97               	movwf	151,b	;volatile
  3392   010A8E                     
  3393                           ; BSR set to: 14
  3394                           ;mcc_generated_files/uart/src/eusart2.c: 109:     EUSART2_FramingErrorCallbackRegister(E
      +                          USART2_DefaultFramingErrorCallback);
  3395   010A8E  0E00               	movlw	0
  3396   010A90  6E03               	movwf	EUSART2_FramingErrorCallbackRegister@callbackHandler^0,c
  3397   010A92  0E00               	movlw	0
  3398   010A94  6E04               	movwf	(EUSART2_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  3399   010A96  0E00               	movlw	0
  3400   010A98  6E05               	movwf	(EUSART2_FramingErrorCallbackRegister@callbackHandler+2)^0,c
  3401   010A9A  EC26  F086         	call	_EUSART2_FramingErrorCallbackRegister	;wreg free
  3402   010A9E                     
  3403                           ;mcc_generated_files/uart/src/eusart2.c: 110:     EUSART2_OverrunErrorCallbackRegister(E
      +                          USART2_DefaultOverrunErrorCallback);
  3404   010A9E  0E00               	movlw	0
  3405   010AA0  6E03               	movwf	EUSART2_OverrunErrorCallbackRegister@callbackHandler^0,c
  3406   010AA2  0E00               	movlw	0
  3407   010AA4  6E04               	movwf	(EUSART2_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  3408   010AA6  0E00               	movlw	0
  3409   010AA8  6E05               	movwf	(EUSART2_OverrunErrorCallbackRegister@callbackHandler+2)^0,c
  3410   010AAA  EC15  F086         	call	_EUSART2_OverrunErrorCallbackRegister	;wreg free
  3411                           
  3412                           ;mcc_generated_files/uart/src/eusart2.c: 111:     eusart2RxLastError.status = 0;
  3413   010AAE  0E00               	movlw	0
  3414   010AB0  6E5A               	movwf	(_eusart2RxLastError+1)^0,c	;volatile
  3415   010AB2  0E00               	movlw	0
  3416   010AB4  6E59               	movwf	_eusart2RxLastError^0,c	;volatile
  3417   010AB6  0012               	return		;funcret
  3418   010AB8                     __end_of_EUSART2_Initialize:
  3419                           	callstack 0
  3420                           
  3421 ;; *************** function _EUSART2_OverrunErrorCallbackRegister *****************
  3422 ;; Defined at:
  3423 ;;		line 272 in file "mcc_generated_files/uart/src/eusart2.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  3426 ;;		 -> EUSART2_DefaultOverrunErrorCallback(1), 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3438 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;Total ram usage:        3 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 3
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_EUSART2_Initialize
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text24
  3453   010C2A                     __ptext24:
  3454                           	callstack 0
  3455   010C2A                     _EUSART2_OverrunErrorCallbackRegister:
  3456                           	callstack 25
  3457   010C2A                     
  3458                           ;mcc_generated_files/uart/src/eusart2.c: 272: void EUSART2_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart2.c: 273: {;mcc_gener
      +                          ated_files/uart/src/eusart2.c: 274:     if(((void*)0) != callbackHandler)
  3459   010C2A  5003               	movf	EUSART2_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  3460   010C2C  1004               	iorwf	(EUSART2_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  3461   010C2E  1005               	iorwf	(EUSART2_OverrunErrorCallbackRegister@callbackHandler+2)^0,w,c
  3462   010C30  B4D8               	btfsc	status,2,c
  3463   010C32  EF1D  F086         	goto	u1051
  3464   010C36  EF1F  F086         	goto	u1050
  3465   010C3A                     u1051:
  3466   010C3A  EF25  F086         	goto	l611
  3467   010C3E                     u1050:
  3468   010C3E                     
  3469                           ;mcc_generated_files/uart/src/eusart2.c: 275:     {;mcc_generated_files/uart/src/eusart2
      +                          .c: 276:         EUSART2_OverrunErrorHandler = callbackHandler;
  3470   010C3E  C003  F060         	movff	EUSART2_OverrunErrorCallbackRegister@callbackHandler,_EUSART2_OverrunErrorHandler
  3471   010C42  C004  F061         	movff	EUSART2_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART2_OverrunErrorHandl
      +                          er+1
  3472   010C46  C005  F062         	movff	EUSART2_OverrunErrorCallbackRegister@callbackHandler+2,_EUSART2_OverrunErrorHandl
      +                          er+2
  3473   010C4A                     l611:
  3474   010C4A  0012               	return		;funcret
  3475   010C4C                     __end_of_EUSART2_OverrunErrorCallbackRegister:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _EUSART2_FramingErrorCallbackRegister *****************
  3479 ;; Defined at:
  3480 ;;		line 264 in file "mcc_generated_files/uart/src/eusart2.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  3483 ;;		 -> EUSART2_DefaultFramingErrorCallback(1), 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3495 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;Total ram usage:        3 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 3
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_EUSART2_Initialize
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text25
  3510   010C4C                     __ptext25:
  3511                           	callstack 0
  3512   010C4C                     _EUSART2_FramingErrorCallbackRegister:
  3513                           	callstack 25
  3514   010C4C                     
  3515                           ;mcc_generated_files/uart/src/eusart2.c: 264: void EUSART2_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart2.c: 265: {;mcc_gener
      +                          ated_files/uart/src/eusart2.c: 266:     if(((void*)0) != callbackHandler)
  3516   010C4C  5003               	movf	EUSART2_FramingErrorCallbackRegister@callbackHandler^0,w,c
  3517   010C4E  1004               	iorwf	(EUSART2_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  3518   010C50  1005               	iorwf	(EUSART2_FramingErrorCallbackRegister@callbackHandler+2)^0,w,c
  3519   010C52  B4D8               	btfsc	status,2,c
  3520   010C54  EF2E  F086         	goto	u1041
  3521   010C58  EF30  F086         	goto	u1040
  3522   010C5C                     u1041:
  3523   010C5C  EF36  F086         	goto	l607
  3524   010C60                     u1040:
  3525   010C60                     
  3526                           ;mcc_generated_files/uart/src/eusart2.c: 267:     {;mcc_generated_files/uart/src/eusart2
      +                          .c: 268:         EUSART2_FramingErrorHandler = callbackHandler;
  3527   010C60  C003  F063         	movff	EUSART2_FramingErrorCallbackRegister@callbackHandler,_EUSART2_FramingErrorHandler
  3528   010C64  C004  F064         	movff	EUSART2_FramingErrorCallbackRegister@callbackHandler+1,_EUSART2_FramingErrorHandl
      +                          er+1
  3529   010C68  C005  F065         	movff	EUSART2_FramingErrorCallbackRegister@callbackHandler+2,_EUSART2_FramingErrorHandl
      +                          er+2
  3530   010C6C                     l607:
  3531   010C6C  0012               	return		;funcret
  3532   010C6E                     __end_of_EUSART2_FramingErrorCallbackRegister:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _CRC_Initialize *****************
  3536 ;; Defined at:
  3537 ;;		line 43 in file "mcc_generated_files/crc/src/crc.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 3
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_SYSTEM_Initialize
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text26
  3566   010AB8                     __ptext26:
  3567                           	callstack 0
  3568   010AB8                     _CRC_Initialize:
  3569                           	callstack 26
  3570   010AB8                     
  3571                           ;mcc_generated_files/crc/src/crc.c: 47:     CRCCON1 = 0xFF;
  3572   010AB8  6878               	setf	120,c	;volatile
  3573   010ABA                     
  3574                           ;mcc_generated_files/crc/src/crc.c: 50:     CRCXORH = 0x10;
  3575   010ABA  0E10               	movlw	16
  3576   010ABC  6E76               	movwf	118,c	;volatile
  3577                           
  3578                           ;mcc_generated_files/crc/src/crc.c: 52:     CRCXORL = 0x21;
  3579   010ABE  0E21               	movlw	33
  3580   010AC0  6E75               	movwf	117,c	;volatile
  3581   010AC2                     
  3582                           ;mcc_generated_files/crc/src/crc.c: 55:     CRCACCH = 0xFF;
  3583   010AC2  6872               	setf	114,c	;volatile
  3584   010AC4                     
  3585                           ;mcc_generated_files/crc/src/crc.c: 57:     CRCACCL = 0xFF;
  3586   010AC4  6871               	setf	113,c	;volatile
  3587                           
  3588                           ;mcc_generated_files/crc/src/crc.c: 60:     CRCDATH = 0x0;
  3589   010AC6  0E00               	movlw	0
  3590   010AC8  6E70               	movwf	112,c	;volatile
  3591                           
  3592                           ;mcc_generated_files/crc/src/crc.c: 62:     CRCDATL = 0x0;
  3593   010ACA  0E00               	movlw	0
  3594   010ACC  6E6F               	movwf	111,c	;volatile
  3595   010ACE                     
  3596                           ;mcc_generated_files/crc/src/crc.c: 66:     SCANHADRH = 0xFF;
  3597   010ACE  010F               	movlb	15	; () banked
  3598   010AD0  6948               	setf	72,b	;volatile
  3599   010AD2                     
  3600                           ; BSR set to: 15
  3601                           ;mcc_generated_files/crc/src/crc.c: 68:     SCANHADRL = 0xFF;
  3602   010AD2  6947               	setf	71,b	;volatile
  3603                           
  3604                           ;mcc_generated_files/crc/src/crc.c: 70:     SCANLADRH = 0x0;
  3605   010AD4  0E00               	movlw	0
  3606   010AD6  6F45               	movwf	69,b	;volatile
  3607                           
  3608                           ;mcc_generated_files/crc/src/crc.c: 72:     SCANLADRL = 0x0;
  3609   010AD8  0E00               	movlw	0
  3610   010ADA  6F44               	movwf	68,b	;volatile
  3611                           
  3612                           ;mcc_generated_files/crc/src/crc.c: 74:     SCANTRIG = 0x0;
  3613   010ADC  0E00               	movlw	0
  3614   010ADE  6F4B               	movwf	75,b	;volatile
  3615   010AE0                     
  3616                           ; BSR set to: 15
  3617                           ;mcc_generated_files/crc/src/crc.c: 77:     PIR7bits.CRCIF = 0;
  3618   010AE0  010E               	movlb	14	; () banked
  3619   010AE2  9DCC               	bcf	204,6,b	;volatile
  3620   010AE4                     
  3621                           ; BSR set to: 14
  3622                           ;mcc_generated_files/crc/src/crc.c: 79:     PIE7bits.CRCIE = 0;
  3623   010AE4  9DC4               	bcf	196,6,b	;volatile
  3624   010AE6                     
  3625                           ; BSR set to: 14
  3626                           ;mcc_generated_files/crc/src/crc.c: 82:     PIR7bits.SCANIF = 0;
  3627   010AE6  9FCC               	bcf	204,7,b	;volatile
  3628   010AE8                     
  3629                           ; BSR set to: 14
  3630                           ;mcc_generated_files/crc/src/crc.c: 84:     PIE7bits.SCANIE = 0;
  3631   010AE8  9FC4               	bcf	196,7,b	;volatile
  3632                           
  3633                           ;mcc_generated_files/crc/src/crc.c: 87:     CRCCON0 = 0x80;
  3634   010AEA  0E80               	movlw	128
  3635   010AEC  6E77               	movwf	119,c	;volatile
  3636                           
  3637                           ;mcc_generated_files/crc/src/crc.c: 89:     SCANCON0 = 0x80;
  3638   010AEE  0E80               	movlw	128
  3639   010AF0  010F               	movlb	15	; () banked
  3640   010AF2  6F4A               	movwf	74,b	;volatile
  3641   010AF4                     
  3642                           ; BSR set to: 15
  3643   010AF4  0012               	return		;funcret
  3644   010AF6                     __end_of_CRC_Initialize:
  3645                           	callstack 0
  3646                           
  3647 ;; *************** function _CLOCK_Initialize *****************
  3648 ;; Defined at:
  3649 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: 3
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_SYSTEM_Initialize
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text27
  3678   010CAA                     __ptext27:
  3679                           	callstack 0
  3680   010CAA                     _CLOCK_Initialize:
  3681                           	callstack 26
  3682   010CAA                     
  3683                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x60;
  3684   010CAA  0E60               	movlw	96
  3685   010CAC  010E               	movlb	14	; () banked
  3686   010CAE  6FD3               	movwf	211,b	;volatile
  3687                           
  3688                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  3689   010CB0  0E00               	movlw	0
  3690   010CB2  6FD5               	movwf	213,b	;volatile
  3691                           
  3692                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  3693   010CB4  0E00               	movlw	0
  3694   010CB6  6FD7               	movwf	215,b	;volatile
  3695                           
  3696                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x0;
  3697   010CB8  0E00               	movlw	0
  3698   010CBA  6FD9               	movwf	217,b	;volatile
  3699                           
  3700                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  3701   010CBC  0E00               	movlw	0
  3702   010CBE  6FD8               	movwf	216,b	;volatile
  3703   010CC0                     
  3704                           ; BSR set to: 14
  3705   010CC0  0012               	return		;funcret
  3706   010CC2                     __end_of_CLOCK_Initialize:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _NVM_UnlockKeySet *****************
  3710 ;; Defined at:
  3711 ;;		line 70 in file "mcc_generated_files/nvm/src/nvm.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  unlockKey       2    2[COMRAM] unsigned short 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 3
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text28
  3740   010D24                     __ptext28:
  3741                           	callstack 0
  3742   010D24                     _NVM_UnlockKeySet:
  3743                           	callstack 27
  3744   010D24                     
  3745                           ;mcc_generated_files/nvm/src/nvm.c: 70: void NVM_UnlockKeySet(uint16_t unlockKey);mcc_ge
      +                          nerated_files/nvm/src/nvm.c: 71: {;mcc_generated_files/nvm/src/nvm.c: 72:     unlockKeyH
      +                          igh = (uint8_t) (unlockKey >> 8);
  3746   010D24  5004               	movf	(NVM_UnlockKeySet@unlockKey+1)^0,w,c
  3747   010D26  6E5C               	movwf	_unlockKeyHigh^0,c	;volatile
  3748   010D28                     
  3749                           ;mcc_generated_files/nvm/src/nvm.c: 73:     unlockKeyLow = (uint8_t) unlockKey;
  3750   010D28  C003  F05D         	movff	NVM_UnlockKeySet@unlockKey,_unlockKeyLow	;volatile
  3751   010D2C  0012               	return		;funcret
  3752   010D2E                     __end_of_NVM_UnlockKeySet:
  3753                           	callstack 0
  3754                           
  3755 ;; *************** function _NVM_IsBusy *****************
  3756 ;; Defined at:
  3757 ;;		line 48 in file "mcc_generated_files/nvm/src/nvm.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      _Bool 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 3
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text29
  3786   0108B8                     __ptext29:
  3787                           	callstack 0
  3788   0108B8                     _NVM_IsBusy:
  3789                           	callstack 27
  3790   0108B8                     
  3791                           ;mcc_generated_files/nvm/src/nvm.c: 50:     return (NVMCON1bits.SECER || NVMCON1bits.SEC
      +                          WR || NVMCON1bits.WR || NVMCON1bits.SECRD || NVMCON1bits.RD);
  3792   0108B8  0E01               	movlw	1
  3793   0108BA  6E03               	movwf	_NVM_IsBusy$336^0,c
  3794   0108BC  BC80               	btfsc	128,6,c	;volsfr
  3795   0108BE  EF63  F084         	goto	u1131
  3796   0108C2  EF65  F084         	goto	u1130
  3797   0108C6                     u1131:
  3798   0108C6  EF83  F084         	goto	l118
  3799   0108CA                     u1130:
  3800   0108CA  BA80               	btfsc	128,5,c	;volsfr
  3801   0108CC  EF6A  F084         	goto	u1141
  3802   0108D0  EF6C  F084         	goto	u1140
  3803   0108D4                     u1141:
  3804   0108D4  EF83  F084         	goto	l118
  3805   0108D8                     u1140:
  3806   0108D8  B880               	btfsc	128,4,c	;volsfr
  3807   0108DA  EF71  F084         	goto	u1151
  3808   0108DE  EF73  F084         	goto	u1150
  3809   0108E2                     u1151:
  3810   0108E2  EF83  F084         	goto	l118
  3811   0108E6                     u1150:
  3812   0108E6  B280               	btfsc	128,1,c	;volsfr
  3813   0108E8  EF78  F084         	goto	u1161
  3814   0108EC  EF7A  F084         	goto	u1160
  3815   0108F0                     u1161:
  3816   0108F0  EF83  F084         	goto	l118
  3817   0108F4                     u1160:
  3818   0108F4  B080               	btfsc	128,0,c	;volsfr
  3819   0108F6  EF7F  F084         	goto	u1171
  3820   0108FA  EF81  F084         	goto	u1170
  3821   0108FE                     u1171:
  3822   0108FE  EF83  F084         	goto	l118
  3823   010902                     u1170:
  3824   010902  0E00               	movlw	0
  3825   010904  6E03               	movwf	_NVM_IsBusy$336^0,c
  3826   010906                     l118:
  3827   010906  5003               	movf	_NVM_IsBusy$336^0,w,c
  3828   010908  0012               	return		;funcret
  3829   01090A                     __end_of_NVM_IsBusy:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _EEPROM_Write *****************
  3833 ;; Defined at:
  3834 ;;		line 336 in file "mcc_generated_files/nvm/src/nvm.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  address         3    2[COMRAM] unsigned um
  3837 ;;  data            1    5[COMRAM] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  globalInterr    1    9[COMRAM] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;Total ram usage:        8 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 3
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           ;# 
  3864                           
  3865                           	psect	text30
  3866   01095A                     __ptext30:
  3867                           	callstack 0
  3868   01095A                     _EEPROM_Write:
  3869                           	callstack 27
  3870   01095A                     
  3871                           ;mcc_generated_files/nvm/src/nvm.c: 336: void EEPROM_Write(eeprom_address_t address, eep
      +                          rom_data_t data);mcc_generated_files/nvm/src/nvm.c: 337: {;mcc_generated_files/nvm/src/n
      +                          vm.c: 339:     uint8_t globalInterruptBitValue = INTCONbits.GIE;
  3872   01095A  0E00               	movlw	0
  3873   01095C  BEF2               	btfsc	242,7,c	;volatile
  3874   01095E  0E01               	movlw	1
  3875   010960  6E0A               	movwf	EEPROM_Write@globalInterruptBitValue^0,c
  3876   010962                     
  3877                           ;mcc_generated_files/nvm/src/nvm.c: 342:     NVMADRU = (uint8_t) (address >> 16);
  3878   010962  C005  FF7B         	movff	EEPROM_Write@address+2,3963	;volatile
  3879   010966                     
  3880                           ;mcc_generated_files/nvm/src/nvm.c: 343:     NVMADRH = (uint8_t) (address >> 8);
  3881   010966  C003  F007         	movff	EEPROM_Write@address,??_EEPROM_Write
  3882   01096A  C004  F008         	movff	EEPROM_Write@address+1,??_EEPROM_Write+1
  3883   01096E  C005  F009         	movff	EEPROM_Write@address+2,??_EEPROM_Write+2
  3884   010972  C008  F007         	movff	??_EEPROM_Write+1,??_EEPROM_Write
  3885   010976  C009  F008         	movff	??_EEPROM_Write+2,??_EEPROM_Write+1
  3886   01097A  6A09               	clrf	(??_EEPROM_Write+2)^0,c
  3887   01097C  5007               	movf	??_EEPROM_Write^0,w,c
  3888   01097E  6E7A               	movwf	122,c	;volatile
  3889   010980                     
  3890                           ;mcc_generated_files/nvm/src/nvm.c: 344:     NVMADRL = (uint8_t) address;
  3891   010980  C003  FF79         	movff	EEPROM_Write@address,3961	;volatile
  3892   010984                     
  3893                           ;mcc_generated_files/nvm/src/nvm.c: 347:     NVMDATL = data;
  3894   010984  C006  FF7C         	movff	EEPROM_Write@data,3964	;volatile
  3895   010988                     
  3896                           ;mcc_generated_files/nvm/src/nvm.c: 350:     NVMCON0bits.NVMEN = 1;
  3897   010988  8E7F               	bsf	127,7,c	;volatile
  3898   01098A                     
  3899                           ;mcc_generated_files/nvm/src/nvm.c: 353:     INTCONbits.GIE = 0;
  3900   01098A  9EF2               	bcf	242,7,c	;volatile
  3901                           
  3902                           ;# 
  3903                           ;# 
  3904   01098C  010F               	banksel	3969	;# 
  3905   01098E                     
  3906                           ;mcc_generated_files/nvm/src/nvm.c: 359:     NVMCON2 = unlockKeyLow;
  3907   01098E  C05D  FF81         	movff	_unlockKeyLow,3969	;volsfr
  3908   010992  505C               	movf	_unlockKeyHigh& (0+255),w,c	;# 
  3909   010994  6F81               	movwf	129,b	;# 
  3910   010996  8980               	bsf	128,4,b	;# 
  3911   010998                     
  3912                           ;mcc_generated_files/nvm/src/nvm.c: 368:     INTCONbits.GIE = globalInterruptBitValue;
  3913   010998  B00A               	btfsc	EEPROM_Write@globalInterruptBitValue^0,0,c
  3914   01099A  D002               	bra	u1185
  3915   01099C  9EF2               	bcf	242,7,c	;volatile
  3916   01099E  D001               	bra	u1186
  3917   0109A0                     u1185:
  3918   0109A0  8EF2               	bsf	242,7,c	;volatile
  3919   0109A2                     u1186:
  3920   0109A2                     
  3921                           ;mcc_generated_files/nvm/src/nvm.c: 371:     NVMCON0bits.NVMEN = 0;
  3922   0109A2  9E7F               	bcf	127,7,c	;volatile
  3923   0109A4  0012               	return		;funcret
  3924   0109A6                     __end_of_EEPROM_Write:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _EEPROM_Read *****************
  3928 ;; Defined at:
  3929 ;;		line 317 in file "mcc_generated_files/nvm/src/nvm.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  address         3    2[COMRAM] unsigned um
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      unsigned char 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3943 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        6 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 3
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text31
  3958   010B60                     __ptext31:
  3959                           	callstack 0
  3960   010B60                     _EEPROM_Read:
  3961                           	callstack 27
  3962   010B60                     
  3963                           ;mcc_generated_files/nvm/src/nvm.c: 317: eeprom_data_t EEPROM_Read(eeprom_address_t addr
      +                          ess);mcc_generated_files/nvm/src/nvm.c: 318: {;mcc_generated_files/nvm/src/nvm.c: 320:  
      +                             NVMADRU = (uint8_t) (address >> 16);
  3964   010B60  C005  FF7B         	movff	EEPROM_Read@address+2,3963	;volatile
  3965   010B64                     
  3966                           ;mcc_generated_files/nvm/src/nvm.c: 321:     NVMADRH = (uint8_t) (address >> 8);
  3967   010B64  C003  F006         	movff	EEPROM_Read@address,??_EEPROM_Read
  3968   010B68  C004  F007         	movff	EEPROM_Read@address+1,??_EEPROM_Read+1
  3969   010B6C  C005  F008         	movff	EEPROM_Read@address+2,??_EEPROM_Read+2
  3970   010B70  C007  F006         	movff	??_EEPROM_Read+1,??_EEPROM_Read
  3971   010B74  C008  F007         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
  3972   010B78  6A08               	clrf	(??_EEPROM_Read+2)^0,c
  3973   010B7A  5006               	movf	??_EEPROM_Read^0,w,c
  3974   010B7C  6E7A               	movwf	122,c	;volatile
  3975   010B7E                     
  3976                           ;mcc_generated_files/nvm/src/nvm.c: 322:     NVMADRL = (uint8_t) address;
  3977   010B7E  C003  FF79         	movff	EEPROM_Read@address,3961	;volatile
  3978   010B82                     
  3979                           ;mcc_generated_files/nvm/src/nvm.c: 325:     NVMCON0bits.NVMEN = 1;
  3980   010B82  8E7F               	bsf	127,7,c	;volatile
  3981   010B84                     
  3982                           ;mcc_generated_files/nvm/src/nvm.c: 328:     NVMCON1bits.RD = 1;
  3983   010B84  8080               	bsf	128,0,c	;volsfr
  3984   010B86                     
  3985                           ;mcc_generated_files/nvm/src/nvm.c: 331:     NVMCON0bits.NVMEN = 0;
  3986   010B86  9E7F               	bcf	127,7,c	;volatile
  3987                           
  3988                           ;mcc_generated_files/nvm/src/nvm.c: 333:     return NVMDATL;
  3989   010B88  507C               	movf	124,w,c	;volatile
  3990   010B8A  0012               	return		;funcret
  3991   010B8C                     __end_of_EEPROM_Read:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _CalculateFlashCRC *****************
  3995 ;; Defined at:
  3996 ;;		line 172 in file "main.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  CRCVal          2   18[COMRAM] unsigned short 
  4001 ;;  busyStatus      1   20[COMRAM] _Bool 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  2   16[COMRAM] unsigned short 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;Total ram usage:        6 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 5
  4018 ;; This function calls:
  4019 ;;		_CRC_GetCalculatedResult
  4020 ;;		_CRC_IsCrcBusy
  4021 ;;		_CRC_IsScannerBusy
  4022 ;;		_CRC_SetScannerAddressLimit
  4023 ;;		_CRC_StartScanner
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text32
  4030   01075E                     __ptext32:
  4031                           	callstack 0
  4032   01075E                     _CalculateFlashCRC:
  4033                           	callstack 25
  4034   01075E                     
  4035                           ;main.c: 175:     _Bool busyStatus = 0;
  4036   01075E  0E00               	movlw	0
  4037   010760  6E15               	movwf	CalculateFlashCRC@busyStatus^0,c
  4038   010762                     
  4039                           ;main.c: 178:     CRCACCH = (uint8_t)((0xFFFF) >> 8);
  4040   010762  6872               	setf	114,c	;volatile
  4041   010764                     
  4042                           ;main.c: 179:     CRCACCL = (uint8_t)((0xFFFF));
  4043   010764  6871               	setf	113,c	;volatile
  4044   010766                     
  4045                           ;main.c: 182:     CRC_SetScannerAddressLimit(((uint32_t)0x0000), ((uint32_t)0x7FFE));
  4046   010766  0E00               	movlw	0
  4047   010768  6E03               	movwf	CRC_SetScannerAddressLimit@startAddr^0,c
  4048   01076A  0E00               	movlw	0
  4049   01076C  6E04               	movwf	(CRC_SetScannerAddressLimit@startAddr+1)^0,c
  4050   01076E  0E00               	movlw	0
  4051   010770  6E05               	movwf	(CRC_SetScannerAddressLimit@startAddr+2)^0,c
  4052   010772  0EFE               	movlw	254
  4053   010774  6E06               	movwf	CRC_SetScannerAddressLimit@endAddr^0,c
  4054   010776  0E7F               	movlw	127
  4055   010778  6E07               	movwf	(CRC_SetScannerAddressLimit@endAddr+1)^0,c
  4056   01077A  0E00               	movlw	0
  4057   01077C  6E08               	movwf	(CRC_SetScannerAddressLimit@endAddr+2)^0,c
  4058   01077E  ECD3  F084         	call	_CRC_SetScannerAddressLimit	;wreg free
  4059                           
  4060                           ;main.c: 184:     CRC_StartScanner();
  4061   010782  EC9B  F086         	call	_CRC_StartScanner	;wreg free
  4062   010786                     l2616:
  4063                           
  4064                           ;main.c: 187:     {;main.c: 188:         busyStatus = CRC_IsCrcBusy() || CRC_IsScannerBu
      +                          sy();
  4065   010786  0E01               	movlw	1
  4066   010788  6E16               	movwf	_CalculateFlashCRC$1266^0,c
  4067   01078A  EC6C  F086         	call	_CRC_IsCrcBusy	;wreg free
  4068   01078E  0900               	iorlw	0
  4069   010790  A4D8               	btfss	status,2,c
  4070   010792  EFCD  F083         	goto	u1271
  4071   010796  EFCF  F083         	goto	u1270
  4072   01079A                     u1271:
  4073   01079A  EFDB  F083         	goto	l679
  4074   01079E                     u1270:
  4075   01079E  EC61  F086         	call	_CRC_IsScannerBusy	;wreg free
  4076   0107A2  0900               	iorlw	0
  4077   0107A4  A4D8               	btfss	status,2,c
  4078   0107A6  EFD7  F083         	goto	u1281
  4079   0107AA  EFD9  F083         	goto	u1280
  4080   0107AE                     u1281:
  4081   0107AE  EFDB  F083         	goto	l679
  4082   0107B2                     u1280:
  4083   0107B2  0E00               	movlw	0
  4084   0107B4  6E16               	movwf	_CalculateFlashCRC$1266^0,c
  4085   0107B6                     l679:
  4086   0107B6  5016               	movf	_CalculateFlashCRC$1266^0,w,c
  4087   0107B8  A4D8               	btfss	status,2,c
  4088   0107BA  EFE1  F083         	goto	u1291
  4089   0107BE  EFE4  F083         	goto	u1290
  4090   0107C2                     u1291:
  4091   0107C2  0E01               	movlw	1
  4092   0107C4  EFE5  F083         	goto	u1300
  4093   0107C8                     u1290:
  4094   0107C8  0E00               	movlw	0
  4095   0107CA                     u1300:
  4096   0107CA  6E15               	movwf	CalculateFlashCRC@busyStatus^0,c
  4097                           
  4098                           ;main.c: 189:     }
  4099   0107CC  5015               	movf	CalculateFlashCRC@busyStatus^0,w,c
  4100   0107CE  A4D8               	btfss	status,2,c
  4101   0107D0  EFEC  F083         	goto	u1311
  4102   0107D4  EFEE  F083         	goto	u1310
  4103   0107D8                     u1311:
  4104   0107D8  EFC3  F083         	goto	l2616
  4105   0107DC                     u1310:
  4106   0107DC                     
  4107                           ;main.c: 193:     CRCVal = CRC_GetCalculatedResult(0,0x00);
  4108   0107DC  0E00               	movlw	0
  4109   0107DE  6E0B               	movwf	(CRC_GetCalculatedResult@xorValue+1)^0,c
  4110   0107E0  0E00               	movlw	0
  4111   0107E2  6E0A               	movwf	CRC_GetCalculatedResult@xorValue^0,c
  4112   0107E4  0E00               	movlw	0
  4113   0107E6  EC85  F084         	call	_CRC_GetCalculatedResult
  4114   0107EA  C00A  F013         	movff	?_CRC_GetCalculatedResult,CalculateFlashCRC@CRCVal
  4115   0107EE  C00B  F014         	movff	?_CRC_GetCalculatedResult+1,CalculateFlashCRC@CRCVal+1
  4116   0107F2                     
  4117                           ;main.c: 195:     return (CRCVal);
  4118   0107F2  C013  F011         	movff	CalculateFlashCRC@CRCVal,?_CalculateFlashCRC
  4119   0107F6  C014  F012         	movff	CalculateFlashCRC@CRCVal+1,?_CalculateFlashCRC+1
  4120   0107FA  0012               	return		;funcret
  4121   0107FC                     __end_of_CalculateFlashCRC:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _CRC_StartScanner *****************
  4125 ;; Defined at:
  4126 ;;		line 151 in file "mcc_generated_files/crc/src/crc.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		None
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 3
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_CalculateFlashCRC
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text33
  4155   010D36                     __ptext33:
  4156                           	callstack 0
  4157   010D36                     _CRC_StartScanner:
  4158                           	callstack 26
  4159   010D36                     
  4160                           ;mcc_generated_files/crc/src/crc.c: 154:     CRCCON0bits.CRCGO = 1;
  4161   010D36  8C77               	bsf	119,6,c	;volatile
  4162                           
  4163                           ;mcc_generated_files/crc/src/crc.c: 156:     SCANCON0bits.SCANGO = 1;
  4164   010D38  010F               	movlb	15	; () banked
  4165   010D3A  8D4A               	bsf	74,6,b	;volatile
  4166   010D3C                     
  4167                           ; BSR set to: 15
  4168   010D3C  0012               	return		;funcret
  4169   010D3E                     __end_of_CRC_StartScanner:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _CRC_SetScannerAddressLimit *****************
  4173 ;; Defined at:
  4174 ;;		line 167 in file "mcc_generated_files/crc/src/crc.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  startAddr       3    2[COMRAM] unsigned um
  4177 ;;  endAddr         3    5[COMRAM] unsigned um
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4189 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;Total ram usage:        9 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 3
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_CalculateFlashCRC
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text34
  4204   0109A6                     __ptext34:
  4205                           	callstack 0
  4206   0109A6                     _CRC_SetScannerAddressLimit:
  4207                           	callstack 26
  4208   0109A6                     
  4209                           ;mcc_generated_files/crc/src/crc.c: 167: void CRC_SetScannerAddressLimit(uint24_t startA
      +                          ddr, uint24_t endAddr);mcc_generated_files/crc/src/crc.c: 168: {;mcc_generated_files/crc
      +                          /src/crc.c: 169:     SCANHADRU = (uint8_t)((endAddr >> 16) & 0xFF);
  4210   0109A6  C008  FF49         	movff	CRC_SetScannerAddressLimit@endAddr+2,3913	;volatile
  4211   0109AA                     
  4212                           ;mcc_generated_files/crc/src/crc.c: 170:     SCANHADRH = (uint8_t)((endAddr >> 8) & 0xFF
      +                          );
  4213   0109AA  C006  F009         	movff	CRC_SetScannerAddressLimit@endAddr,??_CRC_SetScannerAddressLimit
  4214   0109AE  C007  F00A         	movff	CRC_SetScannerAddressLimit@endAddr+1,??_CRC_SetScannerAddressLimit+1
  4215   0109B2  C008  F00B         	movff	CRC_SetScannerAddressLimit@endAddr+2,??_CRC_SetScannerAddressLimit+2
  4216   0109B6  C00A  F009         	movff	??_CRC_SetScannerAddressLimit+1,??_CRC_SetScannerAddressLimit
  4217   0109BA  C00B  F00A         	movff	??_CRC_SetScannerAddressLimit+2,??_CRC_SetScannerAddressLimit+1
  4218   0109BE  6A0B               	clrf	(??_CRC_SetScannerAddressLimit+2)^0,c
  4219   0109C0  5009               	movf	??_CRC_SetScannerAddressLimit^0,w,c
  4220   0109C2  010F               	movlb	15	; () banked
  4221   0109C4  6F48               	movwf	72,b	;volatile
  4222   0109C6                     
  4223                           ; BSR set to: 15
  4224                           ;mcc_generated_files/crc/src/crc.c: 171:     SCANHADRL = (uint8_t)(endAddr & 0xFF);
  4225   0109C6  C006  FF47         	movff	CRC_SetScannerAddressLimit@endAddr,3911	;volatile
  4226   0109CA                     
  4227                           ; BSR set to: 15
  4228                           ;mcc_generated_files/crc/src/crc.c: 172:     SCANLADRU = (uint8_t)((startAddr >> 16) & 0
      +                          xFF);
  4229   0109CA  C005  FF46         	movff	CRC_SetScannerAddressLimit@startAddr+2,3910	;volatile
  4230                           
  4231                           ;mcc_generated_files/crc/src/crc.c: 173:     SCANLADRH = (uint8_t)((startAddr >> 8) & 0x
      +                          FF);
  4232   0109CE  C003  F009         	movff	CRC_SetScannerAddressLimit@startAddr,??_CRC_SetScannerAddressLimit
  4233   0109D2  C004  F00A         	movff	CRC_SetScannerAddressLimit@startAddr+1,??_CRC_SetScannerAddressLimit+1
  4234   0109D6  C005  F00B         	movff	CRC_SetScannerAddressLimit@startAddr+2,??_CRC_SetScannerAddressLimit+2
  4235   0109DA  C00A  F009         	movff	??_CRC_SetScannerAddressLimit+1,??_CRC_SetScannerAddressLimit
  4236   0109DE  C00B  F00A         	movff	??_CRC_SetScannerAddressLimit+2,??_CRC_SetScannerAddressLimit+1
  4237   0109E2  6A0B               	clrf	(??_CRC_SetScannerAddressLimit+2)^0,c
  4238   0109E4  5009               	movf	??_CRC_SetScannerAddressLimit^0,w,c
  4239   0109E6  6F45               	movwf	69,b	;volatile
  4240   0109E8                     
  4241                           ; BSR set to: 15
  4242                           ;mcc_generated_files/crc/src/crc.c: 174:     SCANLADRL = (uint8_t)(startAddr & 0xFF);
  4243   0109E8  C003  FF44         	movff	CRC_SetScannerAddressLimit@startAddr,3908	;volatile
  4244   0109EC                     
  4245                           ; BSR set to: 15
  4246   0109EC  0012               	return		;funcret
  4247   0109EE                     __end_of_CRC_SetScannerAddressLimit:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _CRC_IsScannerBusy *****************
  4251 ;; Defined at:
  4252 ;;		line 177 in file "mcc_generated_files/crc/src/crc.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      _Bool 
  4259 ;; Registers used:
  4260 ;;		wreg
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 3
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_CalculateFlashCRC
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text35
  4281   010CC2                     __ptext35:
  4282                           	callstack 0
  4283   010CC2                     _CRC_IsScannerBusy:
  4284                           	callstack 26
  4285   010CC2                     
  4286                           ;mcc_generated_files/crc/src/crc.c: 179:     return(SCANCON0bits.SCANBUSY);
  4287   010CC2  010F               	movlb	15	; () banked
  4288   010CC4  BB4A               	btfsc	74,5,b	;volatile
  4289   010CC6  EF67  F086         	goto	u1111
  4290   010CCA  EF6A  F086         	goto	u1110
  4291   010CCE                     u1111:
  4292   010CCE  0E01               	movlw	1
  4293   010CD0  EF6B  F086         	goto	u1116
  4294   010CD4                     u1110:
  4295   010CD4  0E00               	movlw	0
  4296   010CD6                     u1116:
  4297   010CD6                     
  4298                           ; BSR set to: 15
  4299   010CD6  0012               	return		;funcret
  4300   010CD8                     __end_of_CRC_IsScannerBusy:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _CRC_IsCrcBusy *****************
  4304 ;; Defined at:
  4305 ;;		line 146 in file "mcc_generated_files/crc/src/crc.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      _Bool 
  4312 ;; Registers used:
  4313 ;;		wreg
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 3
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_CalculateFlashCRC
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text36
  4334   010CD8                     __ptext36:
  4335                           	callstack 0
  4336   010CD8                     _CRC_IsCrcBusy:
  4337                           	callstack 26
  4338   010CD8                     
  4339                           ;mcc_generated_files/crc/src/crc.c: 148:     return(CRCCON0bits.BUSY);
  4340   010CD8  BA77               	btfsc	119,5,c	;volatile
  4341   010CDA  EF71  F086         	goto	u1101
  4342   010CDE  EF74  F086         	goto	u1100
  4343   010CE2                     u1101:
  4344   010CE2  0E01               	movlw	1
  4345   010CE4  EF75  F086         	goto	u1106
  4346   010CE8                     u1100:
  4347   010CE8  0E00               	movlw	0
  4348   010CEA                     u1106:
  4349   010CEA  0012               	return		;funcret
  4350   010CEC                     __end_of_CRC_IsCrcBusy:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _CRC_GetCalculatedResult *****************
  4354 ;; Defined at:
  4355 ;;		line 133 in file "mcc_generated_files/crc/src/crc.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  reverse         1    wreg     _Bool 
  4358 ;;  xorValue        2    9[COMRAM] unsigned short 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  reverse         1   13[COMRAM] _Bool 
  4361 ;;  result          2   14[COMRAM] unsigned short 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2    9[COMRAM] unsigned short 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;Total ram usage:        7 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 4
  4378 ;; This function calls:
  4379 ;;		_CRC_ReverseValue
  4380 ;; This function is called by:
  4381 ;;		_CalculateFlashCRC
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text37
  4386   01090A                     __ptext37:
  4387                           	callstack 0
  4388   01090A                     _CRC_GetCalculatedResult:
  4389                           	callstack 25
  4390                           
  4391                           ;incstack = 0
  4392                           ;CRC_GetCalculatedResult@reverse stored from wreg
  4393   01090A  6E0E               	movwf	CRC_GetCalculatedResult@reverse^0,c
  4394   01090C                     
  4395                           ;mcc_generated_files/crc/src/crc.c: 136:     result = (uint16_t)CRCACCL;
  4396   01090C  CF71 F00F          	movff	3953,CRC_GetCalculatedResult@result	;volatile
  4397   010910  6A10               	clrf	(CRC_GetCalculatedResult@result+1)^0,c
  4398   010912                     
  4399                           ;mcc_generated_files/crc/src/crc.c: 137:     result = result | ((uint16_t)CRCACCH << 8);
  4400   010912  5072               	movf	114,w,c	;volatile
  4401   010914  6E0D               	movwf	(??_CRC_GetCalculatedResult+1)^0,c
  4402   010916  6A0C               	clrf	??_CRC_GetCalculatedResult^0,c
  4403   010918  500F               	movf	CRC_GetCalculatedResult@result^0,w,c
  4404   01091A  100C               	iorwf	??_CRC_GetCalculatedResult^0,w,c
  4405   01091C  6E0F               	movwf	CRC_GetCalculatedResult@result^0,c
  4406   01091E  5010               	movf	(CRC_GetCalculatedResult@result+1)^0,w,c
  4407   010920  100D               	iorwf	(??_CRC_GetCalculatedResult+1)^0,w,c
  4408   010922  6E10               	movwf	(CRC_GetCalculatedResult@result+1)^0,c
  4409   010924                     
  4410                           ;mcc_generated_files/crc/src/crc.c: 138:     if(reverse)
  4411   010924  500E               	movf	CRC_GetCalculatedResult@reverse^0,w,c
  4412   010926  B4D8               	btfsc	status,2,c
  4413   010928  EF98  F084         	goto	u1091
  4414   01092C  EF9A  F084         	goto	u1090
  4415   010930                     u1091:
  4416   010930  EFA4  F084         	goto	l2444
  4417   010934                     u1090:
  4418   010934                     
  4419                           ;mcc_generated_files/crc/src/crc.c: 139:     {;mcc_generated_files/crc/src/crc.c: 140:  
      +                                 result = CRC_ReverseValue(result);
  4420   010934  C00F  F003         	movff	CRC_GetCalculatedResult@result,CRC_ReverseValue@crc
  4421   010938  C010  F004         	movff	CRC_GetCalculatedResult@result+1,CRC_ReverseValue@crc+1
  4422   01093C  ECFE  F083         	call	_CRC_ReverseValue	;wreg free
  4423   010940  C003  F00F         	movff	?_CRC_ReverseValue,CRC_GetCalculatedResult@result
  4424   010944  C004  F010         	movff	?_CRC_ReverseValue+1,CRC_GetCalculatedResult@result+1
  4425   010948                     l2444:
  4426                           
  4427                           ;mcc_generated_files/crc/src/crc.c: 142:     result ^= xorValue;
  4428   010948  500A               	movf	CRC_GetCalculatedResult@xorValue^0,w,c
  4429   01094A  1A0F               	xorwf	CRC_GetCalculatedResult@result^0,f,c
  4430   01094C  500B               	movf	(CRC_GetCalculatedResult@xorValue+1)^0,w,c
  4431   01094E  1A10               	xorwf	(CRC_GetCalculatedResult@result+1)^0,f,c
  4432   010950                     
  4433                           ;mcc_generated_files/crc/src/crc.c: 143:     return (result & 0xFFFF);
  4434   010950  C00F  F00A         	movff	CRC_GetCalculatedResult@result,?_CRC_GetCalculatedResult
  4435   010954  C010  F00B         	movff	CRC_GetCalculatedResult@result+1,?_CRC_GetCalculatedResult+1
  4436   010958  0012               	return		;funcret
  4437   01095A                     __end_of_CRC_GetCalculatedResult:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function _CRC_ReverseValue *****************
  4441 ;; Defined at:
  4442 ;;		line 112 in file "mcc_generated_files/crc/src/crc.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  crc             2    2[COMRAM] unsigned short 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  mask            2    7[COMRAM] unsigned short 
  4447 ;;  reverse         2    5[COMRAM] unsigned short 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  2    2[COMRAM] unsigned short 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4460 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;Total ram usage:        7 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 3
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_CRC_GetCalculatedResult
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text38
  4472   0107FC                     __ptext38:
  4473                           	callstack 0
  4474   0107FC                     _CRC_ReverseValue:
  4475                           	callstack 25
  4476   0107FC                     
  4477                           ;mcc_generated_files/crc/src/crc.c: 112: static uint16_t CRC_ReverseValue(uint16_t crc);
      +                          mcc_generated_files/crc/src/crc.c: 113: {;mcc_generated_files/crc/src/crc.c: 114:     ui
      +                          nt16_t mask;;mcc_generated_files/crc/src/crc.c: 115:     uint16_t reverse;;mcc_generated
      +                          _files/crc/src/crc.c: 117:     mask = 1;
  4478   0107FC  0E00               	movlw	0
  4479   0107FE  6E09               	movwf	(CRC_ReverseValue@mask+1)^0,c
  4480   010800  0E01               	movlw	1
  4481   010802  6E08               	movwf	CRC_ReverseValue@mask^0,c
  4482   010804                     
  4483                           ;mcc_generated_files/crc/src/crc.c: 118:     mask <<= CRCCON1bits.PLEN;
  4484   010804  5078               	movf	120,w,c	;volatile
  4485   010806  0B0F               	andlw	15
  4486   010808  6E05               	movwf	??_CRC_ReverseValue^0,c
  4487   01080A  2805               	incf	??_CRC_ReverseValue^0,w,c
  4488   01080C  EF0B  F084         	goto	u1010
  4489   010810                     u1015:
  4490   010810  90D8               	bcf	status,0,c
  4491   010812  3608               	rlcf	CRC_ReverseValue@mask^0,f,c
  4492   010814  3609               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
  4493   010816                     u1010:
  4494   010816  2EE8               	decfsz	wreg,f,c
  4495   010818  EF08  F084         	goto	u1015
  4496   01081C                     
  4497                           ;mcc_generated_files/crc/src/crc.c: 119:     reverse = 0;
  4498   01081C  0E00               	movlw	0
  4499   01081E  6E07               	movwf	(CRC_ReverseValue@reverse+1)^0,c
  4500   010820  0E00               	movlw	0
  4501   010822  6E06               	movwf	CRC_ReverseValue@reverse^0,c
  4502                           
  4503                           ;mcc_generated_files/crc/src/crc.c: 121:     while(crc)
  4504   010824  EF25  F084         	goto	l56
  4505   010828                     l57:
  4506                           
  4507                           ;mcc_generated_files/crc/src/crc.c: 122:     {;mcc_generated_files/crc/src/crc.c: 123:  
      +                                 if(crc & 0x01)
  4508   010828  A003               	btfss	CRC_ReverseValue@crc^0,0,c
  4509   01082A  EF19  F084         	goto	u1021
  4510   01082E  EF1B  F084         	goto	u1020
  4511   010832                     u1021:
  4512   010832  EF1F  F084         	goto	l2372
  4513   010836                     u1020:
  4514   010836                     
  4515                           ;mcc_generated_files/crc/src/crc.c: 124:         {;mcc_generated_files/crc/src/crc.c: 12
      +                          5:             reverse |= mask;
  4516   010836  5008               	movf	CRC_ReverseValue@mask^0,w,c
  4517   010838  1206               	iorwf	CRC_ReverseValue@reverse^0,f,c
  4518   01083A  5009               	movf	(CRC_ReverseValue@mask+1)^0,w,c
  4519   01083C  1207               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
  4520   01083E                     l2372:
  4521                           
  4522                           ;mcc_generated_files/crc/src/crc.c: 127:         mask >>= 1;
  4523   01083E  90D8               	bcf	status,0,c
  4524   010840  3209               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
  4525   010842  3208               	rrcf	CRC_ReverseValue@mask^0,f,c
  4526   010844                     
  4527                           ;mcc_generated_files/crc/src/crc.c: 128:         crc >>= 1;
  4528   010844  90D8               	bcf	status,0,c
  4529   010846  3204               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
  4530   010848  3203               	rrcf	CRC_ReverseValue@crc^0,f,c
  4531   01084A                     l56:
  4532                           
  4533                           ;mcc_generated_files/crc/src/crc.c: 121:     while(crc)
  4534   01084A  5003               	movf	CRC_ReverseValue@crc^0,w,c
  4535   01084C  1004               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
  4536   01084E  A4D8               	btfss	status,2,c
  4537   010850  EF2C  F084         	goto	u1031
  4538   010854  EF2E  F084         	goto	u1030
  4539   010858                     u1031:
  4540   010858  EF14  F084         	goto	l57
  4541   01085C                     u1030:
  4542   01085C                     
  4543                           ;mcc_generated_files/crc/src/crc.c: 130:     return reverse;
  4544   01085C  C006  F003         	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
  4545   010860  C007  F004         	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
  4546   010864  0012               	return		;funcret
  4547   010866                     __end_of_CRC_ReverseValue:
  4548                           	callstack 0
  4549                           
  4550 ;; *************** function _INTERRUPT_InterruptManager *****************
  4551 ;; Defined at:
  4552 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;Total ram usage:        2 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 2
  4573 ;; This function calls:
  4574 ;;		_PIN_MANAGER_IOC
  4575 ;;		_Timer0_OverflowISR
  4576 ;; This function is called by:
  4577 ;;		Interrupt level 2
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	intcode
  4582   000008                     __pintcode:
  4583                           	callstack 0
  4584   000008                     _INTERRUPT_InterruptManager:
  4585                           	callstack 19
  4586                           
  4587                           ;incstack = 0
  4588   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4589   00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  4590   00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4591   000012                     
  4592                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  4593   000012  010E               	movlb	14	; () banked
  4594   000014  A9BD               	btfss	189,4,b	;volatile
  4595   000016  EF0F  F000         	goto	i2u132_41
  4596   00001A  EF11  F000         	goto	i2u132_40
  4597   00001E                     i2u132_41:
  4598   00001E  EF1C  F000         	goto	i2l322
  4599   000022                     i2u132_40:
  4600   000022                     
  4601                           ; BSR set to: 14
  4602   000022  A9C5               	btfss	197,4,b	;volatile
  4603   000024  EF16  F000         	goto	i2u133_41
  4604   000028  EF18  F000         	goto	i2u133_40
  4605   00002C                     i2u133_41:
  4606   00002C  EF1C  F000         	goto	i2l322
  4607   000030                     i2u133_40:
  4608   000030                     
  4609                           ; BSR set to: 14
  4610                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  4611   000030  ECA8  F086         	call	_PIN_MANAGER_IOC	;wreg free
  4612                           
  4613                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  4614   000034  EF35  F000         	goto	i2l328
  4615   000038                     i2l322:
  4616                           
  4617                           ; BSR set to: 14
  4618   000038  ACF2               	btfss	242,6,c	;volatile
  4619   00003A  EF21  F000         	goto	i2u134_41
  4620   00003E  EF23  F000         	goto	i2u134_40
  4621   000042                     i2u134_41:
  4622   000042  EF35  F000         	goto	i2l328
  4623   000046                     i2u134_40:
  4624   000046                     
  4625                           ; BSR set to: 14
  4626                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  4627   000046  ABBD               	btfss	189,5,b	;volatile
  4628   000048  EF28  F000         	goto	i2u135_41
  4629   00004C  EF2A  F000         	goto	i2u135_40
  4630   000050                     i2u135_41:
  4631   000050  EF35  F000         	goto	i2l327
  4632   000054                     i2u135_40:
  4633   000054                     
  4634                           ; BSR set to: 14
  4635   000054  ABC5               	btfss	197,5,b	;volatile
  4636   000056  EF2F  F000         	goto	i2u136_41
  4637   00005A  EF31  F000         	goto	i2u136_40
  4638   00005E                     i2u136_41:
  4639   00005E  EF35  F000         	goto	i2l327
  4640   000062                     i2u136_40:
  4641   000062                     
  4642                           ; BSR set to: 14
  4643                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             Timer0_OverflowISR();
  4644   000062  EC7B  F085         	call	_Timer0_OverflowISR	;wreg free
  4645                           
  4646                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
  4647   000066  EF35  F000         	goto	i2l328
  4648   00006A                     i2l327:
  4649   00006A                     i2l328:
  4650   00006A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4651   00006E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4652   000072  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4653   000074  0011               	retfie		f
  4654   000076                     __end_of_INTERRUPT_InterruptManager:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _Timer0_OverflowISR *****************
  4658 ;; Defined at:
  4659 ;;		line 106 in file "mcc_generated_files/timer/src/tmr0.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 1
  4680 ;; This function calls:
  4681 ;;		NULL
  4682 ;;		_TMR0_UserInterruptHandler
  4683 ;;		_Timer0_DefaultOverflowCallback
  4684 ;; This function is called by:
  4685 ;;		_INTERRUPT_InterruptManager
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text40
  4690   010AF6                     __ptext40:
  4691                           	callstack 0
  4692   010AF6                     _Timer0_OverflowISR:
  4693                           	callstack 19
  4694   010AF6                     
  4695                           ;mcc_generated_files/timer/src/tmr0.c: 109:     PIR0bits.TMR0IF = 0;
  4696   010AF6  010E               	movlb	14	; () banked
  4697   010AF8  9BC5               	bcf	197,5,b	;volatile
  4698   010AFA                     
  4699                           ; BSR set to: 14
  4700                           ;mcc_generated_files/timer/src/tmr0.c: 110:     if(Timer0_OverflowCallback)
  4701   010AFA  0100               	movlb	0	; () banked
  4702   010AFC  5166               	movf	_Timer0_OverflowCallback& (0+255),w,b
  4703   010AFE  1167               	iorwf	(_Timer0_OverflowCallback+1)& (0+255),w,b
  4704   010B00  1168               	iorwf	(_Timer0_OverflowCallback+2)& (0+255),w,b
  4705   010B02  B4D8               	btfsc	status,2,c
  4706   010B04  EF86  F085         	goto	i2u119_41
  4707   010B08  EF88  F085         	goto	i2u119_40
  4708   010B0C                     i2u119_41:
  4709   010B0C  EF95  F085         	goto	i2l449
  4710   010B10                     i2u119_40:
  4711   010B10                     
  4712                           ; BSR set to: 0
  4713                           ;mcc_generated_files/timer/src/tmr0.c: 111:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          112:         Timer0_OverflowCallback();
  4714   010B10  D802               	call	i2u120_48
  4715   010B12  EF95  F085         	goto	i2u120_49
  4716   010B16                     i2u120_48:
  4717   010B16  0005               	push	
  4718   010B18  6EFA               	movwf	pclath,c
  4719   010B1A  5166               	movf	_Timer0_OverflowCallback& (0+255),w,b
  4720   010B1C  6EFD               	movwf	tosl,c
  4721   010B1E  5167               	movf	(_Timer0_OverflowCallback+1)& (0+255),w,b
  4722   010B20  6EFE               	movwf	tosh,c
  4723   010B22  5168               	movf	(_Timer0_OverflowCallback+2)& (0+255),w,b
  4724   010B24  6EFF               	movwf	tosu,c
  4725   010B26  50FA               	movf	pclath,w,c
  4726   010B28  0012               	return		;indir
  4727   010B2A                     i2u120_49:
  4728   010B2A                     i2l449:
  4729   010B2A  0012               	return		;funcret
  4730   010B2C                     __end_of_Timer0_OverflowISR:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _TMR0_UserInterruptHandler *****************
  4734 ;; Defined at:
  4735 ;;		line 213 in file "main.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;Total ram usage:        0 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;;		_Timer0_OverflowISR
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text41
  4764   010D44                     __ptext41:
  4765                           	callstack 0
  4766   010D44                     _TMR0_UserInterruptHandler:
  4767                           	callstack 19
  4768   010D44                     
  4769                           ;main.c: 218:      periodicCRCflag = 1;
  4770   010D44  0E01               	movlw	1
  4771   010D46  6E5E               	movwf	_periodicCRCflag^0,c	;volatile
  4772   010D48  0012               	return		;funcret
  4773   010D4A                     __end_of_TMR0_UserInterruptHandler:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _Timer0_DefaultOverflowCallback *****************
  4777 ;; Defined at:
  4778 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		None
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_Timer0_Initialize
  4802 ;;		_Timer0_OverflowISR
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text42
  4807   010D4E                     __ptext42:
  4808                           	callstack 0
  4809   010D4E                     _Timer0_DefaultOverflowCallback:
  4810                           	callstack 19
  4811   010D4E  0012               	return		;funcret
  4812   010D50                     __end_of_Timer0_DefaultOverflowCallback:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function _PIN_MANAGER_IOC *****************
  4816 ;; Defined at:
  4817 ;;		line 131 in file "mcc_generated_files/system/src/pins.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		None
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;Total ram usage:        0 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_INTERRUPT_InterruptManager
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text43
  4845   010D50                     __ptext43:
  4846                           	callstack 0
  4847   010D50                     _PIN_MANAGER_IOC:
  4848                           	callstack 20
  4849   010D50  0012               	return		;funcret
  4850   010D52                     __end_of_PIN_MANAGER_IOC:
  4851                           	callstack 0
  4852                           
  4853                           	psect	text44
  4854   000000                     __ptext44:
  4855                           	callstack 0
  4856   000000                     
  4857                           	psect	rparam
  4858   000000                     
  4859                           	psect	temp
  4860   00005F                     btemp:
  4861                           	callstack 0
  4862   00005F                     	ds	1
  4863   000000                     int$flags	set	btemp
  4864   000000                     wtemp8	set	btemp+1
  4865   000000                     ttemp5	set	btemp+1
  4866   000000                     ttemp6	set	btemp+4
  4867   000000                     ttemp7	set	btemp+8
  4868                           
  4869                           	psect	idloc
  4870                           
  4871                           ;Config register IDLOC0 @ 0x200000
  4872                           ;	unspecified, using default values
  4873   200000                     	org	2097152
  4874   200000  FFFF               	dw	65535
  4875                           
  4876                           ;Config register IDLOC1 @ 0x200002
  4877                           ;	unspecified, using default values
  4878   200002                     	org	2097154
  4879   200002  FFFF               	dw	65535
  4880                           
  4881                           ;Config register IDLOC2 @ 0x200004
  4882                           ;	unspecified, using default values
  4883   200004                     	org	2097156
  4884   200004  FFFF               	dw	65535
  4885                           
  4886                           ;Config register IDLOC3 @ 0x200006
  4887                           ;	unspecified, using default values
  4888   200006                     	org	2097158
  4889   200006  FFFF               	dw	65535
  4890                           
  4891                           ;Config register IDLOC4 @ 0x200008
  4892                           ;	unspecified, using default values
  4893   200008                     	org	2097160
  4894   200008  FFFF               	dw	65535
  4895                           
  4896                           ;Config register IDLOC5 @ 0x20000A
  4897                           ;	unspecified, using default values
  4898   20000A                     	org	2097162
  4899   20000A  FFFF               	dw	65535
  4900                           
  4901                           ;Config register IDLOC6 @ 0x20000C
  4902                           ;	unspecified, using default values
  4903   20000C                     	org	2097164
  4904   20000C  FFFF               	dw	65535
  4905                           
  4906                           ;Config register IDLOC7 @ 0x20000E
  4907                           ;	unspecified, using default values
  4908   20000E                     	org	2097166
  4909   20000E  FFFF               	dw	65535
  4910                           
  4911                           ;Config register IDLOC8 @ 0x200010
  4912                           ;	unspecified, using default values
  4913   200010                     	org	2097168
  4914   200010  FFFF               	dw	65535
  4915                           
  4916                           ;Config register IDLOC9 @ 0x200012
  4917                           ;	unspecified, using default values
  4918   200012                     	org	2097170
  4919   200012  FFFF               	dw	65535
  4920                           
  4921                           ;Config register IDLOC10 @ 0x200014
  4922                           ;	unspecified, using default values
  4923   200014                     	org	2097172
  4924   200014  FFFF               	dw	65535
  4925                           
  4926                           ;Config register IDLOC11 @ 0x200016
  4927                           ;	unspecified, using default values
  4928   200016                     	org	2097174
  4929   200016  FFFF               	dw	65535
  4930                           
  4931                           ;Config register IDLOC12 @ 0x200018
  4932                           ;	unspecified, using default values
  4933   200018                     	org	2097176
  4934   200018  FFFF               	dw	65535
  4935                           
  4936                           ;Config register IDLOC13 @ 0x20001A
  4937                           ;	unspecified, using default values
  4938   20001A                     	org	2097178
  4939   20001A  FFFF               	dw	65535
  4940                           
  4941                           ;Config register IDLOC14 @ 0x20001C
  4942                           ;	unspecified, using default values
  4943   20001C                     	org	2097180
  4944   20001C  FFFF               	dw	65535
  4945                           
  4946                           ;Config register IDLOC15 @ 0x20001E
  4947                           ;	unspecified, using default values
  4948   20001E                     	org	2097182
  4949   20001E  FFFF               	dw	65535
  4950                           
  4951                           ;Config register IDLOC16 @ 0x200020
  4952                           ;	unspecified, using default values
  4953   200020                     	org	2097184
  4954   200020  FFFF               	dw	65535
  4955                           
  4956                           ;Config register IDLOC17 @ 0x200022
  4957                           ;	unspecified, using default values
  4958   200022                     	org	2097186
  4959   200022  FFFF               	dw	65535
  4960                           
  4961                           ;Config register IDLOC18 @ 0x200024
  4962                           ;	unspecified, using default values
  4963   200024                     	org	2097188
  4964   200024  FFFF               	dw	65535
  4965                           
  4966                           ;Config register IDLOC19 @ 0x200026
  4967                           ;	unspecified, using default values
  4968   200026                     	org	2097190
  4969   200026  FFFF               	dw	65535
  4970                           
  4971                           ;Config register IDLOC20 @ 0x200028
  4972                           ;	unspecified, using default values
  4973   200028                     	org	2097192
  4974   200028  FFFF               	dw	65535
  4975                           
  4976                           ;Config register IDLOC21 @ 0x20002A
  4977                           ;	unspecified, using default values
  4978   20002A                     	org	2097194
  4979   20002A  FFFF               	dw	65535
  4980                           
  4981                           ;Config register IDLOC22 @ 0x20002C
  4982                           ;	unspecified, using default values
  4983   20002C                     	org	2097196
  4984   20002C  FFFF               	dw	65535
  4985                           
  4986                           ;Config register IDLOC23 @ 0x20002E
  4987                           ;	unspecified, using default values
  4988   20002E                     	org	2097198
  4989   20002E  FFFF               	dw	65535
  4990                           
  4991                           ;Config register IDLOC24 @ 0x200030
  4992                           ;	unspecified, using default values
  4993   200030                     	org	2097200
  4994   200030  FFFF               	dw	65535
  4995                           
  4996                           ;Config register IDLOC25 @ 0x200032
  4997                           ;	unspecified, using default values
  4998   200032                     	org	2097202
  4999   200032  FFFF               	dw	65535
  5000                           
  5001                           ;Config register IDLOC26 @ 0x200034
  5002                           ;	unspecified, using default values
  5003   200034                     	org	2097204
  5004   200034  FFFF               	dw	65535
  5005                           
  5006                           ;Config register IDLOC27 @ 0x200036
  5007                           ;	unspecified, using default values
  5008   200036                     	org	2097206
  5009   200036  FFFF               	dw	65535
  5010                           
  5011                           ;Config register IDLOC28 @ 0x200038
  5012                           ;	unspecified, using default values
  5013   200038                     	org	2097208
  5014   200038  FFFF               	dw	65535
  5015                           
  5016                           ;Config register IDLOC29 @ 0x20003A
  5017                           ;	unspecified, using default values
  5018   20003A                     	org	2097210
  5019   20003A  FFFF               	dw	65535
  5020                           
  5021                           ;Config register IDLOC30 @ 0x20003C
  5022                           ;	unspecified, using default values
  5023   20003C                     	org	2097212
  5024   20003C  FFFF               	dw	65535
  5025                           
  5026                           ;Config register IDLOC31 @ 0x20003E
  5027                           ;	unspecified, using default values
  5028   20003E                     	org	2097214
  5029   20003E  FFFF               	dw	65535
  5030                           
  5031                           ;Config register IDLOC32 @ 0x200040
  5032                           ;	unspecified, using default values
  5033   200040                     	org	2097216
  5034   200040  FFFF               	dw	65535
  5035                           
  5036                           ;Config register IDLOC33 @ 0x200042
  5037                           ;	unspecified, using default values
  5038   200042                     	org	2097218
  5039   200042  FFFF               	dw	65535
  5040                           
  5041                           ;Config register IDLOC34 @ 0x200044
  5042                           ;	unspecified, using default values
  5043   200044                     	org	2097220
  5044   200044  FFFF               	dw	65535
  5045                           
  5046                           ;Config register IDLOC35 @ 0x200046
  5047                           ;	unspecified, using default values
  5048   200046                     	org	2097222
  5049   200046  FFFF               	dw	65535
  5050                           
  5051                           ;Config register IDLOC36 @ 0x200048
  5052                           ;	unspecified, using default values
  5053   200048                     	org	2097224
  5054   200048  FFFF               	dw	65535
  5055                           
  5056                           ;Config register IDLOC37 @ 0x20004A
  5057                           ;	unspecified, using default values
  5058   20004A                     	org	2097226
  5059   20004A  FFFF               	dw	65535
  5060                           
  5061                           ;Config register IDLOC38 @ 0x20004C
  5062                           ;	unspecified, using default values
  5063   20004C                     	org	2097228
  5064   20004C  FFFF               	dw	65535
  5065                           
  5066                           ;Config register IDLOC39 @ 0x20004E
  5067                           ;	unspecified, using default values
  5068   20004E                     	org	2097230
  5069   20004E  FFFF               	dw	65535
  5070                           
  5071                           ;Config register IDLOC40 @ 0x200050
  5072                           ;	unspecified, using default values
  5073   200050                     	org	2097232
  5074   200050  FFFF               	dw	65535
  5075                           
  5076                           ;Config register IDLOC41 @ 0x200052
  5077                           ;	unspecified, using default values
  5078   200052                     	org	2097234
  5079   200052  FFFF               	dw	65535
  5080                           
  5081                           ;Config register IDLOC42 @ 0x200054
  5082                           ;	unspecified, using default values
  5083   200054                     	org	2097236
  5084   200054  FFFF               	dw	65535
  5085                           
  5086                           ;Config register IDLOC43 @ 0x200056
  5087                           ;	unspecified, using default values
  5088   200056                     	org	2097238
  5089   200056  FFFF               	dw	65535
  5090                           
  5091                           ;Config register IDLOC44 @ 0x200058
  5092                           ;	unspecified, using default values
  5093   200058                     	org	2097240
  5094   200058  FFFF               	dw	65535
  5095                           
  5096                           ;Config register IDLOC45 @ 0x20005A
  5097                           ;	unspecified, using default values
  5098   20005A                     	org	2097242
  5099   20005A  FFFF               	dw	65535
  5100                           
  5101                           ;Config register IDLOC46 @ 0x20005C
  5102                           ;	unspecified, using default values
  5103   20005C                     	org	2097244
  5104   20005C  FFFF               	dw	65535
  5105                           
  5106                           ;Config register IDLOC47 @ 0x20005E
  5107                           ;	unspecified, using default values
  5108   20005E                     	org	2097246
  5109   20005E  FFFF               	dw	65535
  5110                           
  5111                           ;Config register IDLOC48 @ 0x200060
  5112                           ;	unspecified, using default values
  5113   200060                     	org	2097248
  5114   200060  FFFF               	dw	65535
  5115                           
  5116                           ;Config register IDLOC49 @ 0x200062
  5117                           ;	unspecified, using default values
  5118   200062                     	org	2097250
  5119   200062  FFFF               	dw	65535
  5120                           
  5121                           ;Config register IDLOC50 @ 0x200064
  5122                           ;	unspecified, using default values
  5123   200064                     	org	2097252
  5124   200064  FFFF               	dw	65535
  5125                           
  5126                           ;Config register IDLOC51 @ 0x200066
  5127                           ;	unspecified, using default values
  5128   200066                     	org	2097254
  5129   200066  FFFF               	dw	65535
  5130                           
  5131                           ;Config register IDLOC52 @ 0x200068
  5132                           ;	unspecified, using default values
  5133   200068                     	org	2097256
  5134   200068  FFFF               	dw	65535
  5135                           
  5136                           ;Config register IDLOC53 @ 0x20006A
  5137                           ;	unspecified, using default values
  5138   20006A                     	org	2097258
  5139   20006A  FFFF               	dw	65535
  5140                           
  5141                           ;Config register IDLOC54 @ 0x20006C
  5142                           ;	unspecified, using default values
  5143   20006C                     	org	2097260
  5144   20006C  FFFF               	dw	65535
  5145                           
  5146                           ;Config register IDLOC55 @ 0x20006E
  5147                           ;	unspecified, using default values
  5148   20006E                     	org	2097262
  5149   20006E  FFFF               	dw	65535
  5150                           
  5151                           ;Config register IDLOC56 @ 0x200070
  5152                           ;	unspecified, using default values
  5153   200070                     	org	2097264
  5154   200070  FFFF               	dw	65535
  5155                           
  5156                           ;Config register IDLOC57 @ 0x200072
  5157                           ;	unspecified, using default values
  5158   200072                     	org	2097266
  5159   200072  FFFF               	dw	65535
  5160                           
  5161                           ;Config register IDLOC58 @ 0x200074
  5162                           ;	unspecified, using default values
  5163   200074                     	org	2097268
  5164   200074  FFFF               	dw	65535
  5165                           
  5166                           ;Config register IDLOC59 @ 0x200076
  5167                           ;	unspecified, using default values
  5168   200076                     	org	2097270
  5169   200076  FFFF               	dw	65535
  5170                           
  5171                           ;Config register IDLOC60 @ 0x200078
  5172                           ;	unspecified, using default values
  5173   200078                     	org	2097272
  5174   200078  FFFF               	dw	65535
  5175                           
  5176                           ;Config register IDLOC61 @ 0x20007A
  5177                           ;	unspecified, using default values
  5178   20007A                     	org	2097274
  5179   20007A  FFFF               	dw	65535
  5180                           
  5181                           ;Config register IDLOC62 @ 0x20007C
  5182                           ;	unspecified, using default values
  5183   20007C                     	org	2097276
  5184   20007C  FFFF               	dw	65535
  5185                           
  5186                           ;Config register IDLOC63 @ 0x20007E
  5187                           ;	unspecified, using default values
  5188   20007E                     	org	2097278
  5189   20007E  FFFF               	dw	65535
  5190                           
  5191                           ;Config register IDLOC64 @ 0x200080
  5192                           ;	unspecified, using default values
  5193   200080                     	org	2097280
  5194   200080  FFFF               	dw	65535
  5195                           
  5196                           ;Config register IDLOC65 @ 0x200082
  5197                           ;	unspecified, using default values
  5198   200082                     	org	2097282
  5199   200082  FFFF               	dw	65535
  5200                           
  5201                           ;Config register IDLOC66 @ 0x200084
  5202                           ;	unspecified, using default values
  5203   200084                     	org	2097284
  5204   200084  FFFF               	dw	65535
  5205                           
  5206                           ;Config register IDLOC67 @ 0x200086
  5207                           ;	unspecified, using default values
  5208   200086                     	org	2097286
  5209   200086  FFFF               	dw	65535
  5210                           
  5211                           ;Config register IDLOC68 @ 0x200088
  5212                           ;	unspecified, using default values
  5213   200088                     	org	2097288
  5214   200088  FFFF               	dw	65535
  5215                           
  5216                           ;Config register IDLOC69 @ 0x20008A
  5217                           ;	unspecified, using default values
  5218   20008A                     	org	2097290
  5219   20008A  FFFF               	dw	65535
  5220                           
  5221                           ;Config register IDLOC70 @ 0x20008C
  5222                           ;	unspecified, using default values
  5223   20008C                     	org	2097292
  5224   20008C  FFFF               	dw	65535
  5225                           
  5226                           ;Config register IDLOC71 @ 0x20008E
  5227                           ;	unspecified, using default values
  5228   20008E                     	org	2097294
  5229   20008E  FFFF               	dw	65535
  5230                           
  5231                           ;Config register IDLOC72 @ 0x200090
  5232                           ;	unspecified, using default values
  5233   200090                     	org	2097296
  5234   200090  FFFF               	dw	65535
  5235                           
  5236                           ;Config register IDLOC73 @ 0x200092
  5237                           ;	unspecified, using default values
  5238   200092                     	org	2097298
  5239   200092  FFFF               	dw	65535
  5240                           
  5241                           ;Config register IDLOC74 @ 0x200094
  5242                           ;	unspecified, using default values
  5243   200094                     	org	2097300
  5244   200094  FFFF               	dw	65535
  5245                           
  5246                           ;Config register IDLOC75 @ 0x200096
  5247                           ;	unspecified, using default values
  5248   200096                     	org	2097302
  5249   200096  FFFF               	dw	65535
  5250                           
  5251                           ;Config register IDLOC76 @ 0x200098
  5252                           ;	unspecified, using default values
  5253   200098                     	org	2097304
  5254   200098  FFFF               	dw	65535
  5255                           
  5256                           ;Config register IDLOC77 @ 0x20009A
  5257                           ;	unspecified, using default values
  5258   20009A                     	org	2097306
  5259   20009A  FFFF               	dw	65535
  5260                           
  5261                           ;Config register IDLOC78 @ 0x20009C
  5262                           ;	unspecified, using default values
  5263   20009C                     	org	2097308
  5264   20009C  FFFF               	dw	65535
  5265                           
  5266                           ;Config register IDLOC79 @ 0x20009E
  5267                           ;	unspecified, using default values
  5268   20009E                     	org	2097310
  5269   20009E  FFFF               	dw	65535
  5270                           
  5271                           ;Config register IDLOC80 @ 0x2000A0
  5272                           ;	unspecified, using default values
  5273   2000A0                     	org	2097312
  5274   2000A0  FFFF               	dw	65535
  5275                           
  5276                           ;Config register IDLOC81 @ 0x2000A2
  5277                           ;	unspecified, using default values
  5278   2000A2                     	org	2097314
  5279   2000A2  FFFF               	dw	65535
  5280                           
  5281                           ;Config register IDLOC82 @ 0x2000A4
  5282                           ;	unspecified, using default values
  5283   2000A4                     	org	2097316
  5284   2000A4  FFFF               	dw	65535
  5285                           
  5286                           ;Config register IDLOC83 @ 0x2000A6
  5287                           ;	unspecified, using default values
  5288   2000A6                     	org	2097318
  5289   2000A6  FFFF               	dw	65535
  5290                           
  5291                           ;Config register IDLOC84 @ 0x2000A8
  5292                           ;	unspecified, using default values
  5293   2000A8                     	org	2097320
  5294   2000A8  FFFF               	dw	65535
  5295                           
  5296                           ;Config register IDLOC85 @ 0x2000AA
  5297                           ;	unspecified, using default values
  5298   2000AA                     	org	2097322
  5299   2000AA  FFFF               	dw	65535
  5300                           
  5301                           ;Config register IDLOC86 @ 0x2000AC
  5302                           ;	unspecified, using default values
  5303   2000AC                     	org	2097324
  5304   2000AC  FFFF               	dw	65535
  5305                           
  5306                           ;Config register IDLOC87 @ 0x2000AE
  5307                           ;	unspecified, using default values
  5308   2000AE                     	org	2097326
  5309   2000AE  FFFF               	dw	65535
  5310                           
  5311                           ;Config register IDLOC88 @ 0x2000B0
  5312                           ;	unspecified, using default values
  5313   2000B0                     	org	2097328
  5314   2000B0  FFFF               	dw	65535
  5315                           
  5316                           ;Config register IDLOC89 @ 0x2000B2
  5317                           ;	unspecified, using default values
  5318   2000B2                     	org	2097330
  5319   2000B2  FFFF               	dw	65535
  5320                           
  5321                           ;Config register IDLOC90 @ 0x2000B4
  5322                           ;	unspecified, using default values
  5323   2000B4                     	org	2097332
  5324   2000B4  FFFF               	dw	65535
  5325                           
  5326                           ;Config register IDLOC91 @ 0x2000B6
  5327                           ;	unspecified, using default values
  5328   2000B6                     	org	2097334
  5329   2000B6  FFFF               	dw	65535
  5330                           
  5331                           ;Config register IDLOC92 @ 0x2000B8
  5332                           ;	unspecified, using default values
  5333   2000B8                     	org	2097336
  5334   2000B8  FFFF               	dw	65535
  5335                           
  5336                           ;Config register IDLOC93 @ 0x2000BA
  5337                           ;	unspecified, using default values
  5338   2000BA                     	org	2097338
  5339   2000BA  FFFF               	dw	65535
  5340                           
  5341                           ;Config register IDLOC94 @ 0x2000BC
  5342                           ;	unspecified, using default values
  5343   2000BC                     	org	2097340
  5344   2000BC  FFFF               	dw	65535
  5345                           
  5346                           ;Config register IDLOC95 @ 0x2000BE
  5347                           ;	unspecified, using default values
  5348   2000BE                     	org	2097342
  5349   2000BE  FFFF               	dw	65535
  5350                           
  5351                           ;Config register IDLOC96 @ 0x2000C0
  5352                           ;	unspecified, using default values
  5353   2000C0                     	org	2097344
  5354   2000C0  FFFF               	dw	65535
  5355                           
  5356                           ;Config register IDLOC97 @ 0x2000C2
  5357                           ;	unspecified, using default values
  5358   2000C2                     	org	2097346
  5359   2000C2  FFFF               	dw	65535
  5360                           
  5361                           ;Config register IDLOC98 @ 0x2000C4
  5362                           ;	unspecified, using default values
  5363   2000C4                     	org	2097348
  5364   2000C4  FFFF               	dw	65535
  5365                           
  5366                           ;Config register IDLOC99 @ 0x2000C6
  5367                           ;	unspecified, using default values
  5368   2000C6                     	org	2097350
  5369   2000C6  FFFF               	dw	65535
  5370                           
  5371                           ;Config register IDLOC100 @ 0x2000C8
  5372                           ;	unspecified, using default values
  5373   2000C8                     	org	2097352
  5374   2000C8  FFFF               	dw	65535
  5375                           
  5376                           ;Config register IDLOC101 @ 0x2000CA
  5377                           ;	unspecified, using default values
  5378   2000CA                     	org	2097354
  5379   2000CA  FFFF               	dw	65535
  5380                           
  5381                           ;Config register IDLOC102 @ 0x2000CC
  5382                           ;	unspecified, using default values
  5383   2000CC                     	org	2097356
  5384   2000CC  FFFF               	dw	65535
  5385                           
  5386                           ;Config register IDLOC103 @ 0x2000CE
  5387                           ;	unspecified, using default values
  5388   2000CE                     	org	2097358
  5389   2000CE  FFFF               	dw	65535
  5390                           
  5391                           ;Config register IDLOC104 @ 0x2000D0
  5392                           ;	unspecified, using default values
  5393   2000D0                     	org	2097360
  5394   2000D0  FFFF               	dw	65535
  5395                           
  5396                           ;Config register IDLOC105 @ 0x2000D2
  5397                           ;	unspecified, using default values
  5398   2000D2                     	org	2097362
  5399   2000D2  FFFF               	dw	65535
  5400                           
  5401                           ;Config register IDLOC106 @ 0x2000D4
  5402                           ;	unspecified, using default values
  5403   2000D4                     	org	2097364
  5404   2000D4  FFFF               	dw	65535
  5405                           
  5406                           ;Config register IDLOC107 @ 0x2000D6
  5407                           ;	unspecified, using default values
  5408   2000D6                     	org	2097366
  5409   2000D6  FFFF               	dw	65535
  5410                           
  5411                           ;Config register IDLOC108 @ 0x2000D8
  5412                           ;	unspecified, using default values
  5413   2000D8                     	org	2097368
  5414   2000D8  FFFF               	dw	65535
  5415                           
  5416                           ;Config register IDLOC109 @ 0x2000DA
  5417                           ;	unspecified, using default values
  5418   2000DA                     	org	2097370
  5419   2000DA  FFFF               	dw	65535
  5420                           
  5421                           ;Config register IDLOC110 @ 0x2000DC
  5422                           ;	unspecified, using default values
  5423   2000DC                     	org	2097372
  5424   2000DC  FFFF               	dw	65535
  5425                           
  5426                           ;Config register IDLOC111 @ 0x2000DE
  5427                           ;	unspecified, using default values
  5428   2000DE                     	org	2097374
  5429   2000DE  FFFF               	dw	65535
  5430                           
  5431                           ;Config register IDLOC112 @ 0x2000E0
  5432                           ;	unspecified, using default values
  5433   2000E0                     	org	2097376
  5434   2000E0  FFFF               	dw	65535
  5435                           
  5436                           ;Config register IDLOC113 @ 0x2000E2
  5437                           ;	unspecified, using default values
  5438   2000E2                     	org	2097378
  5439   2000E2  FFFF               	dw	65535
  5440                           
  5441                           ;Config register IDLOC114 @ 0x2000E4
  5442                           ;	unspecified, using default values
  5443   2000E4                     	org	2097380
  5444   2000E4  FFFF               	dw	65535
  5445                           
  5446                           ;Config register IDLOC115 @ 0x2000E6
  5447                           ;	unspecified, using default values
  5448   2000E6                     	org	2097382
  5449   2000E6  FFFF               	dw	65535
  5450                           
  5451                           ;Config register IDLOC116 @ 0x2000E8
  5452                           ;	unspecified, using default values
  5453   2000E8                     	org	2097384
  5454   2000E8  FFFF               	dw	65535
  5455                           
  5456                           ;Config register IDLOC117 @ 0x2000EA
  5457                           ;	unspecified, using default values
  5458   2000EA                     	org	2097386
  5459   2000EA  FFFF               	dw	65535
  5460                           
  5461                           ;Config register IDLOC118 @ 0x2000EC
  5462                           ;	unspecified, using default values
  5463   2000EC                     	org	2097388
  5464   2000EC  FFFF               	dw	65535
  5465                           
  5466                           ;Config register IDLOC119 @ 0x2000EE
  5467                           ;	unspecified, using default values
  5468   2000EE                     	org	2097390
  5469   2000EE  FFFF               	dw	65535
  5470                           
  5471                           ;Config register IDLOC120 @ 0x2000F0
  5472                           ;	unspecified, using default values
  5473   2000F0                     	org	2097392
  5474   2000F0  FFFF               	dw	65535
  5475                           
  5476                           ;Config register IDLOC121 @ 0x2000F2
  5477                           ;	unspecified, using default values
  5478   2000F2                     	org	2097394
  5479   2000F2  FFFF               	dw	65535
  5480                           
  5481                           ;Config register IDLOC122 @ 0x2000F4
  5482                           ;	unspecified, using default values
  5483   2000F4                     	org	2097396
  5484   2000F4  FFFF               	dw	65535
  5485                           
  5486                           ;Config register IDLOC123 @ 0x2000F6
  5487                           ;	unspecified, using default values
  5488   2000F6                     	org	2097398
  5489   2000F6  FFFF               	dw	65535
  5490                           
  5491                           ;Config register IDLOC124 @ 0x2000F8
  5492                           ;	unspecified, using default values
  5493   2000F8                     	org	2097400
  5494   2000F8  FFFF               	dw	65535
  5495                           
  5496                           ;Config register IDLOC125 @ 0x2000FA
  5497                           ;	unspecified, using default values
  5498   2000FA                     	org	2097402
  5499   2000FA  FFFF               	dw	65535
  5500                           
  5501                           ;Config register IDLOC126 @ 0x2000FC
  5502                           ;	unspecified, using default values
  5503   2000FC                     	org	2097404
  5504   2000FC  FFFF               	dw	65535
  5505                           
  5506                           ;Config register IDLOC127 @ 0x2000FE
  5507                           ;	unspecified, using default values
  5508   2000FE                     	org	2097406
  5509   2000FE  FFFF               	dw	65535
  5510                           
  5511                           	psect	config
  5512                           
  5513                           ;Config register CONFIG1L @ 0x300000
  5514                           ;	External Oscillator mode Selection bits
  5515                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  5516                           ;	Power-up default value for COSC bits
  5517                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5518   300000                     	org	3145728
  5519   300000  FF                 	db	255
  5520                           
  5521                           ;Config register CONFIG1H @ 0x300001
  5522                           ;	Clock Out Enable bit
  5523                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5524                           ;	Clock Switch Enable bit
  5525                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5526                           ;	Fail-Safe Clock Monitor Enable bit
  5527                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5528   300001                     	org	3145729
  5529   300001  FF                 	db	255
  5530                           
  5531                           ;Config register CONFIG2L @ 0x300002
  5532                           ;	Master Clear Enable bit
  5533                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  5534                           ;	Power-up Timer Enable bit
  5535                           ;	PWRTE = OFF, Power up timer disabled
  5536                           ;	Low-power BOR enable bit
  5537                           ;	LPBOREN = OFF, Low power BOR is disabled
  5538                           ;	Brown-out Reset Enable bits
  5539                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5540   300002                     	org	3145730
  5541   300002  FF                 	db	255
  5542                           
  5543                           ;Config register CONFIG2H @ 0x300003
  5544                           ;	Brown Out Reset Voltage selection bits
  5545                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  5546                           ;	ZCD Disable bit
  5547                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5548                           ;	PPSLOCK bit One-Way Set Enable bit
  5549                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5550                           ;	Stack Full/Underflow Reset Enable bit
  5551                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5552                           ;	Extended Instruction Set Enable bit
  5553                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5554   300003                     	org	3145731
  5555   300003  FF                 	db	255
  5556                           
  5557                           ;Config register CONFIG3L @ 0x300004
  5558                           ;	WDT Period Select bits
  5559                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5560                           ;	WDT operating mode
  5561                           ;	WDTE = OFF, WDT Disabled
  5562   300004                     	org	3145732
  5563   300004  9F                 	db	159
  5564                           
  5565                           ;Config register CONFIG3H @ 0x300005
  5566                           ;	WDT Window Select bits
  5567                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5568                           ;	WDT input clock selector
  5569                           ;	WDTCCS = SC, Software Control
  5570   300005                     	org	3145733
  5571   300005  FF                 	db	255
  5572                           
  5573                           ;Config register CONFIG4L @ 0x300006
  5574                           ;	Write Protection Block 0
  5575                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5576                           ;	Write Protection Block 1
  5577                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5578                           ;	Write Protection Block 2
  5579                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5580                           ;	Write Protection Block 3
  5581                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5582                           ;	Write Protection Block 4
  5583                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  5584                           ;	Write Protection Block 5
  5585                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  5586                           ;	Write Protection Block 6
  5587                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  5588                           ;	Write Protection Block 7
  5589                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  5590   300006                     	org	3145734
  5591   300006  FF                 	db	255
  5592                           
  5593                           ;Config register CONFIG4H @ 0x300007
  5594                           ;	Configuration Register Write Protection bit
  5595                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  5596                           ;	Boot Block Write Protection bit
  5597                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5598                           ;	Data EEPROM Write Protection bit
  5599                           ;	WRTD = OFF, Data EEPROM not write-protected
  5600                           ;	Scanner Enable bit
  5601                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  5602                           ;	Low Voltage Programming Enable bit
  5603                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5604   300007                     	org	3145735
  5605   300007  FF                 	db	255
  5606                           
  5607                           ;Config register CONFIG5L @ 0x300008
  5608                           ;	UserNVM Program Memory Code Protection bit
  5609                           ;	CP = OFF, UserNVM code protection disabled
  5610                           ;	DataNVM Memory Code Protection bit
  5611                           ;	CPD = OFF, DataNVM code protection disabled
  5612   300008                     	org	3145736
  5613   300008  FF                 	db	255
  5614                           
  5615                           ;Config register CONFIG5H @ 0x300009
  5616                           ;	unspecified, using default values
  5617   300009                     	org	3145737
  5618   300009  FF                 	db	255
  5619                           
  5620                           ;Config register CONFIG6L @ 0x30000A
  5621                           ;	Table Read Protection Block 0
  5622                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5623                           ;	Table Read Protection Block 1
  5624                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5625                           ;	Table Read Protection Block 2
  5626                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5627                           ;	Table Read Protection Block 3
  5628                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5629                           ;	Table Read Protection Block 4
  5630                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  5631                           ;	Table Read Protection Block 5
  5632                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  5633                           ;	Table Read Protection Block 6
  5634                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  5635                           ;	Table Read Protection Block 7
  5636                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  5637   30000A                     	org	3145738
  5638   30000A  FF                 	db	255
  5639                           
  5640                           ;Config register CONFIG6H @ 0x30000B
  5641                           ;	Boot Block Table Read Protection bit
  5642                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5643   30000B                     	org	3145739
  5644   30000B  FF                 	db	255
  5645                           tosu	equ	0xFFF
  5646                           tosh	equ	0xFFE
  5647                           tosl	equ	0xFFD
  5648                           stkptr	equ	0xFFC
  5649                           pclatu	equ	0xFFB
  5650                           pclath	equ	0xFFA
  5651                           pcl	equ	0xFF9
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           indf0	equ	0xFEF
  5659                           postinc0	equ	0xFEE
  5660                           postdec0	equ	0xFED
  5661                           preinc0	equ	0xFEC
  5662                           plusw0	equ	0xFEB
  5663                           fsr0h	equ	0xFEA
  5664                           fsr0l	equ	0xFE9
  5665                           wreg	equ	0xFE8
  5666                           indf1	equ	0xFE7
  5667                           postinc1	equ	0xFE6
  5668                           postdec1	equ	0xFE5
  5669                           preinc1	equ	0xFE4
  5670                           plusw1	equ	0xFE3
  5671                           fsr1h	equ	0xFE2
  5672                           fsr1l	equ	0xFE1
  5673                           bsr	equ	0xFE0
  5674                           indf2	equ	0xFDF
  5675                           postinc2	equ	0xFDE
  5676                           postdec2	equ	0xFDD
  5677                           preinc2	equ	0xFDC
  5678                           plusw2	equ	0xFDB
  5679                           fsr2h	equ	0xFDA
  5680                           fsr2l	equ	0xFD9
  5681                           status	equ	0xFD8

Data Sizes:
    Strings     233
    Constant    90
    Data        1
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160      0      47
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    S630$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_UserInterruptHandler(), Timer0_DefaultOverflowCallback(), 

    S782$20$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorCallback(), 

    S782$21$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorCallback(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1710$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1710$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_6(CODE[49]), STR_5(CODE[58]), STR_4(CODE[38]), STR_3(CODE[23]), 
		 -> STR_2(CODE[26]), STR_1(CODE[39]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 58
		 -> STR_6(CODE[49]), STR_5(CODE[58]), STR_4(CODE[38]), STR_3(CODE[23]), 
		 -> STR_2(CODE[26]), STR_1(CODE[39]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 58
		 -> STR_6(CODE[49]), STR_5(CODE[58]), STR_4(CODE[38]), STR_3(CODE[23]), 
		 -> STR_2(CODE[26]), STR_1(CODE[39]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1750$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_6(CODE[49]), STR_5(CODE[58]), STR_4(CODE[38]), STR_3(CODE[23]), 
		 -> STR_2(CODE[26]), STR_1(CODE[39]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    EUSART2_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorCallback(), 

    EUSART2_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorCallback(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorCallback(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorCallback(), NULL(), 

    S782$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART2_OverrunErrorCallbackRegister(), 

    UART2.OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART2_OverrunErrorCallbackRegister(), 

    S782$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART2_FramingErrorCallbackRegister(), 

    UART2.FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART2_FramingErrorCallbackRegister(), 

    S782$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART2_ErrorGet(), 

    UART2.ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART2_ErrorGet(), 

    S782$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART2.BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S782$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    UART2.BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S782$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    UART2.BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S782$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    UART2.AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S782$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_AutoBaudQuery(), 

    UART2.AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_AutoBaudQuery(), 

    S782$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART2_AutoBaudSet(), 

    UART2.AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART2_AutoBaudSet(), 

    S782$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_TransmitDisable(), 

    UART2.TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_TransmitDisable(), 

    S782$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_TransmitEnable(), 

    UART2.TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_TransmitEnable(), 

    S782$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_IsTxDone(), 

    UART2.IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_IsTxDone(), 

    S782$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_IsTxReady(), 

    UART2.IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_IsTxReady(), 

    S782$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_IsRxReady(), 

    UART2.IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART2_IsRxReady(), 

    S782$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART2_Write(), 

    UART2.Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART2_Write(), 

    S782$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART2_Read(), 

    UART2.Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART2_Read(), 

    S782$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Deinitialize(), 

    UART2.Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Deinitialize(), 

    S782$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Initialize(), 

    UART2.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Initialize(), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_UserInterruptHandler(), Timer0_DefaultOverflowCallback(), 

    Timer0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_UserInterruptHandler(), Timer0_DefaultOverflowCallback(), NULL(), 

    S630TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0.Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S630TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), 

    Timer0.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), 

    S630TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> Timer0_Reload(), 

    Timer0.PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> Timer0_Reload(), 

    S630TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> Timer0_Stop(), 

    Timer0.Stop	PTR FTN()void  size(3) Largest target is 1
		 -> Timer0_Stop(), 

    S630TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> Timer0_Start(), 

    Timer0.Start	PTR FTN()void  size(3) Largest target is 1
		 -> Timer0_Start(), 

    S630TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> Timer0_Initialize(), 

    Timer0.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> Timer0_Initialize(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), INT0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_IsTxReady
    _putch->_EUSART2_Write
    _read_prec_or_width->___wmul
    _Timer0_Initialize->_Timer0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_FramingErrorCallbackRegister
    _EUSART2_Initialize->_EUSART2_OverrunErrorCallbackRegister
    _CalculateFlashCRC->_CRC_GetCalculatedResult
    _CRC_GetCalculatedResult->_CRC_ReverseValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    8428
                                             75 COMRAM     6     6      0
                  _CalculateFlashCRC
                        _EEPROM_Read
                       _EEPROM_Write
                         _NVM_IsBusy
                   _NVM_UnlockKeySet
                  _SYSTEM_Initialize
    _Timer0_OverflowCallbackRegister
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5668
                                             69 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5156
                                             61 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    4800
                                             47 COMRAM    14     8      6
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                16    12      4    2825
                                             31 COMRAM    16    12      4
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2331
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1151
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     750
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      68
                                              3 COMRAM     1     1      0
                  _EUSART2_IsTxReady
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_IsTxReady                                    1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              8 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     708
                   _CLOCK_Initialize
                     _CRC_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
                  _Timer0_Initialize
 ---------------------------------------------------------------------------------
 (2) _Timer0_Initialize                                    0     0      0     174
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _Timer0_OverflowCallbackRegister                      3     0      3     174
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     240
_EUSART2_FramingErrorCallbackRegiste
_EUSART2_OverrunErrorCallbackRegiste
 ---------------------------------------------------------------------------------
 (3) _EUSART2_OverrunErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_FramingErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NVM_UnlockKeySet                                     2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _NVM_IsBusy                                           1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         8     4      4     415
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          6     3      3     370
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _CalculateFlashCRC                                    6     4      2     717
                                             16 COMRAM     6     4      2
            _CRC_GetCalculatedResult
                      _CRC_IsCrcBusy
                  _CRC_IsScannerBusy
         _CRC_SetScannerAddressLimit
                   _CRC_StartScanner
 ---------------------------------------------------------------------------------
 (2) _CRC_StartScanner                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_SetScannerAddressLimit                           9     3      6     284
                                              2 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _CRC_IsScannerBusy                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsCrcBusy                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_GetCalculatedResult                              7     5      2     361
                                              9 COMRAM     7     5      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     7     5      2     170
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (11) _Timer0_OverflowISR                                  0     0      0       0
                                NULL *
          _TMR0_UserInterruptHandler *
     _Timer0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (12) _Timer0_DefaultOverflowCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_UserInterruptHandler                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalculateFlashCRC
     _CRC_GetCalculatedResult
       _CRC_ReverseValue
     _CRC_IsCrcBusy
     _CRC_IsScannerBusy
     _CRC_SetScannerAddressLimit
     _CRC_StartScanner
   _EEPROM_Read
   _EEPROM_Write
   _NVM_IsBusy
   _NVM_UnlockKeySet
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _CRC_Initialize
     _EUSART2_Initialize
       _EUSART2_FramingErrorCallbackRegister
       _EUSART2_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
     _Timer0_Initialize
       _Timer0_OverflowCallbackRegister
   _Timer0_OverflowCallbackRegister
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART2_IsTxReady
             _EUSART2_Write
         _read_prec_or_width
           ___wmul
         _xtoa
           _pad
             _fputc
             _fputs
               _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _Timer0_OverflowISR
     NULL(Fake) *
     _TMR0_UserInterruptHandler *
     _Timer0_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      52        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2F       5       29.4%
BITBIGSFR_1llll     69      0       0      50        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BITBIGSFR_1hhll     46      0       0      35        0.0%
BITBIGSFR_1lllh     23      0       0      38        0.0%
BITBIGSFR_1llll     22      0       0      48        0.0%
BITBIGSFR_1llll     20      0       0      41        0.0%
BITBANK14           1F      0       0      30        0.0%
BANK14              1F      0       0      31        0.0%
BIGRAM_1            1F      0       0      51        0.0%
BITBIGSFR_1hhll     1C      0       0      34        0.0%
BITBIGSFR_1llll     1A      0       0      39        0.0%
BITBIGSFR_1llll      B      0       0      49        0.0%
BITBIGSFR_1llll      A      0       0      40        0.0%
BITBIGSFR_1hhh       7      0       0      32        0.0%
BITBIGSFR_1llll      6      0       0      47        0.0%
BITBIGSFR_1llll      6      0       0      44        0.0%
BITBIGSFR_1llll      3      0       0      45        0.0%
BITBIGSFR_1hhlh      2      0       0      33        0.0%
BITBIGSFR_1llll      2      0       0      46        0.0%
BITBIGSFR_1llh       2      0       0      37        0.0%
BITBIGSFR_1llll      1      0       0      42        0.0%
BITBIGSFR_1llll      1      0       0      43        0.0%
BITBIGSFR_1hlhh      1      0       0      36        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D      53        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 12 14:55:36 2023

                                                 l60 0864                                                   l45 0AF4  
                                                 l70 0D3C                                                   l56 084A  
                                                 l64 0958                                                   l57 0828  
                                                 l59 085C                                                   l67 0CEA  
                                                 l76 09EC                                                   l79 0CD6  
                               ??_Timer0_OverflowISR 0001                                  ___wmul@multiplicand 0005  
                                                l130 0D2C                                                  l114 0D42  
                                                l118 0906                                                  l119 0908  
                                                l127 0D4C                                                  l173 0B8A  
                                                l317 0A32                                                  l430 0BDC  
                                                l351 0D14                                                  l176 09A4  
                                                l520 0AB6                                                  l338 0D22  
                                                l611 0C4A                                                  l380 0CC0  
                                                l364 0D06                                                  l452 0CF8  
                                                l277 06B2                                                  l607 0C6C  
                                                l397 0CA8                                                  l568 0BB2  
                                                l681 07FA                                                  l569 0BB4  
                                                l585 0D34                                                  l666 01BA  
                                                l597 0C8A                                                  l679 07B6  
                                                l687 0C28                                                  u810 0BA0  
                                                u811 0B9C                                                  u820 0BAE  
                                                u900 06E4                                                  u821 0BAA  
                                                u901 06E0                                                  u830 0C84  
                                                u910 073A                                                  u831 0C80  
                                                u911 0736                                                  u840 054C  
                                                u920 0748                                                  u841 0548  
                                                u921 0744                                                  u850 055E  
                                                u930 035C                                                  u851 055A  
                                                u931 0358                                                  u860 0586  
                                                u940 03A6                                                  u861 0582  
                                                u941 03A2                                                  u870 05BC  
                                                u871 05B8                                                  u880 0A76  
                                                u960 041E                                                  u881 0A72  
                                                u961 041A                                                  u890 06C2  
                                                u970 0430                                                  u891 06BE  
                                                u971 042C                                                  u955 03EE  
                                                u980 044A                                                  u981 0446  
                                                u990 049C                                                  u991 0498  
                         ??_INT0_SetInterruptHandler 0006                                                  _pad 06B4  
            fp__EUSART2_FramingErrorCallbackRegister 0000         __end_of_EUSART2_FramingErrorCallbackRegister 0C6E  
             ??_EUSART2_FramingErrorCallbackRegister 0006                ?_EUSART2_FramingErrorCallbackRegister 0003  
               _EUSART2_FramingErrorCallbackRegister 0C4C                                                  tosl 0FFD  
                                                wreg 0FE8                                      ??_CRC_IsCrcBusy 0003  
                                       _BAUD2CONbits 0E9A                                                 l1411 0530  
                                               l2300 06D6                                                 l2310 071C  
                                               l2302 06E4                                                 l1415 0538  
                                               l1407 046A                                                 l2312 0748  
                                               l2304 06F0                                                 l2320 0380  
                                               l2400 021A                                                 l1432 08B6  
                                               l1425 034C                                                 l2250 0B90  
                                               l2306 0704                                                 l2330 03B6  
                                               l2322 038A                                                 l2314 034E  
                                               l2410 027E                                                 l2402 0236  
                                               l1700 0604                                                 l2252 0BA0  
                                               l2260 0C70                                                 l1444 0602  
                                               l1452 0A76                                                 l2308 0718  
                                               l2340 03E2                                                 l2332 03C2  
                                               l2324 0390                                                 l2316 035C  
                                               l2412 02C6                                                 l2420 030E  
                                               l2404 0244                                                 l2500 0866  
                                               l1365 0C02                                                 l2510 08B8  
                                               l1710 062E                                                 l1702 0618  
                                               l2254 0BAE                                                 l2262 0C70  
                                               l2270 054C                                                 l2334 03C6  
                                               l2326 0396                                                 l2342 0402  
                                               l2318 0378                                                 l2406 024E  
                                               l2502 0872                                                 l1391 075C  
                                               l2440 0924                                                 l2520 08F4  
                                               l2512 08BC                                                 l1720 0664  
                                               l1712 0630                                                 l1704 061A  
                                               l2360 04F6                                                 l2352 046C  
                                               l2248 0B8C                                                 l2264 0C84  
                                               l2272 055E                                                 l2344 041E  
                                               l2336 03D6                                                 l2328 03A6  
                                               l2408 025E                                                 l2424 0320  
                                               l2504 088E                                                 l2370 0836  
                                               l2442 0934                                                 l2434 090C  
                                               l2450 0CD8                                                 l2610 0762  
                                               l2530 0B60                                                 l2522 0902  
                                               l2514 08CA                                                 l1650 0ACE  
                                               l1642 0AB8                                                 l1722 066A  
                                               l1714 065E                                                 l1706 061C  
                                               l2290 0C04                                                 l2362 0504  
                                               l2354 0474                                                 l2258 0D30  
                                               l2274 0568                                                 l2282 0A34  
                                               l1386 06F8                                                 l2346 0430  
                                               l2338 03DC                                                 l2418 02DE  
                                               l2506 08AE                                                 l2602 0BDE  
                                               l1395 0368                                                 l2372 083E  
                                               l2364 07FC                                                 l2444 0948  
                                               l2436 090C                                                 l2460 09C6  
                                               l2620 07B2                                                 l2612 0764  
                                               l2540 0B86                                                 l2532 0B64  
                                               l2516 08D8                                                 l1660 0AE8  
                                               l1652 0AD2                                                 l1644 0ABA  
                                               l2380 0CFA                                                 l1724 066C  
                                               l1716 0660                                                 l1708 0626  
                                               l2292 0C20                                                 l2356 049C  
                                               l2276 0586                                                 l2268 053A  
                                               l2284 0A40                                                 l2348 044A  
                                               l2604 0BE6                                                 l2700 0100  
                                               l1389 073A                                                 l1397 0370  
                                               l2374 0844                                                 l2366 0804  
                                               l2446 0950                                                 l2438 0912  
                                               l2462 09CA                                                 l2454 0D36  
                                               l2622 07DC                                                 l2614 0766  
                                               l2534 0B7E                                                 l2550 0980  
                                               l2518 08E6                                                 l2526 0D24  
                                               l1742 0CAA                                                 l1654 0AE0  
                                               l1646 0AC2                                                 l2390 0C3E  
                                               l2470 09EE                                                 l1582 0D4A  
                                               l1726 066E                                                 l1718 0662  
                                               l2382 0CEC                                                 l2358 04D6  
                                               l2278 05BC                                                 l2286 0A52  
                                               l2710 014A                                                 l2702 0110  
                                               l2368 081C                                                 l2464 09E8  
                                               l2456 09A6                                                 l2624 07F2  
                                               l2616 0786                                                 l2608 075E  
                                               l2536 0B82                                                 l2560 0998  
                                               l2552 0984                                                 l2544 095A  
                                               l2528 0D28                                                 l1656 0AE4  
                                               l1648 0AC4                                                 l2384 0C4C  
                                               l2376 0D16                                                 l2480 0A20  
                                               l2472 09F6                                                 l1728 0670  
                                               l2288 0A56                                                 l2296 06B4  
                                               l2392 01D4                                                 l2720 01AC  
                                               l2712 0160                                                 l2704 011C  
                                               l2466 0CC2                                                 l2458 09AA  
                                               l2618 079E                                                 l2538 0B84  
                                               l2562 09A2                                                 l2554 0988  
                                               l2546 0962                                                 l1658 0AE6  
                                               l2386 0C60                                                 l2482 0A78  
                                               l2378 0D08                                                 l2474 0A06  
                                               l2490 0BC2                                                 l2570 0C8C  
                                               l2298 06C2                                                 l2394 01FC  
                                               l2722 01B8                                                 l2714 0174  
                                               l2706 0120                                                 l2556 098A  
                                               l2548 0966                                                 l2388 0C2A  
                                               l2484 0A8E                                                 l2476 0A0A  
                                               l2492 0BD2                                                 l2572 0C98  
                                               l2396 020A                                                 l2724 01BE  
                                               l2716 0180                                                 l2708 0138  
                                               l2558 098E                                                 l2486 0A9E  
                                               l2478 0A1C                                                 l2494 0BD6  
                                               l2574 0C9C                                                 l2398 0216  
                                               l2726 01CA                                                 l2718 0194  
                                               l2670 000C                                                 l2496 0BD8  
                                               l2488 0BB6                                                 l2576 0CA0  
                                               l2680 0030                                                 l2672 0010  
                                               l1698 0D3E                                                 l2578 0CA4  
                                               l2690 009C                                                 l2682 005A  
                                               l2674 0012                                                 l2666 0000  
                                               l2748 0300                                                 l2692 00B0  
                                               l2684 0070                                                 l2676 0014  
                                               l2668 0008                                                 l2694 00C4  
                                               l2686 0084                                                 l2678 0024  
                                               ?_pad 0015                                                 l2696 00D8  
                                               l2688 0090                                                 l2698 00EC  
                                               STR_1 FF80                                                 STR_2 FFCD  
                                               STR_3 FFE7                                                 STR_4 FFA7  
                                               STR_5 FF15                                                 STR_6 FF4F  
                                               u1000 0530                                                 u1001 052C  
                                               u1010 0816                                                 u1020 0836  
                                               u1100 0CE8                                                 u1021 0832  
                                               u1101 0CE2                                                 u1030 085C  
                                               u1110 0CD4                                                 u1031 0858  
                                               u1015 0810                                                 u1111 0CCE  
                                               u1040 0C60                                                 u1120 08AE  
                                               u1041 0C5C                                                 u1121 08AA  
                                               u1106 0CEA                                                 u1130 08CA  
                                               u1050 0C3E                                                 u1131 08C6  
                                               u1051 0C3A                                                 u1116 0CD6  
                                               u1300 07CA                                                 u1140 08D8  
                                               u1060 01FC                                                 u1141 08D4  
                                               u1061 01F8                                                 u1310 07DC  
                                               u1150 08E6                                                 u1070 0244  
                                               u1311 07D8                                                 u1151 08E2  
                                               u1071 0240                                                 u1160 08F4  
                                               u1080 027E                                                 u1161 08F0  
                                               u1081 027A                                                 u1090 0934  
                                               u1170 0902                                                 u1091 0930  
                                               u1171 08FE                                                 u1420 0084  
                                               u1421 0080                                                 _LATA 0F82  
                                               u1270 079E                                                 u1430 00D8  
                                               _LATB 0F83                                                 u1271 079A  
                                               u1431 00D4                                                 _LATC 0F84  
                                               u1280 07B2                                                 u1440 0100  
                                               _LATD 0F85                                                 u1281 07AE  
                                               u1185 09A0                                                 u1441 00FC  
                                               _LATE 0F86                                                 u1290 07C8  
                                               u1186 09A2                                                 u1450 0110  
                                               u1291 07C2                                                 u1451 010C  
                                               u1460 01AC                                                 u1461 01A8  
                                               _WPUA 0F0B                                                 _WPUB 0F13  
                                               _WPUC 0F1B                                                 _WPUD 0F20  
                                               _WPUE 0F28                                        _EUSART2_Write 0D2E  
                            __end_of_NVM_StatusClear 0D4E                                                 _dbuf 006F  
                                               _main 0000                                                 _prec 0057  
                                               pad@i 001C                                                 pad@p 0019  
                                               fsr1h 0FE2                                                 fsr2h 0FDA  
                                               indf2 0FDF                                                 fsr1l 0FE1  
                                               pad@w 001E                                                 fsr2l 0FD9  
                                               btemp 005F                                                 _xtoa 034E  
                                       _unlockKeyLow 005D                            ?_INT2_SetInterruptHandler 0003  
                                               prodh 0FF4                                                 prodl 0FF3  
                                               start 0076                                         ___param_bank 0000  
                               __end_of_EEPROM_Write 09A6                                                ??_pad 001B  
                                              ?_main 0001                                                ?_xtoa 0020  
                                              _IOCAF 0F05                                                _IOCBF 0F0D  
                                              _IOCCF 0F15                                                _IOCAN 0F06  
                                              _IOCEF 0F22                                                _IOCAP 0F07  
                                              _IOCBN 0F0E                                                _IOCBP 0F0F  
                                              _IOCCN 0F16                                                _IOCCP 0F17  
                                              _IOCEN 0F23                                                _IOCEP 0F24  
                                              i2l322 0038                                                i2l327 006A  
                                              i2l280 0D50                                                i2l328 006A  
                                              i2l455 0D4E                                                i2l449 0B2A  
                                              i2l684 0D48                                                _OSCEN 0ED7  
                                              _UART2 FEBB                                         vfpfcnvrt@fmt 0032  
                                              _TMR0H 0FD3                                                _TMR0L 0FD2  
                                              _TRISA 0F87                                                _TRISB 0F88  
                                              _TRISC 0F89                                                _TRISD 0F8A  
                                              _TRISE 0F8B                             __end_of_NVM_UnlockKeySet 0D2E  
                            __end_of_PIN_MANAGER_IOC 0D52                                                _flags 005B  
                                read_prec_or_width@c 000F                                  read_prec_or_width@n 0010  
                                              _fputc 053A                                                _fputs 0A34  
                                              pad@fp 0015                                                _width 0055  
                                              _putch 0C6E                             _INT1_SetInterruptHandler 0D08  
                                      _unlockKeyHigh 005C                                       ?_EUSART2_Write 0001  
                                              pclath 0FFA                                                pclatu 0FFB  
                                              tablat 0FF5                                                ttemp5 0060  
                                              ttemp6 0063                                                ttemp7 0067  
                                              status 0FD8                                                wtemp8 0060  
                                              xtoa@c 002F                                                xtoa@d 0022  
                                              xtoa@i 002D                                                xtoa@p 002B  
                                              xtoa@w 0027                                          ?_NVM_IsBusy 0001  
                                   EEPROM_Write@data 0006                                      __initialization 0B2C  
                                       __end_of_main 01D4                                         __end_of_xtoa 046C  
                               fp__EUSART2_IsTxReady 0000                        CRC_GetCalculatedResult@result 000F  
                        ?_INTERRUPT_InterruptManager 0001                                     ??_CRC_Initialize 0003  
                                             ??_main 004C                                               ??_xtoa 0024  
                                      __activetblptr 0003              fp__EUSART2_OverrunErrorCallbackRegister 0000  
       __end_of_EUSART2_OverrunErrorCallbackRegister 0C4C               ??_EUSART2_OverrunErrorCallbackRegister 0006  
              ?_EUSART2_OverrunErrorCallbackRegister 0003                 _EUSART2_OverrunErrorCallbackRegister 0C2A  
                         __end_of_read_prec_or_width 053A                                  CRC_ReverseValue@crc 0003  
EUSART2_OverrunErrorCallbackRegister@callbackHandler 0003  EUSART2_FramingErrorCallbackRegister@callbackHandler 0003  
                         __end_of_EUSART2_Initialize 0AB8                                               ?_fputc 0005  
                                             ?_fputs 000E                                               _ANSELA 0F0C  
                                             ?_putch 0001                                               _ANSELB 0F14  
                                             _ANSELC 0F1C                                               _ANSELD 0F21  
                                             _ANSELE 0F29                                               _T0CON0 0FD4  
                                             _T0CON1 0FD5                                               _RC2REG 0E94  
                                             _RD0PPS 0EFA                                               _RC2STA 0E98  
                                             _ODCONA 0F0A                      CRC_GetCalculatedResult@xorValue 000A  
                                             _ODCONB 0F12                                               _ODCONC 0F1A  
                                             _ODCOND 0F1F                                               _ODCONE 0F27  
                                             i2l2630 0022                                               i2l2632 0030  
                                             i2l2634 0046                                               i2l2564 0AF6  
                                             i2l2636 0054                                               i2l2628 0012  
                                             i2l2566 0AFA                                               i2l2638 0062  
                                             i2l2568 0B10                                               i2l2498 0D44  
                                             _INLVLA 0F08                                               _INLVLB 0F10  
                                             _INLVLC 0F18                                               _INLVLD 0F1D  
                                             _INLVLE 0F25                                               _TABLAT 0FF5  
                                             _OSCFRQ 0ED9                                               _RX2PPS 0E88  
                                             _TX2REG 0E95                                               _TX2STA 0E99  
                                   ?_NVM_StatusClear 0001                                               _Timer0 FF03  
                                       vfprintf@cfmt 0044                                               ___wmul 0C04  
                               read_prec_or_width@ap 000B                                               clear_0 0B44  
                                             clear_1 0B50                          CalculateFlashCRC@busyStatus 0015  
                                             isa$std 0001                          _EUSART2_FramingErrorHandler 0063  
                                             _printf 0BDE                                               pad@buf 0017  
                                  ?_CLOCK_Initialize 0001                                               fputc@c 0005  
                       _INT2_DefaultInterruptHandler 0000                                               fputs@c 0012  
                                             fputs@i 0013                                         __pdataCOMRAM 005E  
                                             fputs@s 000E                                   ??_CLOCK_Initialize 0003  
                                       __mediumconst FEBA                              CalculateFlashCRC@CRCVal 0013  
                                             tblptrh 0FF7                                               tblptrl 0FF6  
                                             tblptru 0FF8                                     __end_of_vfprintf 08B8  
                                    ??_EUSART2_Write 0003             INT2_SetInterruptHandler@InterruptHandler 0003  
           INT1_SetInterruptHandler@InterruptHandler 0003             INT0_SetInterruptHandler@InterruptHandler 0003  
                                   ?_PIN_MANAGER_IOC 0001                                               xtoa@fp 0020  
                                   ??_NVM_Initialize 0003                                    _SYSTEM_Initialize 0C8C  
                 fp__Timer0_OverflowCallbackRegister 0000              __end_of_Timer0_OverflowCallbackRegister 0CFA  
                  ??_Timer0_OverflowCallbackRegister 0006                     ?_Timer0_OverflowCallbackRegister 0003  
                    _Timer0_OverflowCallbackRegister 0CEC                                           __accesstop 0060  
                            __end_of__initialization 0B56                                   ?_SYSTEM_Initialize 0001  
                                      ___rparam_used 0001                              _CRC_GetCalculatedResult 090A  
                                      __end_of_UART2 FF03                                       __pcstackCOMRAM 0001  
                                ??_SYSTEM_Initialize 0006                                        __end_of_fputc 0604  
                                      __end_of_fputs 0A78                                        __end_of_putch 0C8C  
                                    _periodicCRCflag 005E                       CRC_GetCalculatedResult@reverse 000E  
                _EUSART2_DefaultFramingErrorCallback 0000                     __end_of_INT2_SetInterruptHandler 0D08  
                                   _CRC_ReverseValue 07FC                                              ??_fputc 0009  
                          __end_of_SYSTEM_Initialize 0CAA                                              ??_fputs 0012  
                                            ??_putch 0004                                         _EEPROM_Write 095A  
                                         __pbssBANK0 0060                                fp__EUSART2_Initialize 0000  
                              _INT0_InterruptHandler 0052                                 CRC_ReverseValue@mask 0008  
                                            ?___wmul 0003                                              _CRCACCH 0F72  
                                            _CRCACCL 0F71                                              ?_printf 0046  
                                            _CRCDATH 0F70                                              _CRCDATL 0F6F  
                                            _CRCCON0 0F77                                              _CRCCON1 0F78  
                                            _CRCXORH 0F76                                              _CRCXORL 0F75  
                                   _EUSART2_IsTxDone 0000                           ??_INT1_SetInterruptHandler 0006  
                                            _SP2BRGH 0E97                                              _SP2BRGL 0E96  
                                   _EUSART2_ErrorGet 0000                                              _OSCCON1 0ED3  
                                            _OSCCON3 0ED5                                              _TBLPTRH 0FF7  
                                            _TBLPTRL 0FF6                                              _TBLPTRU 0FF8  
                                            _NVMADRH 0F7A                                              _NVMADRL 0F79  
                                  ?_NVM_UnlockKeySet 0003                                              _NVMADRU 0F7B  
                                            _NVMDATH 0F7D                                              _OSCTUNE 0ED8  
                                            _NVMDATL 0F7C                                              _NVMCON2 0F81  
                                            _SLRCONA 0F09                                              _SLRCONB 0F11  
                                            _SLRCONC 0F19                                              _SLRCOND 0F1E  
                                            _SLRCONE 0F26                                   ??_NVM_UnlockKeySet 0005  
                              __end_of_CRC_IsCrcBusy 0CEC                            ??_CRC_GetCalculatedResult 000C  
                                       ??_NVM_IsBusy 0003                                _EUSART2_AutoBaudQuery 0000  
                          ?_INT0_SetInterruptHandler 0003                                              __Hparam 0000  
                                            __Lparam 0000                                          _Timer0_Stop 0000  
                  fp__Timer0_DefaultOverflowCallback 0000                     ??_Timer0_DefaultOverflowCallback 0001  
                    ?_Timer0_DefaultOverflowCallback 0001                                    _Timer0_Initialize 0BB6  
                                          ?_vfprintf 003E                         fp__TMR0_UserInterruptHandler 0000  
                                            __pcinit 0B2C                                   ?_Timer0_Initialize 0001  
                                            __ramtop 1000                                              __ptext0 0000  
                                            __ptext1 0BDE                                              __ptext2 0866  
                                            __ptext3 01D4                                              __ptext4 034E  
                                            __ptext5 06B4                                              __ptext6 0A34  
                                            __ptext7 053A                                              __ptext8 0C6E  
                                            __ptext9 0D2E                                read_prec_or_width@fmt 0009  
                _EUSART2_DefaultOverrunErrorCallback 0000                                   __end_of_NVM_IsBusy 090A  
                           ??_PIN_MANAGER_Initialize 0003                                  ??_Timer0_Initialize 0006  
                               end_of_initialization 0B56                                     _CRC_StartScanner 0D36  
                                          _SCANHADRH 0F48                                            _SCANHADRL 0F47  
                                          _SCANHADRU 0F49                             _INT2_SetInterruptHandler 0CFA  
                                          _SCANLADRH 0F45                                            _SCANLADRL 0F44  
                                          _SCANLADRU 0F46                                        ??_EEPROM_Read 0006  
                                            fputc@fp 0007                                              fputs@fp 0010  
                                 _read_prec_or_width 046C                                   _EUSART2_Initialize 0A78  
                          __end_of_Timer0_Initialize 0BDE                                    __end_of_vfpfcnvrt 034E  
                                            postdec2 0FDD                                  ?_read_prec_or_width 0009  
                                            postinc0 0FEE                                              postinc1 0FE6  
                                            postinc2 0FDE                                     vfpfcnvrt@convarg 0038  
                                         ??_vfprintf 0044                                  ?_EUSART2_Initialize 0001  
                              _INT1_InterruptHandler 006C                         ??_CRC_SetScannerAddressLimit 0009  
     Timer0_OverflowCallbackRegister@CallbackHandler 0003                                 ??_read_prec_or_width 000D  
                               ??_EUSART2_Initialize 0006                                         _EUSART2_Read 0000  
                               _EUSART2_Deinitialize 0000                            NVM_UnlockKeySet@unlockKey 0003  
                                __end_of_EEPROM_Read 0B8C                             __end_of_CRC_ReverseValue 0866  
                                     __end_of_Timer0 FF15                         __end_of_INTERRUPT_Initialize 0A34  
                       _INT0_DefaultInterruptHandler 0000                                          vfpfcnvrt@ap 0034  
                                        vfpfcnvrt@cp 003C                                          vfpfcnvrt@fp 0030  
                                     __end_of___wmul 0C2A                                        __pidataCOMRAM 0D52  
                                     __end_of_printf 0C04                                  start_initialization 0B2C  
                                       _SCANCON0bits 0F4A                                          __end_of_pad 075E  
                                        putch@txData 0004                                __end_of_EUSART2_Write 0D36  
                                      _Timer0_Reload 0000                                          vfprintf@fmt 0040  
                                           ??___wmul 0007                                             ??_printf 004A  
                                  _CalculateFlashCRC 075E                                          __pbssCOMRAM 0052  
                   __end_of_INT0_SetInterruptHandler 0D24                                   ?_CalculateFlashCRC 0011  
                         ?_TMR0_UserInterruptHandler 0001                                          _CRCCON0bits 0F77  
                                        _CRCCON1bits 0F78                                      main@CRCComputed 004E  
                                EUSART2_Write@txData 0003                              CRC_ReverseValue@reverse 0006  
                                ??_CalculateFlashCRC 0013                                _INT2_InterruptHandler 0069  
                                        _EEPROM_Read 0B60                               _PIN_MANAGER_Initialize 0604  
                                          __pintcode 0008                                        __pmediumconst FEBA  
                         __end_of_Timer0_OverflowISR 0B2C                             __end_of_CRC_StartScanner 0D3E  
                          __end_of_CalculateFlashCRC 07FC                         ??_INTERRUPT_InterruptManager 0001  
                 __end_of_CRC_SetScannerAddressLimit 09EE                           _CRC_SetScannerAddressLimit 09A6  
                                           _BAUD2CON 0E9A                                    ??_NVM_StatusClear 0003  
                         ??_INT2_SetInterruptHandler 0006               __end_of_Timer0_DefaultOverflowCallback 0D50  
                     _Timer0_DefaultOverflowCallback 0D4E                    __end_of_TMR0_UserInterruptHandler 0D4A  
                               _INTERRUPT_Initialize 09EE                                    _EUSART2_IsRxReady 0000  
                                  _EUSART2_IsTxReady 0B8C                                     _CLOCK_Initialize 0CAA  
                                     ___wmul@product 0007                                             _LATEbits 0F86  
                                           _SCANCON0 0F4A                            ?_INT1_SetInterruptHandler 0003  
                                 ?_EUSART2_IsTxReady 0001                                             _PIE0bits 0EBD  
                                           _SCANTRIG 0F4B                                             _PIE7bits 0EC4  
                                           i2u120_48 0B16                                             i2u120_49 0B2A  
                                           i2u132_40 0022                                             i2u132_41 001E  
                                           i2u133_40 0030                                             i2u133_41 002C  
                                           i2u134_40 0046                                             i2u134_41 0042  
                                           i2u119_40 0B10                                             i2u135_40 0054  
                                           i2u119_41 0B0C                                             i2u135_41 0050  
                                           i2u136_40 0062                                             i2u136_41 005E  
                                           _PIR0bits 0EC5                                             _PIR3bits 0EC8  
                                           _PIR7bits 0ECC                  CRC_SetScannerAddressLimit@startAddr 0003  
                                ??_EUSART2_IsTxReady 0003                                    ??_PIN_MANAGER_IOC 0001  
                                          _vfpfcnvrt 01D4                                            _xtoa$1772 0029  
                                  ___wmul@multiplier 0003                    CRC_SetScannerAddressLimit@endAddr 0006  
                                     _CRC_Initialize 0AB8                             ?_CRC_GetCalculatedResult 000A  
                          __end_of_EUSART2_IsTxReady 0BB6                                ?_INTERRUPT_Initialize 0001  
                           _INT0_SetInterruptHandler 0D16                          _EUSART2_OverrunErrorHandler 0060  
                                           __Hrparam 0000                                         _Timer0_Start 0000  
                                  _CRC_IsScannerBusy 0CC2                                           vfprintf@ap 0042  
                                           __Lrparam 0000                                           vfprintf@fp 003E  
                                     _NVM_IsBusy$336 0003                                   ?_CRC_IsScannerBusy 0001  
                                  ?_CRC_ReverseValue 0003                                           ?_vfpfcnvrt 0030  
                                 ??_CRC_ReverseValue 0005                                  ??_CRC_IsScannerBusy 0003  
                             __end_of_CRC_Initialize 0AF6                                           _T0CON0bits 0FD4  
                               fp__Timer0_Initialize 0000                                             __ptext10 0B8C  
                                           __ptext11 046C                                             __ptext20 0CFA  
                                           __ptext12 0C04                                             __ptext21 0D08  
                                           __ptext13 0C8C                                             __ptext30 095A  
                                           __ptext22 0D16                                             __ptext14 0BB6  
                                           __ptext31 0B60                                             __ptext23 0A78  
                                           __ptext15 0CEC                                             __ptext40 0AF6  
                                           __ptext32 075E                                             __ptext24 0C2A  
                                           __ptext16 0604                                             __ptext41 0D44  
                                           __ptext33 0D36                                             __ptext25 0C4C  
                                           __ptext17 0D3E                                             __ptext42 0D4E  
                                           __ptext34 09A6                                             __ptext26 0AB8  
                                           __ptext18 0D4A                                             __ptext43 0D50  
                                           __ptext35 0CC2                                             __ptext27 0CAA  
                                           __ptext19 09EE                                             __ptext44 0000  
                                           __ptext36 0CD8                                             __ptext28 0D24  
                                           __ptext37 090A                                             __ptext29 08B8  
                                           __ptext38 07FC                                        ?_EEPROM_Write 0003  
                                _EUSART2_AutoBaudSet 0000                                        _CRC_IsCrcBusy 0CD8  
                          __end_of_CRC_IsScannerBusy 0CD8                                     _NVM_UnlockKeySet 0D24  
                                         _RC2STAbits 0E98                                       _NVM_Initialize 0D3E  
                                           isa$xinst 0000                              _EUSART2_TransmitDisable 0000  
                                           int$flags 005F                                             _vfprintf 0866  
                 __end_of_INTERRUPT_InterruptManager 0076                           _INTERRUPT_InterruptManager 0008  
                                          printf@fmt 0046                         _INT1_DefaultInterruptHandler 0000  
                             _EUSART2_IsTxReady$1154 0003                      __end_of_CRC_GetCalculatedResult 095A  
                                         _INTCONbits 0FF2                                      ?_CRC_Initialize 0001  
                                        _NVMCON0bits 0F7F                                          _NVMCON1bits 0F80  
                        ??_TMR0_UserInterruptHandler 0001                               ??_INTERRUPT_Initialize 0006  
                             _CalculateFlashCRC$1266 0016                                       ??_EEPROM_Write 0007  
                            _Timer0_OverflowCallback 0066                                             intlevel2 0000  
                                     ?_CRC_IsCrcBusy 0001                                        main@CRCStored 0050  
                                       ?_EEPROM_Read 0003                              ?_PIN_MANAGER_Initialize 0001  
                             __end_of_NVM_Initialize 0D44                                   EEPROM_Read@address 0003  
                                    _NVM_StatusClear 0D4A                               _EUSART2_TransmitEnable 0000  
                                           printf@ap 004A                                          ??_vfpfcnvrt 0036  
                                  ?_CRC_StartScanner 0001                             __end_of_CLOCK_Initialize 0CC2  
                                   fp__EUSART2_Write 0000                                   ??_CRC_StartScanner 0003  
                        ?_CRC_SetScannerAddressLimit 0003                     __end_of_INT1_SetInterruptHandler 0D16  
                                 _Timer0_OverflowISR 0AF6                                           _TX2STAbits 0E99  
                EEPROM_Write@globalInterruptBitValue 000A                       __end_of_PIN_MANAGER_Initialize 06B4  
                                ?_Timer0_OverflowISR 0001                                   _eusart2RxLastError 0059  
                                    _PIN_MANAGER_IOC 0D50                                           _NVM_IsBusy 08B8  
                                    ?_NVM_Initialize 0001                                  EEPROM_Write@address 0003  
                          _TMR0_UserInterruptHandler 0D44  
